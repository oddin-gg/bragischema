// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: bragi/bragi_service.proto

package bragi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	data_stream "oddin.gg/bragi/data_stream"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_bragi_bragi_service_proto protoreflect.FileDescriptor

var file_bragi_bragi_service_proto_rawDesc = []byte{
	0x0a, 0x19, 0x62, 0x72, 0x61, 0x67, 0x69, 0x2f, 0x62, 0x72, 0x61, 0x67, 0x69, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x62, 0x72, 0x61,
	0x67, 0x69, 0x1a, 0x2c, 0x62, 0x72, 0x61, 0x67, 0x69, 0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x21, 0x62, 0x72, 0x61, 0x67, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x32, 0xc0, 0x0a, 0x0a, 0x05, 0x42, 0x72, 0x61, 0x67, 0x69, 0x12, 0x63, 0x0a,
	0x06, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x2a, 0x2e, 0x62, 0x72, 0x61, 0x67, 0x69, 0x2e,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x72, 0x61, 0x67, 0x69, 0x2e, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x71, 0x0a, 0x0b, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x2f, 0x2e, 0x62, 0x72, 0x61, 0x67, 0x69, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x62, 0x72, 0x61, 0x67, 0x69, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x0e, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x2e, 0x62, 0x72, 0x61, 0x67, 0x69, 0x2e,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x62, 0x72,
	0x61, 0x67, 0x69, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x95, 0x01, 0x0a, 0x18, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12,
	0x3c, 0x2e, 0x62, 0x72, 0x61, 0x67, 0x69, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63,
	0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x54, 0x65,
	0x61, 0x6d, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e,
	0x62, 0x72, 0x61, 0x67, 0x69, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x12, 0x4c,
	0x61, 0x73, 0x74, 0x46, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x36, 0x2e, 0x62, 0x72, 0x61, 0x67, 0x69, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x4c, 0x61, 0x73, 0x74, 0x46, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x62, 0x72, 0x61, 0x67,
	0x69, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x4c, 0x61, 0x73, 0x74, 0x46, 0x69, 0x76, 0x65,
	0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x61, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x35, 0x2e, 0x62, 0x72, 0x61,
	0x67, 0x69, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x61, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x36, 0x2e, 0x62, 0x72, 0x61, 0x67, 0x69, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8d, 0x01, 0x0a, 0x14,
	0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x12, 0x38, 0x2e, 0x62, 0x72, 0x61, 0x67, 0x69, 0x2e, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39,
	0x2e, 0x62, 0x72, 0x61, 0x67, 0x69, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x54, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x99, 0x01, 0x0a, 0x18,
	0x54, 0x65, 0x61, 0x6d, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x3c, 0x2e, 0x62, 0x72, 0x61, 0x67, 0x69,
	0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x54, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x62, 0x72, 0x61, 0x67, 0x69, 0x2e, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa8, 0x01, 0x0a, 0x1d, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x41, 0x63, 0x63, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x41, 0x2e, 0x62, 0x72, 0x61, 0x67,
	0x69, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x62,
	0x72, 0x61, 0x67, 0x69, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x62, 0x0a, 0x0c, 0x4c, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x65,
	0x65, 0x64, 0x12, 0x26, 0x2e, 0x62, 0x72, 0x61, 0x67, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x62, 0x72, 0x61,
	0x67, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x4c,
	0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x65, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x21, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x64,
	0x64, 0x69, 0x6e, 0x2e, 0x62, 0x72, 0x61, 0x67, 0x69, 0x5a, 0x0e, 0x6f, 0x64, 0x64, 0x69, 0x6e,
	0x2e, 0x67, 0x67, 0x2f, 0x62, 0x72, 0x61, 0x67, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var file_bragi_bragi_service_proto_goTypes = []interface{}{
	(*SportsRequest)(nil),                         // 0: bragi.historical_statistics.SportsRequest
	(*TournamentsRequest)(nil),                    // 1: bragi.historical_statistics.TournamentsRequest
	(*TournamentInfoRequest)(nil),                 // 2: bragi.historical_statistics.TournamentInfoRequest
	(*TeamHistoricalStatisticsRequest)(nil),       // 3: bragi.historical_statistics.TeamHistoricalStatisticsRequest
	(*LastFiveEncountersRequest)(nil),             // 4: bragi.historical_statistics.LastFiveEncountersRequest
	(*PostMapStatisticsRequest)(nil),              // 5: bragi.historical_statistics.PostMapStatisticsRequest
	(*TournamentStatisticsRequest)(nil),           // 6: bragi.historical_statistics.TournamentStatisticsRequest
	(*TeamTournamentStatisticsRequest)(nil),       // 7: bragi.historical_statistics.TeamTournamentStatisticsRequest
	(*PlayerStatisticsAccordingRoleRequest)(nil),  // 8: bragi.historical_statistics.PlayerStatisticsAccordingRoleRequest
	(*data_stream.LiveDataFeedRequest)(nil),       // 9: bragi.data_stream.LiveDataFeedRequest
	(*SportsResponse)(nil),                        // 10: bragi.historical_statistics.SportsResponse
	(*TournamentResponse)(nil),                    // 11: bragi.historical_statistics.TournamentResponse
	(*TournamentInfoResponse)(nil),                // 12: bragi.historical_statistics.TournamentInfoResponse
	(*HistoricalStatisticsResponse)(nil),          // 13: bragi.historical_statistics.HistoricalStatisticsResponse
	(*LastFiveEncountersResponse)(nil),            // 14: bragi.historical_statistics.LastFiveEncountersResponse
	(*PostMapStatisticsResponse)(nil),             // 15: bragi.historical_statistics.PostMapStatisticsResponse
	(*TournamentStatisticsResponse)(nil),          // 16: bragi.historical_statistics.TournamentStatisticsResponse
	(*TeamTournamentStatisticsResponse)(nil),      // 17: bragi.historical_statistics.TeamTournamentStatisticsResponse
	(*PlayerStatisticsAccordingRoleResponse)(nil), // 18: bragi.historical_statistics.PlayerStatisticsAccordingRoleResponse
	(*data_stream.LiveDataFeedMessage)(nil),       // 19: bragi.data_stream.LiveDataFeedMessage
}
var file_bragi_bragi_service_proto_depIdxs = []int32{
	0,  // 0: bragi.Bragi.Sports:input_type -> bragi.historical_statistics.SportsRequest
	1,  // 1: bragi.Bragi.Tournaments:input_type -> bragi.historical_statistics.TournamentsRequest
	2,  // 2: bragi.Bragi.TournamentInfo:input_type -> bragi.historical_statistics.TournamentInfoRequest
	3,  // 3: bragi.Bragi.TeamHistoricalStatistics:input_type -> bragi.historical_statistics.TeamHistoricalStatisticsRequest
	4,  // 4: bragi.Bragi.LastFiveEncounters:input_type -> bragi.historical_statistics.LastFiveEncountersRequest
	5,  // 5: bragi.Bragi.PostMapStatistics:input_type -> bragi.historical_statistics.PostMapStatisticsRequest
	6,  // 6: bragi.Bragi.TournamentStatistics:input_type -> bragi.historical_statistics.TournamentStatisticsRequest
	7,  // 7: bragi.Bragi.TeamTournamentStatistics:input_type -> bragi.historical_statistics.TeamTournamentStatisticsRequest
	8,  // 8: bragi.Bragi.PlayerStatisticsAccordingRole:input_type -> bragi.historical_statistics.PlayerStatisticsAccordingRoleRequest
	9,  // 9: bragi.Bragi.LiveDataFeed:input_type -> bragi.data_stream.LiveDataFeedRequest
	10, // 10: bragi.Bragi.Sports:output_type -> bragi.historical_statistics.SportsResponse
	11, // 11: bragi.Bragi.Tournaments:output_type -> bragi.historical_statistics.TournamentResponse
	12, // 12: bragi.Bragi.TournamentInfo:output_type -> bragi.historical_statistics.TournamentInfoResponse
	13, // 13: bragi.Bragi.TeamHistoricalStatistics:output_type -> bragi.historical_statistics.HistoricalStatisticsResponse
	14, // 14: bragi.Bragi.LastFiveEncounters:output_type -> bragi.historical_statistics.LastFiveEncountersResponse
	15, // 15: bragi.Bragi.PostMapStatistics:output_type -> bragi.historical_statistics.PostMapStatisticsResponse
	16, // 16: bragi.Bragi.TournamentStatistics:output_type -> bragi.historical_statistics.TournamentStatisticsResponse
	17, // 17: bragi.Bragi.TeamTournamentStatistics:output_type -> bragi.historical_statistics.TeamTournamentStatisticsResponse
	18, // 18: bragi.Bragi.PlayerStatisticsAccordingRole:output_type -> bragi.historical_statistics.PlayerStatisticsAccordingRoleResponse
	19, // 19: bragi.Bragi.LiveDataFeed:output_type -> bragi.data_stream.LiveDataFeedMessage
	10, // [10:20] is the sub-list for method output_type
	0,  // [0:10] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_bragi_bragi_service_proto_init() }
func file_bragi_bragi_service_proto_init() {
	if File_bragi_bragi_service_proto != nil {
		return
	}
	file_bragi_historical_statistics_statistics_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bragi_bragi_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bragi_bragi_service_proto_goTypes,
		DependencyIndexes: file_bragi_bragi_service_proto_depIdxs,
	}.Build()
	File_bragi_bragi_service_proto = out.File
	file_bragi_bragi_service_proto_rawDesc = nil
	file_bragi_bragi_service_proto_goTypes = nil
	file_bragi_bragi_service_proto_depIdxs = nil
}
