// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: bragi/csgo_common.proto

package bragi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CsgoSide int32

const (
	CsgoSide_CSGO_SIDE_UNSPECIFIED        CsgoSide = 0
	CsgoSide_CSGO_SIDE_COUNTER_TERRORISTS CsgoSide = 1
	CsgoSide_CSGO_SIDE_TERRORISTS         CsgoSide = 2
)

// Enum value maps for CsgoSide.
var (
	CsgoSide_name = map[int32]string{
		0: "CSGO_SIDE_UNSPECIFIED",
		1: "CSGO_SIDE_COUNTER_TERRORISTS",
		2: "CSGO_SIDE_TERRORISTS",
	}
	CsgoSide_value = map[string]int32{
		"CSGO_SIDE_UNSPECIFIED":        0,
		"CSGO_SIDE_COUNTER_TERRORISTS": 1,
		"CSGO_SIDE_TERRORISTS":         2,
	}
)

func (x CsgoSide) Enum() *CsgoSide {
	p := new(CsgoSide)
	*p = x
	return p
}

func (x CsgoSide) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CsgoSide) Descriptor() protoreflect.EnumDescriptor {
	return file_bragi_csgo_common_proto_enumTypes[0].Descriptor()
}

func (CsgoSide) Type() protoreflect.EnumType {
	return &file_bragi_csgo_common_proto_enumTypes[0]
}

func (x CsgoSide) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CsgoSide.Descriptor instead.
func (CsgoSide) EnumDescriptor() ([]byte, []int) {
	return file_bragi_csgo_common_proto_rawDescGZIP(), []int{0}
}

type CsgoWinReason int32

const (
	CsgoWinReason_CSGO_ROUND_OUTCOME_UNSPECIFIED                   CsgoWinReason = 0
	CsgoWinReason_CSGO_ROUND_OUTCOME_COUNTER_TERRORISTS_ELIMINATED CsgoWinReason = 1
	CsgoWinReason_CSGO_ROUND_OUTCOME_TERRORISTS_ELIMINATED         CsgoWinReason = 2
	CsgoWinReason_CSGO_ROUND_OUTCOME_EXPLOSION                     CsgoWinReason = 3
	CsgoWinReason_CSGO_ROUND_OUTCOME_DEFUSE                        CsgoWinReason = 4
	CsgoWinReason_CSGO_ROUND_OUTCOME_TIMEOUT                       CsgoWinReason = 5
	CsgoWinReason_CSGO_ROUND_OUTCOME_TARGET_SAVED                  CsgoWinReason = 6
)

// Enum value maps for CsgoWinReason.
var (
	CsgoWinReason_name = map[int32]string{
		0: "CSGO_ROUND_OUTCOME_UNSPECIFIED",
		1: "CSGO_ROUND_OUTCOME_COUNTER_TERRORISTS_ELIMINATED",
		2: "CSGO_ROUND_OUTCOME_TERRORISTS_ELIMINATED",
		3: "CSGO_ROUND_OUTCOME_EXPLOSION",
		4: "CSGO_ROUND_OUTCOME_DEFUSE",
		5: "CSGO_ROUND_OUTCOME_TIMEOUT",
		6: "CSGO_ROUND_OUTCOME_TARGET_SAVED",
	}
	CsgoWinReason_value = map[string]int32{
		"CSGO_ROUND_OUTCOME_UNSPECIFIED":                   0,
		"CSGO_ROUND_OUTCOME_COUNTER_TERRORISTS_ELIMINATED": 1,
		"CSGO_ROUND_OUTCOME_TERRORISTS_ELIMINATED":         2,
		"CSGO_ROUND_OUTCOME_EXPLOSION":                     3,
		"CSGO_ROUND_OUTCOME_DEFUSE":                        4,
		"CSGO_ROUND_OUTCOME_TIMEOUT":                       5,
		"CSGO_ROUND_OUTCOME_TARGET_SAVED":                  6,
	}
)

func (x CsgoWinReason) Enum() *CsgoWinReason {
	p := new(CsgoWinReason)
	*p = x
	return p
}

func (x CsgoWinReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CsgoWinReason) Descriptor() protoreflect.EnumDescriptor {
	return file_bragi_csgo_common_proto_enumTypes[1].Descriptor()
}

func (CsgoWinReason) Type() protoreflect.EnumType {
	return &file_bragi_csgo_common_proto_enumTypes[1]
}

func (x CsgoWinReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CsgoWinReason.Descriptor instead.
func (CsgoWinReason) EnumDescriptor() ([]byte, []int) {
	return file_bragi_csgo_common_proto_rawDescGZIP(), []int{1}
}

type CsgoPlayerRole int32

const (
	CsgoPlayerRole_CSGO_PLAYER_ROLE_UNSPECIFIED   CsgoPlayerRole = 0
	CsgoPlayerRole_CSGO_PLAYER_ROLE_KILL_LEADER   CsgoPlayerRole = 1
	CsgoPlayerRole_CSGO_PLAYER_ROLE_ENTRY_FRAGGER CsgoPlayerRole = 2
	CsgoPlayerRole_CSGO_PLAYER_ROLE_SUPPORT       CsgoPlayerRole = 3
	CsgoPlayerRole_CSGO_PLAYER_ROLE_AWPER         CsgoPlayerRole = 4
	CsgoPlayerRole_CSGO_PLAYER_ROLE_LURKER        CsgoPlayerRole = 5
)

// Enum value maps for CsgoPlayerRole.
var (
	CsgoPlayerRole_name = map[int32]string{
		0: "CSGO_PLAYER_ROLE_UNSPECIFIED",
		1: "CSGO_PLAYER_ROLE_KILL_LEADER",
		2: "CSGO_PLAYER_ROLE_ENTRY_FRAGGER",
		3: "CSGO_PLAYER_ROLE_SUPPORT",
		4: "CSGO_PLAYER_ROLE_AWPER",
		5: "CSGO_PLAYER_ROLE_LURKER",
	}
	CsgoPlayerRole_value = map[string]int32{
		"CSGO_PLAYER_ROLE_UNSPECIFIED":   0,
		"CSGO_PLAYER_ROLE_KILL_LEADER":   1,
		"CSGO_PLAYER_ROLE_ENTRY_FRAGGER": 2,
		"CSGO_PLAYER_ROLE_SUPPORT":       3,
		"CSGO_PLAYER_ROLE_AWPER":         4,
		"CSGO_PLAYER_ROLE_LURKER":        5,
	}
)

func (x CsgoPlayerRole) Enum() *CsgoPlayerRole {
	p := new(CsgoPlayerRole)
	*p = x
	return p
}

func (x CsgoPlayerRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CsgoPlayerRole) Descriptor() protoreflect.EnumDescriptor {
	return file_bragi_csgo_common_proto_enumTypes[2].Descriptor()
}

func (CsgoPlayerRole) Type() protoreflect.EnumType {
	return &file_bragi_csgo_common_proto_enumTypes[2]
}

func (x CsgoPlayerRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CsgoPlayerRole.Descriptor instead.
func (CsgoPlayerRole) EnumDescriptor() ([]byte, []int) {
	return file_bragi_csgo_common_proto_rawDescGZIP(), []int{2}
}

type CsgoRoundStateType int32

const (
	CsgoRoundStateType_CSGO_ROUND_STATE_TYPE_UNSPECIFIED CsgoRoundStateType = 0
	CsgoRoundStateType_CSGO_ROUND_STATE_TYPE_BUY_TIME    CsgoRoundStateType = 1
	CsgoRoundStateType_CSGO_ROUND_STATE_TYPE_IN_PROGRESS CsgoRoundStateType = 2
	CsgoRoundStateType_CSGO_ROUND_STATE_TYPE_PAUSED      CsgoRoundStateType = 3
	CsgoRoundStateType_CSGO_ROUND_STATE_TYPE_FINISHED    CsgoRoundStateType = 4
)

// Enum value maps for CsgoRoundStateType.
var (
	CsgoRoundStateType_name = map[int32]string{
		0: "CSGO_ROUND_STATE_TYPE_UNSPECIFIED",
		1: "CSGO_ROUND_STATE_TYPE_BUY_TIME",
		2: "CSGO_ROUND_STATE_TYPE_IN_PROGRESS",
		3: "CSGO_ROUND_STATE_TYPE_PAUSED",
		4: "CSGO_ROUND_STATE_TYPE_FINISHED",
	}
	CsgoRoundStateType_value = map[string]int32{
		"CSGO_ROUND_STATE_TYPE_UNSPECIFIED": 0,
		"CSGO_ROUND_STATE_TYPE_BUY_TIME":    1,
		"CSGO_ROUND_STATE_TYPE_IN_PROGRESS": 2,
		"CSGO_ROUND_STATE_TYPE_PAUSED":      3,
		"CSGO_ROUND_STATE_TYPE_FINISHED":    4,
	}
)

func (x CsgoRoundStateType) Enum() *CsgoRoundStateType {
	p := new(CsgoRoundStateType)
	*p = x
	return p
}

func (x CsgoRoundStateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CsgoRoundStateType) Descriptor() protoreflect.EnumDescriptor {
	return file_bragi_csgo_common_proto_enumTypes[3].Descriptor()
}

func (CsgoRoundStateType) Type() protoreflect.EnumType {
	return &file_bragi_csgo_common_proto_enumTypes[3]
}

func (x CsgoRoundStateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CsgoRoundStateType.Descriptor instead.
func (CsgoRoundStateType) EnumDescriptor() ([]byte, []int) {
	return file_bragi_csgo_common_proto_rawDescGZIP(), []int{3}
}

type CsgoMatchStatusType int32

const (
	CsgoMatchStatusType_CSGO_MATCH_STATUS_TYPE_UNSPECIFIED CsgoMatchStatusType = 0
	CsgoMatchStatusType_CSGO_MATCH_STATUS_TYPE_LIVE        CsgoMatchStatusType = 1
	CsgoMatchStatusType_CSGO_MATCH_STATUS_TYPE_FINISHED    CsgoMatchStatusType = 2
)

// Enum value maps for CsgoMatchStatusType.
var (
	CsgoMatchStatusType_name = map[int32]string{
		0: "CSGO_MATCH_STATUS_TYPE_UNSPECIFIED",
		1: "CSGO_MATCH_STATUS_TYPE_LIVE",
		2: "CSGO_MATCH_STATUS_TYPE_FINISHED",
	}
	CsgoMatchStatusType_value = map[string]int32{
		"CSGO_MATCH_STATUS_TYPE_UNSPECIFIED": 0,
		"CSGO_MATCH_STATUS_TYPE_LIVE":        1,
		"CSGO_MATCH_STATUS_TYPE_FINISHED":    2,
	}
)

func (x CsgoMatchStatusType) Enum() *CsgoMatchStatusType {
	p := new(CsgoMatchStatusType)
	*p = x
	return p
}

func (x CsgoMatchStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CsgoMatchStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_bragi_csgo_common_proto_enumTypes[4].Descriptor()
}

func (CsgoMatchStatusType) Type() protoreflect.EnumType {
	return &file_bragi_csgo_common_proto_enumTypes[4]
}

func (x CsgoMatchStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CsgoMatchStatusType.Descriptor instead.
func (CsgoMatchStatusType) EnumDescriptor() ([]byte, []int) {
	return file_bragi_csgo_common_proto_rawDescGZIP(), []int{4}
}

var File_bragi_csgo_common_proto protoreflect.FileDescriptor

var file_bragi_csgo_common_proto_rawDesc = []byte{
	0x0a, 0x17, 0x62, 0x72, 0x61, 0x67, 0x69, 0x2f, 0x63, 0x73, 0x67, 0x6f, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x62, 0x72, 0x61, 0x67, 0x69,
	0x2a, 0x61, 0x0a, 0x08, 0x43, 0x73, 0x67, 0x6f, 0x53, 0x69, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x15,
	0x43, 0x53, 0x47, 0x4f, 0x5f, 0x53, 0x49, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x53, 0x47, 0x4f, 0x5f,
	0x53, 0x49, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x49, 0x53, 0x54, 0x53, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x53, 0x47,
	0x4f, 0x5f, 0x53, 0x49, 0x44, 0x45, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x49, 0x53, 0x54,
	0x53, 0x10, 0x02, 0x2a, 0x9d, 0x02, 0x0a, 0x0d, 0x43, 0x73, 0x67, 0x6f, 0x57, 0x69, 0x6e, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x53, 0x47, 0x4f, 0x5f, 0x52, 0x4f,
	0x55, 0x4e, 0x44, 0x5f, 0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x34, 0x0a, 0x30, 0x43, 0x53, 0x47,
	0x4f, 0x5f, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45, 0x5f,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x49, 0x53,
	0x54, 0x53, 0x5f, 0x45, 0x4c, 0x49, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x2c, 0x0a, 0x28, 0x43, 0x53, 0x47, 0x4f, 0x5f, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x4f, 0x55,
	0x54, 0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x49, 0x53, 0x54, 0x53,
	0x5f, 0x45, 0x4c, 0x49, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x20, 0x0a,
	0x1c, 0x43, 0x53, 0x47, 0x4f, 0x5f, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x4f, 0x55, 0x54, 0x43,
	0x4f, 0x4d, 0x45, 0x5f, 0x45, 0x58, 0x50, 0x4c, 0x4f, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12,
	0x1d, 0x0a, 0x19, 0x43, 0x53, 0x47, 0x4f, 0x5f, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x4f, 0x55,
	0x54, 0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x55, 0x53, 0x45, 0x10, 0x04, 0x12, 0x1e,
	0x0a, 0x1a, 0x43, 0x53, 0x47, 0x4f, 0x5f, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x4f, 0x55, 0x54,
	0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x05, 0x12, 0x23,
	0x0a, 0x1f, 0x43, 0x53, 0x47, 0x4f, 0x5f, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x4f, 0x55, 0x54,
	0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x53, 0x41, 0x56, 0x45,
	0x44, 0x10, 0x06, 0x2a, 0xcf, 0x01, 0x0a, 0x0e, 0x43, 0x73, 0x67, 0x6f, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x53, 0x47, 0x4f, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x53, 0x47, 0x4f,
	0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4b, 0x49, 0x4c,
	0x4c, 0x5f, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x53,
	0x47, 0x4f, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x45,
	0x4e, 0x54, 0x52, 0x59, 0x5f, 0x46, 0x52, 0x41, 0x47, 0x47, 0x45, 0x52, 0x10, 0x02, 0x12, 0x1c,
	0x0a, 0x18, 0x43, 0x53, 0x47, 0x4f, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x52, 0x4f,
	0x4c, 0x45, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16,
	0x43, 0x53, 0x47, 0x4f, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45,
	0x5f, 0x41, 0x57, 0x50, 0x45, 0x52, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x53, 0x47, 0x4f,
	0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4c, 0x55, 0x52,
	0x4b, 0x45, 0x52, 0x10, 0x05, 0x2a, 0xcc, 0x01, 0x0a, 0x12, 0x43, 0x73, 0x67, 0x6f, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x21,
	0x43, 0x53, 0x47, 0x4f, 0x5f, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x53, 0x47, 0x4f, 0x5f, 0x52, 0x4f, 0x55, 0x4e,
	0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x55, 0x59,
	0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x53, 0x47, 0x4f, 0x5f,
	0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x20,
	0x0a, 0x1c, 0x43, 0x53, 0x47, 0x4f, 0x5f, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x55, 0x53, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x22, 0x0a, 0x1e, 0x43, 0x53, 0x47, 0x4f, 0x5f, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48,
	0x45, 0x44, 0x10, 0x04, 0x2a, 0x83, 0x01, 0x0a, 0x13, 0x43, 0x73, 0x67, 0x6f, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x22,
	0x43, 0x53, 0x47, 0x4f, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x53, 0x47, 0x4f, 0x5f, 0x4d, 0x41, 0x54,
	0x43, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c,
	0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x53, 0x47, 0x4f, 0x5f, 0x4d, 0x41,
	0x54, 0x43, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x42, 0x21, 0x0a, 0x0f, 0x63, 0x6f,
	0x6d, 0x2e, 0x6f, 0x64, 0x64, 0x69, 0x6e, 0x2e, 0x62, 0x72, 0x61, 0x67, 0x69, 0x5a, 0x0e, 0x6f,
	0x64, 0x64, 0x69, 0x6e, 0x2e, 0x67, 0x67, 0x2f, 0x62, 0x72, 0x61, 0x67, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bragi_csgo_common_proto_rawDescOnce sync.Once
	file_bragi_csgo_common_proto_rawDescData = file_bragi_csgo_common_proto_rawDesc
)

func file_bragi_csgo_common_proto_rawDescGZIP() []byte {
	file_bragi_csgo_common_proto_rawDescOnce.Do(func() {
		file_bragi_csgo_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_bragi_csgo_common_proto_rawDescData)
	})
	return file_bragi_csgo_common_proto_rawDescData
}

var file_bragi_csgo_common_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_bragi_csgo_common_proto_goTypes = []interface{}{
	(CsgoSide)(0),            // 0: bragi.CsgoSide
	(CsgoWinReason)(0),       // 1: bragi.CsgoWinReason
	(CsgoPlayerRole)(0),      // 2: bragi.CsgoPlayerRole
	(CsgoRoundStateType)(0),  // 3: bragi.CsgoRoundStateType
	(CsgoMatchStatusType)(0), // 4: bragi.CsgoMatchStatusType
}
var file_bragi_csgo_common_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_bragi_csgo_common_proto_init() }
func file_bragi_csgo_common_proto_init() {
	if File_bragi_csgo_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bragi_csgo_common_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bragi_csgo_common_proto_goTypes,
		DependencyIndexes: file_bragi_csgo_common_proto_depIdxs,
		EnumInfos:         file_bragi_csgo_common_proto_enumTypes,
	}.Build()
	File_bragi_csgo_common_proto = out.File
	file_bragi_csgo_common_proto_rawDesc = nil
	file_bragi_csgo_common_proto_goTypes = nil
	file_bragi_csgo_common_proto_depIdxs = nil
}
