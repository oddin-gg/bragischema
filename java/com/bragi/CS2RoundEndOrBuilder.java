// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bragi/cs2.proto
// Protobuf Java Version: 4.29.3

package com.bragi;

public interface CS2RoundEndOrBuilder extends
    // @@protoc_insertion_point(interface_extends:bragi.CS2RoundEnd)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.google.protobuf.Duration map_time = 1 [json_name = "mapTime"];</code>
   * @return Whether the mapTime field is set.
   */
  boolean hasMapTime();
  /**
   * <code>.google.protobuf.Duration map_time = 1 [json_name = "mapTime"];</code>
   * @return The mapTime.
   */
  com.google.protobuf.Duration getMapTime();
  /**
   * <code>.google.protobuf.Duration map_time = 1 [json_name = "mapTime"];</code>
   */
  com.google.protobuf.DurationOrBuilder getMapTimeOrBuilder();

  /**
   * <code>.google.protobuf.Duration time_remaining = 2 [json_name = "timeRemaining"];</code>
   * @return Whether the timeRemaining field is set.
   */
  boolean hasTimeRemaining();
  /**
   * <code>.google.protobuf.Duration time_remaining = 2 [json_name = "timeRemaining"];</code>
   * @return The timeRemaining.
   */
  com.google.protobuf.Duration getTimeRemaining();
  /**
   * <code>.google.protobuf.Duration time_remaining = 2 [json_name = "timeRemaining"];</code>
   */
  com.google.protobuf.DurationOrBuilder getTimeRemainingOrBuilder();

  /**
   * <code>uint32 current_round_number = 3 [json_name = "currentRoundNumber"];</code>
   * @return The currentRoundNumber.
   */
  int getCurrentRoundNumber();

  /**
   * <code>string winning_team_urn = 4 [json_name = "winningTeamUrn"];</code>
   * @return The winningTeamUrn.
   */
  java.lang.String getWinningTeamUrn();
  /**
   * <code>string winning_team_urn = 4 [json_name = "winningTeamUrn"];</code>
   * @return The bytes for winningTeamUrn.
   */
  com.google.protobuf.ByteString
      getWinningTeamUrnBytes();

  /**
   * <code>.bragi.CS2WinReason win_reason = 5 [json_name = "winReason"];</code>
   * @return The enum numeric value on the wire for winReason.
   */
  int getWinReasonValue();
  /**
   * <code>.bragi.CS2WinReason win_reason = 5 [json_name = "winReason"];</code>
   * @return The winReason.
   */
  com.bragi.CS2WinReason getWinReason();

  /**
   * <pre>
   * keys are type of player_urn
   * </pre>
   *
   * <code>map&lt;string, .bragi.CS2PlayerBalance&gt; player_balances = 6 [json_name = "playerBalances"];</code>
   */
  int getPlayerBalancesCount();
  /**
   * <pre>
   * keys are type of player_urn
   * </pre>
   *
   * <code>map&lt;string, .bragi.CS2PlayerBalance&gt; player_balances = 6 [json_name = "playerBalances"];</code>
   */
  boolean containsPlayerBalances(
      java.lang.String key);
  /**
   * Use {@link #getPlayerBalancesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.bragi.CS2PlayerBalance>
  getPlayerBalances();
  /**
   * <pre>
   * keys are type of player_urn
   * </pre>
   *
   * <code>map&lt;string, .bragi.CS2PlayerBalance&gt; player_balances = 6 [json_name = "playerBalances"];</code>
   */
  java.util.Map<java.lang.String, com.bragi.CS2PlayerBalance>
  getPlayerBalancesMap();
  /**
   * <pre>
   * keys are type of player_urn
   * </pre>
   *
   * <code>map&lt;string, .bragi.CS2PlayerBalance&gt; player_balances = 6 [json_name = "playerBalances"];</code>
   */
  /* nullable */
com.bragi.CS2PlayerBalance getPlayerBalancesOrDefault(
      java.lang.String key,
      /* nullable */
com.bragi.CS2PlayerBalance defaultValue);
  /**
   * <pre>
   * keys are type of player_urn
   * </pre>
   *
   * <code>map&lt;string, .bragi.CS2PlayerBalance&gt; player_balances = 6 [json_name = "playerBalances"];</code>
   */
  com.bragi.CS2PlayerBalance getPlayerBalancesOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * keys are type of player_urn
   * </pre>
   *
   * <code>map&lt;string, .bragi.CS2PlayerItems&gt; player_inventories = 7 [json_name = "playerInventories"];</code>
   */
  int getPlayerInventoriesCount();
  /**
   * <pre>
   * keys are type of player_urn
   * </pre>
   *
   * <code>map&lt;string, .bragi.CS2PlayerItems&gt; player_inventories = 7 [json_name = "playerInventories"];</code>
   */
  boolean containsPlayerInventories(
      java.lang.String key);
  /**
   * Use {@link #getPlayerInventoriesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.bragi.CS2PlayerItems>
  getPlayerInventories();
  /**
   * <pre>
   * keys are type of player_urn
   * </pre>
   *
   * <code>map&lt;string, .bragi.CS2PlayerItems&gt; player_inventories = 7 [json_name = "playerInventories"];</code>
   */
  java.util.Map<java.lang.String, com.bragi.CS2PlayerItems>
  getPlayerInventoriesMap();
  /**
   * <pre>
   * keys are type of player_urn
   * </pre>
   *
   * <code>map&lt;string, .bragi.CS2PlayerItems&gt; player_inventories = 7 [json_name = "playerInventories"];</code>
   */
  /* nullable */
com.bragi.CS2PlayerItems getPlayerInventoriesOrDefault(
      java.lang.String key,
      /* nullable */
com.bragi.CS2PlayerItems defaultValue);
  /**
   * <pre>
   * keys are type of player_urn
   * </pre>
   *
   * <code>map&lt;string, .bragi.CS2PlayerItems&gt; player_inventories = 7 [json_name = "playerInventories"];</code>
   */
  com.bragi.CS2PlayerItems getPlayerInventoriesOrThrow(
      java.lang.String key);
}
