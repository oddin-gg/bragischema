// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bragi/dota2.proto
// Protobuf Java Version: 4.29.3

package com.bragi;

/**
 * Protobuf type {@code bragi.Dota2CurrentMapState}
 */
public final class Dota2CurrentMapState extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:bragi.Dota2CurrentMapState)
    Dota2CurrentMapStateOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      Dota2CurrentMapState.class.getName());
  }
  // Use Dota2CurrentMapState.newBuilder() to construct.
  private Dota2CurrentMapState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Dota2CurrentMapState() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.bragi.Dota2Proto.internal_static_bragi_Dota2CurrentMapState_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 4:
        return internalGetTeams();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.bragi.Dota2Proto.internal_static_bragi_Dota2CurrentMapState_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.bragi.Dota2CurrentMapState.class, com.bragi.Dota2CurrentMapState.Builder.class);
  }

  private int bitField0_;
  public static final int MAP_ORDER_FIELD_NUMBER = 1;
  private int mapOrder_ = 0;
  /**
   * <code>uint32 map_order = 1 [json_name = "mapOrder"];</code>
   * @return The mapOrder.
   */
  @java.lang.Override
  public int getMapOrder() {
    return mapOrder_;
  }

  public static final int MAP_PAUSED_FIELD_NUMBER = 2;
  private boolean mapPaused_ = false;
  /**
   * <code>bool map_paused = 2 [json_name = "mapPaused"];</code>
   * @return The mapPaused.
   */
  @java.lang.Override
  public boolean getMapPaused() {
    return mapPaused_;
  }

  public static final int GAME_TIME_FIELD_NUMBER = 3;
  private com.bragi.Dota2CurrentMapTimeState gameTime_;
  /**
   * <code>.bragi.Dota2CurrentMapTimeState game_time = 3 [json_name = "gameTime"];</code>
   * @return Whether the gameTime field is set.
   */
  @java.lang.Override
  public boolean hasGameTime() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.bragi.Dota2CurrentMapTimeState game_time = 3 [json_name = "gameTime"];</code>
   * @return The gameTime.
   */
  @java.lang.Override
  public com.bragi.Dota2CurrentMapTimeState getGameTime() {
    return gameTime_ == null ? com.bragi.Dota2CurrentMapTimeState.getDefaultInstance() : gameTime_;
  }
  /**
   * <code>.bragi.Dota2CurrentMapTimeState game_time = 3 [json_name = "gameTime"];</code>
   */
  @java.lang.Override
  public com.bragi.Dota2CurrentMapTimeStateOrBuilder getGameTimeOrBuilder() {
    return gameTime_ == null ? com.bragi.Dota2CurrentMapTimeState.getDefaultInstance() : gameTime_;
  }

  public static final int TEAMS_FIELD_NUMBER = 4;
  private static final class TeamsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, com.bragi.Dota2TeamCurrentMapState> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, com.bragi.Dota2TeamCurrentMapState>newDefaultInstance(
                com.bragi.Dota2Proto.internal_static_bragi_Dota2CurrentMapState_TeamsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.bragi.Dota2TeamCurrentMapState.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, com.bragi.Dota2TeamCurrentMapState> teams_;
  private com.google.protobuf.MapField<java.lang.String, com.bragi.Dota2TeamCurrentMapState>
  internalGetTeams() {
    if (teams_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          TeamsDefaultEntryHolder.defaultEntry);
    }
    return teams_;
  }
  public int getTeamsCount() {
    return internalGetTeams().getMap().size();
  }
  /**
   * <code>map&lt;string, .bragi.Dota2TeamCurrentMapState&gt; teams = 4 [json_name = "teams"];</code>
   */
  @java.lang.Override
  public boolean containsTeams(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetTeams().getMap().containsKey(key);
  }
  /**
   * Use {@link #getTeamsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.bragi.Dota2TeamCurrentMapState> getTeams() {
    return getTeamsMap();
  }
  /**
   * <code>map&lt;string, .bragi.Dota2TeamCurrentMapState&gt; teams = 4 [json_name = "teams"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, com.bragi.Dota2TeamCurrentMapState> getTeamsMap() {
    return internalGetTeams().getMap();
  }
  /**
   * <code>map&lt;string, .bragi.Dota2TeamCurrentMapState&gt; teams = 4 [json_name = "teams"];</code>
   */
  @java.lang.Override
  public /* nullable */
com.bragi.Dota2TeamCurrentMapState getTeamsOrDefault(
      java.lang.String key,
      /* nullable */
com.bragi.Dota2TeamCurrentMapState defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.bragi.Dota2TeamCurrentMapState> map =
        internalGetTeams().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .bragi.Dota2TeamCurrentMapState&gt; teams = 4 [json_name = "teams"];</code>
   */
  @java.lang.Override
  public com.bragi.Dota2TeamCurrentMapState getTeamsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.bragi.Dota2TeamCurrentMapState> map =
        internalGetTeams().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int TOWERS_FIELD_NUMBER = 5;
  private com.bragi.Dota2Towers towers_;
  /**
   * <code>.bragi.Dota2Towers towers = 5 [json_name = "towers"];</code>
   * @return Whether the towers field is set.
   */
  @java.lang.Override
  public boolean hasTowers() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>.bragi.Dota2Towers towers = 5 [json_name = "towers"];</code>
   * @return The towers.
   */
  @java.lang.Override
  public com.bragi.Dota2Towers getTowers() {
    return towers_ == null ? com.bragi.Dota2Towers.getDefaultInstance() : towers_;
  }
  /**
   * <code>.bragi.Dota2Towers towers = 5 [json_name = "towers"];</code>
   */
  @java.lang.Override
  public com.bragi.Dota2TowersOrBuilder getTowersOrBuilder() {
    return towers_ == null ? com.bragi.Dota2Towers.getDefaultInstance() : towers_;
  }

  public static final int BARRACKS_FIELD_NUMBER = 6;
  private com.bragi.Dota2Barracks barracks_;
  /**
   * <code>.bragi.Dota2Barracks barracks = 6 [json_name = "barracks"];</code>
   * @return Whether the barracks field is set.
   */
  @java.lang.Override
  public boolean hasBarracks() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>.bragi.Dota2Barracks barracks = 6 [json_name = "barracks"];</code>
   * @return The barracks.
   */
  @java.lang.Override
  public com.bragi.Dota2Barracks getBarracks() {
    return barracks_ == null ? com.bragi.Dota2Barracks.getDefaultInstance() : barracks_;
  }
  /**
   * <code>.bragi.Dota2Barracks barracks = 6 [json_name = "barracks"];</code>
   */
  @java.lang.Override
  public com.bragi.Dota2BarracksOrBuilder getBarracksOrBuilder() {
    return barracks_ == null ? com.bragi.Dota2Barracks.getDefaultInstance() : barracks_;
  }

  public static final int ROSHAN_FIELD_NUMBER = 7;
  private com.bragi.Roshan roshan_;
  /**
   * <code>.bragi.Roshan roshan = 7 [json_name = "roshan"];</code>
   * @return Whether the roshan field is set.
   */
  @java.lang.Override
  public boolean hasRoshan() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>.bragi.Roshan roshan = 7 [json_name = "roshan"];</code>
   * @return The roshan.
   */
  @java.lang.Override
  public com.bragi.Roshan getRoshan() {
    return roshan_ == null ? com.bragi.Roshan.getDefaultInstance() : roshan_;
  }
  /**
   * <code>.bragi.Roshan roshan = 7 [json_name = "roshan"];</code>
   */
  @java.lang.Override
  public com.bragi.RoshanOrBuilder getRoshanOrBuilder() {
    return roshan_ == null ? com.bragi.Roshan.getDefaultInstance() : roshan_;
  }

  public static final int DAY_TIME_FIELD_NUMBER = 8;
  private boolean dayTime_ = false;
  /**
   * <pre>
   * Flag that represents Dota2 in game day season: true =&gt; day, false =&gt; night
   * </pre>
   *
   * <code>bool day_time = 8 [json_name = "dayTime"];</code>
   * @return The dayTime.
   */
  @java.lang.Override
  public boolean getDayTime() {
    return dayTime_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (mapOrder_ != 0) {
      output.writeUInt32(1, mapOrder_);
    }
    if (mapPaused_ != false) {
      output.writeBool(2, mapPaused_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(3, getGameTime());
    }
    com.google.protobuf.GeneratedMessage
      .serializeStringMapTo(
        output,
        internalGetTeams(),
        TeamsDefaultEntryHolder.defaultEntry,
        4);
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(5, getTowers());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(6, getBarracks());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(7, getRoshan());
    }
    if (dayTime_ != false) {
      output.writeBool(8, dayTime_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (mapOrder_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, mapOrder_);
    }
    if (mapPaused_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, mapPaused_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getGameTime());
    }
    for (java.util.Map.Entry<java.lang.String, com.bragi.Dota2TeamCurrentMapState> entry
         : internalGetTeams().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.bragi.Dota2TeamCurrentMapState>
      teams__ = TeamsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, teams__);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getTowers());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getBarracks());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getRoshan());
    }
    if (dayTime_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, dayTime_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.bragi.Dota2CurrentMapState)) {
      return super.equals(obj);
    }
    com.bragi.Dota2CurrentMapState other = (com.bragi.Dota2CurrentMapState) obj;

    if (getMapOrder()
        != other.getMapOrder()) return false;
    if (getMapPaused()
        != other.getMapPaused()) return false;
    if (hasGameTime() != other.hasGameTime()) return false;
    if (hasGameTime()) {
      if (!getGameTime()
          .equals(other.getGameTime())) return false;
    }
    if (!internalGetTeams().equals(
        other.internalGetTeams())) return false;
    if (hasTowers() != other.hasTowers()) return false;
    if (hasTowers()) {
      if (!getTowers()
          .equals(other.getTowers())) return false;
    }
    if (hasBarracks() != other.hasBarracks()) return false;
    if (hasBarracks()) {
      if (!getBarracks()
          .equals(other.getBarracks())) return false;
    }
    if (hasRoshan() != other.hasRoshan()) return false;
    if (hasRoshan()) {
      if (!getRoshan()
          .equals(other.getRoshan())) return false;
    }
    if (getDayTime()
        != other.getDayTime()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + MAP_ORDER_FIELD_NUMBER;
    hash = (53 * hash) + getMapOrder();
    hash = (37 * hash) + MAP_PAUSED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getMapPaused());
    if (hasGameTime()) {
      hash = (37 * hash) + GAME_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getGameTime().hashCode();
    }
    if (!internalGetTeams().getMap().isEmpty()) {
      hash = (37 * hash) + TEAMS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetTeams().hashCode();
    }
    if (hasTowers()) {
      hash = (37 * hash) + TOWERS_FIELD_NUMBER;
      hash = (53 * hash) + getTowers().hashCode();
    }
    if (hasBarracks()) {
      hash = (37 * hash) + BARRACKS_FIELD_NUMBER;
      hash = (53 * hash) + getBarracks().hashCode();
    }
    if (hasRoshan()) {
      hash = (37 * hash) + ROSHAN_FIELD_NUMBER;
      hash = (53 * hash) + getRoshan().hashCode();
    }
    hash = (37 * hash) + DAY_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDayTime());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.bragi.Dota2CurrentMapState parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.Dota2CurrentMapState parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.Dota2CurrentMapState parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.Dota2CurrentMapState parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.Dota2CurrentMapState parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.Dota2CurrentMapState parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.Dota2CurrentMapState parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bragi.Dota2CurrentMapState parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.bragi.Dota2CurrentMapState parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.bragi.Dota2CurrentMapState parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.bragi.Dota2CurrentMapState parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bragi.Dota2CurrentMapState parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.bragi.Dota2CurrentMapState prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code bragi.Dota2CurrentMapState}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bragi.Dota2CurrentMapState)
      com.bragi.Dota2CurrentMapStateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bragi.Dota2Proto.internal_static_bragi_Dota2CurrentMapState_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 4:
          return internalGetTeams();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 4:
          return internalGetMutableTeams();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bragi.Dota2Proto.internal_static_bragi_Dota2CurrentMapState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bragi.Dota2CurrentMapState.class, com.bragi.Dota2CurrentMapState.Builder.class);
    }

    // Construct using com.bragi.Dota2CurrentMapState.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getGameTimeFieldBuilder();
        getTowersFieldBuilder();
        getBarracksFieldBuilder();
        getRoshanFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      mapOrder_ = 0;
      mapPaused_ = false;
      gameTime_ = null;
      if (gameTimeBuilder_ != null) {
        gameTimeBuilder_.dispose();
        gameTimeBuilder_ = null;
      }
      internalGetMutableTeams().clear();
      towers_ = null;
      if (towersBuilder_ != null) {
        towersBuilder_.dispose();
        towersBuilder_ = null;
      }
      barracks_ = null;
      if (barracksBuilder_ != null) {
        barracksBuilder_.dispose();
        barracksBuilder_ = null;
      }
      roshan_ = null;
      if (roshanBuilder_ != null) {
        roshanBuilder_.dispose();
        roshanBuilder_ = null;
      }
      dayTime_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.bragi.Dota2Proto.internal_static_bragi_Dota2CurrentMapState_descriptor;
    }

    @java.lang.Override
    public com.bragi.Dota2CurrentMapState getDefaultInstanceForType() {
      return com.bragi.Dota2CurrentMapState.getDefaultInstance();
    }

    @java.lang.Override
    public com.bragi.Dota2CurrentMapState build() {
      com.bragi.Dota2CurrentMapState result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.bragi.Dota2CurrentMapState buildPartial() {
      com.bragi.Dota2CurrentMapState result = new com.bragi.Dota2CurrentMapState(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.bragi.Dota2CurrentMapState result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.mapOrder_ = mapOrder_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.mapPaused_ = mapPaused_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.gameTime_ = gameTimeBuilder_ == null
            ? gameTime_
            : gameTimeBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.teams_ = internalGetTeams().build(TeamsDefaultEntryHolder.defaultEntry);
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.towers_ = towersBuilder_ == null
            ? towers_
            : towersBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.barracks_ = barracksBuilder_ == null
            ? barracks_
            : barracksBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.roshan_ = roshanBuilder_ == null
            ? roshan_
            : roshanBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.dayTime_ = dayTime_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.bragi.Dota2CurrentMapState) {
        return mergeFrom((com.bragi.Dota2CurrentMapState)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.bragi.Dota2CurrentMapState other) {
      if (other == com.bragi.Dota2CurrentMapState.getDefaultInstance()) return this;
      if (other.getMapOrder() != 0) {
        setMapOrder(other.getMapOrder());
      }
      if (other.getMapPaused() != false) {
        setMapPaused(other.getMapPaused());
      }
      if (other.hasGameTime()) {
        mergeGameTime(other.getGameTime());
      }
      internalGetMutableTeams().mergeFrom(
          other.internalGetTeams());
      bitField0_ |= 0x00000008;
      if (other.hasTowers()) {
        mergeTowers(other.getTowers());
      }
      if (other.hasBarracks()) {
        mergeBarracks(other.getBarracks());
      }
      if (other.hasRoshan()) {
        mergeRoshan(other.getRoshan());
      }
      if (other.getDayTime() != false) {
        setDayTime(other.getDayTime());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              mapOrder_ = input.readUInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              mapPaused_ = input.readBool();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              input.readMessage(
                  getGameTimeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              com.google.protobuf.MapEntry<java.lang.String, com.bragi.Dota2TeamCurrentMapState>
              teams__ = input.readMessage(
                  TeamsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableTeams().ensureBuilderMap().put(
                  teams__.getKey(), teams__.getValue());
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getTowersFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getBarracksFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 58: {
              input.readMessage(
                  getRoshanFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            case 64: {
              dayTime_ = input.readBool();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int mapOrder_ ;
    /**
     * <code>uint32 map_order = 1 [json_name = "mapOrder"];</code>
     * @return The mapOrder.
     */
    @java.lang.Override
    public int getMapOrder() {
      return mapOrder_;
    }
    /**
     * <code>uint32 map_order = 1 [json_name = "mapOrder"];</code>
     * @param value The mapOrder to set.
     * @return This builder for chaining.
     */
    public Builder setMapOrder(int value) {

      mapOrder_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 map_order = 1 [json_name = "mapOrder"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMapOrder() {
      bitField0_ = (bitField0_ & ~0x00000001);
      mapOrder_ = 0;
      onChanged();
      return this;
    }

    private boolean mapPaused_ ;
    /**
     * <code>bool map_paused = 2 [json_name = "mapPaused"];</code>
     * @return The mapPaused.
     */
    @java.lang.Override
    public boolean getMapPaused() {
      return mapPaused_;
    }
    /**
     * <code>bool map_paused = 2 [json_name = "mapPaused"];</code>
     * @param value The mapPaused to set.
     * @return This builder for chaining.
     */
    public Builder setMapPaused(boolean value) {

      mapPaused_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>bool map_paused = 2 [json_name = "mapPaused"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMapPaused() {
      bitField0_ = (bitField0_ & ~0x00000002);
      mapPaused_ = false;
      onChanged();
      return this;
    }

    private com.bragi.Dota2CurrentMapTimeState gameTime_;
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Dota2CurrentMapTimeState, com.bragi.Dota2CurrentMapTimeState.Builder, com.bragi.Dota2CurrentMapTimeStateOrBuilder> gameTimeBuilder_;
    /**
     * <code>.bragi.Dota2CurrentMapTimeState game_time = 3 [json_name = "gameTime"];</code>
     * @return Whether the gameTime field is set.
     */
    public boolean hasGameTime() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>.bragi.Dota2CurrentMapTimeState game_time = 3 [json_name = "gameTime"];</code>
     * @return The gameTime.
     */
    public com.bragi.Dota2CurrentMapTimeState getGameTime() {
      if (gameTimeBuilder_ == null) {
        return gameTime_ == null ? com.bragi.Dota2CurrentMapTimeState.getDefaultInstance() : gameTime_;
      } else {
        return gameTimeBuilder_.getMessage();
      }
    }
    /**
     * <code>.bragi.Dota2CurrentMapTimeState game_time = 3 [json_name = "gameTime"];</code>
     */
    public Builder setGameTime(com.bragi.Dota2CurrentMapTimeState value) {
      if (gameTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        gameTime_ = value;
      } else {
        gameTimeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.bragi.Dota2CurrentMapTimeState game_time = 3 [json_name = "gameTime"];</code>
     */
    public Builder setGameTime(
        com.bragi.Dota2CurrentMapTimeState.Builder builderForValue) {
      if (gameTimeBuilder_ == null) {
        gameTime_ = builderForValue.build();
      } else {
        gameTimeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.bragi.Dota2CurrentMapTimeState game_time = 3 [json_name = "gameTime"];</code>
     */
    public Builder mergeGameTime(com.bragi.Dota2CurrentMapTimeState value) {
      if (gameTimeBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          gameTime_ != null &&
          gameTime_ != com.bragi.Dota2CurrentMapTimeState.getDefaultInstance()) {
          getGameTimeBuilder().mergeFrom(value);
        } else {
          gameTime_ = value;
        }
      } else {
        gameTimeBuilder_.mergeFrom(value);
      }
      if (gameTime_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.bragi.Dota2CurrentMapTimeState game_time = 3 [json_name = "gameTime"];</code>
     */
    public Builder clearGameTime() {
      bitField0_ = (bitField0_ & ~0x00000004);
      gameTime_ = null;
      if (gameTimeBuilder_ != null) {
        gameTimeBuilder_.dispose();
        gameTimeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.bragi.Dota2CurrentMapTimeState game_time = 3 [json_name = "gameTime"];</code>
     */
    public com.bragi.Dota2CurrentMapTimeState.Builder getGameTimeBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getGameTimeFieldBuilder().getBuilder();
    }
    /**
     * <code>.bragi.Dota2CurrentMapTimeState game_time = 3 [json_name = "gameTime"];</code>
     */
    public com.bragi.Dota2CurrentMapTimeStateOrBuilder getGameTimeOrBuilder() {
      if (gameTimeBuilder_ != null) {
        return gameTimeBuilder_.getMessageOrBuilder();
      } else {
        return gameTime_ == null ?
            com.bragi.Dota2CurrentMapTimeState.getDefaultInstance() : gameTime_;
      }
    }
    /**
     * <code>.bragi.Dota2CurrentMapTimeState game_time = 3 [json_name = "gameTime"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Dota2CurrentMapTimeState, com.bragi.Dota2CurrentMapTimeState.Builder, com.bragi.Dota2CurrentMapTimeStateOrBuilder> 
        getGameTimeFieldBuilder() {
      if (gameTimeBuilder_ == null) {
        gameTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.Dota2CurrentMapTimeState, com.bragi.Dota2CurrentMapTimeState.Builder, com.bragi.Dota2CurrentMapTimeStateOrBuilder>(
                getGameTime(),
                getParentForChildren(),
                isClean());
        gameTime_ = null;
      }
      return gameTimeBuilder_;
    }

    private static final class TeamsConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.String, com.bragi.Dota2TeamCurrentMapStateOrBuilder, com.bragi.Dota2TeamCurrentMapState> {
      @java.lang.Override
      public com.bragi.Dota2TeamCurrentMapState build(com.bragi.Dota2TeamCurrentMapStateOrBuilder val) {
        if (val instanceof com.bragi.Dota2TeamCurrentMapState) { return (com.bragi.Dota2TeamCurrentMapState) val; }
        return ((com.bragi.Dota2TeamCurrentMapState.Builder) val).build();
      }

      @java.lang.Override
      public com.google.protobuf.MapEntry<java.lang.String, com.bragi.Dota2TeamCurrentMapState> defaultEntry() {
        return TeamsDefaultEntryHolder.defaultEntry;
      }
    };
    private static final TeamsConverter teamsConverter = new TeamsConverter();

    private com.google.protobuf.MapFieldBuilder<
        java.lang.String, com.bragi.Dota2TeamCurrentMapStateOrBuilder, com.bragi.Dota2TeamCurrentMapState, com.bragi.Dota2TeamCurrentMapState.Builder> teams_;
    private com.google.protobuf.MapFieldBuilder<java.lang.String, com.bragi.Dota2TeamCurrentMapStateOrBuilder, com.bragi.Dota2TeamCurrentMapState, com.bragi.Dota2TeamCurrentMapState.Builder>
        internalGetTeams() {
      if (teams_ == null) {
        return new com.google.protobuf.MapFieldBuilder<>(teamsConverter);
      }
      return teams_;
    }
    private com.google.protobuf.MapFieldBuilder<java.lang.String, com.bragi.Dota2TeamCurrentMapStateOrBuilder, com.bragi.Dota2TeamCurrentMapState, com.bragi.Dota2TeamCurrentMapState.Builder>
        internalGetMutableTeams() {
      if (teams_ == null) {
        teams_ = new com.google.protobuf.MapFieldBuilder<>(teamsConverter);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return teams_;
    }
    public int getTeamsCount() {
      return internalGetTeams().ensureBuilderMap().size();
    }
    /**
     * <code>map&lt;string, .bragi.Dota2TeamCurrentMapState&gt; teams = 4 [json_name = "teams"];</code>
     */
    @java.lang.Override
    public boolean containsTeams(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetTeams().ensureBuilderMap().containsKey(key);
    }
    /**
     * Use {@link #getTeamsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.bragi.Dota2TeamCurrentMapState> getTeams() {
      return getTeamsMap();
    }
    /**
     * <code>map&lt;string, .bragi.Dota2TeamCurrentMapState&gt; teams = 4 [json_name = "teams"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, com.bragi.Dota2TeamCurrentMapState> getTeamsMap() {
      return internalGetTeams().getImmutableMap();
    }
    /**
     * <code>map&lt;string, .bragi.Dota2TeamCurrentMapState&gt; teams = 4 [json_name = "teams"];</code>
     */
    @java.lang.Override
    public /* nullable */
com.bragi.Dota2TeamCurrentMapState getTeamsOrDefault(
        java.lang.String key,
        /* nullable */
com.bragi.Dota2TeamCurrentMapState defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.bragi.Dota2TeamCurrentMapStateOrBuilder> map = internalGetMutableTeams().ensureBuilderMap();
      return map.containsKey(key) ? teamsConverter.build(map.get(key)) : defaultValue;
    }
    /**
     * <code>map&lt;string, .bragi.Dota2TeamCurrentMapState&gt; teams = 4 [json_name = "teams"];</code>
     */
    @java.lang.Override
    public com.bragi.Dota2TeamCurrentMapState getTeamsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.bragi.Dota2TeamCurrentMapStateOrBuilder> map = internalGetMutableTeams().ensureBuilderMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return teamsConverter.build(map.get(key));
    }
    public Builder clearTeams() {
      bitField0_ = (bitField0_ & ~0x00000008);
      internalGetMutableTeams().clear();
      return this;
    }
    /**
     * <code>map&lt;string, .bragi.Dota2TeamCurrentMapState&gt; teams = 4 [json_name = "teams"];</code>
     */
    public Builder removeTeams(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableTeams().ensureBuilderMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.bragi.Dota2TeamCurrentMapState>
        getMutableTeams() {
      bitField0_ |= 0x00000008;
      return internalGetMutableTeams().ensureMessageMap();
    }
    /**
     * <code>map&lt;string, .bragi.Dota2TeamCurrentMapState&gt; teams = 4 [json_name = "teams"];</code>
     */
    public Builder putTeams(
        java.lang.String key,
        com.bragi.Dota2TeamCurrentMapState value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableTeams().ensureBuilderMap()
          .put(key, value);
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <code>map&lt;string, .bragi.Dota2TeamCurrentMapState&gt; teams = 4 [json_name = "teams"];</code>
     */
    public Builder putAllTeams(
        java.util.Map<java.lang.String, com.bragi.Dota2TeamCurrentMapState> values) {
      for (java.util.Map.Entry<java.lang.String, com.bragi.Dota2TeamCurrentMapState> e : values.entrySet()) {
        if (e.getKey() == null || e.getValue() == null) {
          throw new NullPointerException();
        }
      }
      internalGetMutableTeams().ensureBuilderMap()
          .putAll(values);
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <code>map&lt;string, .bragi.Dota2TeamCurrentMapState&gt; teams = 4 [json_name = "teams"];</code>
     */
    public com.bragi.Dota2TeamCurrentMapState.Builder putTeamsBuilderIfAbsent(
        java.lang.String key) {
      java.util.Map<java.lang.String, com.bragi.Dota2TeamCurrentMapStateOrBuilder> builderMap = internalGetMutableTeams().ensureBuilderMap();
      com.bragi.Dota2TeamCurrentMapStateOrBuilder entry = builderMap.get(key);
      if (entry == null) {
        entry = com.bragi.Dota2TeamCurrentMapState.newBuilder();
        builderMap.put(key, entry);
      }
      if (entry instanceof com.bragi.Dota2TeamCurrentMapState) {
        entry = ((com.bragi.Dota2TeamCurrentMapState) entry).toBuilder();
        builderMap.put(key, entry);
      }
      return (com.bragi.Dota2TeamCurrentMapState.Builder) entry;
    }

    private com.bragi.Dota2Towers towers_;
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Dota2Towers, com.bragi.Dota2Towers.Builder, com.bragi.Dota2TowersOrBuilder> towersBuilder_;
    /**
     * <code>.bragi.Dota2Towers towers = 5 [json_name = "towers"];</code>
     * @return Whether the towers field is set.
     */
    public boolean hasTowers() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>.bragi.Dota2Towers towers = 5 [json_name = "towers"];</code>
     * @return The towers.
     */
    public com.bragi.Dota2Towers getTowers() {
      if (towersBuilder_ == null) {
        return towers_ == null ? com.bragi.Dota2Towers.getDefaultInstance() : towers_;
      } else {
        return towersBuilder_.getMessage();
      }
    }
    /**
     * <code>.bragi.Dota2Towers towers = 5 [json_name = "towers"];</code>
     */
    public Builder setTowers(com.bragi.Dota2Towers value) {
      if (towersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        towers_ = value;
      } else {
        towersBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>.bragi.Dota2Towers towers = 5 [json_name = "towers"];</code>
     */
    public Builder setTowers(
        com.bragi.Dota2Towers.Builder builderForValue) {
      if (towersBuilder_ == null) {
        towers_ = builderForValue.build();
      } else {
        towersBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>.bragi.Dota2Towers towers = 5 [json_name = "towers"];</code>
     */
    public Builder mergeTowers(com.bragi.Dota2Towers value) {
      if (towersBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          towers_ != null &&
          towers_ != com.bragi.Dota2Towers.getDefaultInstance()) {
          getTowersBuilder().mergeFrom(value);
        } else {
          towers_ = value;
        }
      } else {
        towersBuilder_.mergeFrom(value);
      }
      if (towers_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.bragi.Dota2Towers towers = 5 [json_name = "towers"];</code>
     */
    public Builder clearTowers() {
      bitField0_ = (bitField0_ & ~0x00000010);
      towers_ = null;
      if (towersBuilder_ != null) {
        towersBuilder_.dispose();
        towersBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.bragi.Dota2Towers towers = 5 [json_name = "towers"];</code>
     */
    public com.bragi.Dota2Towers.Builder getTowersBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getTowersFieldBuilder().getBuilder();
    }
    /**
     * <code>.bragi.Dota2Towers towers = 5 [json_name = "towers"];</code>
     */
    public com.bragi.Dota2TowersOrBuilder getTowersOrBuilder() {
      if (towersBuilder_ != null) {
        return towersBuilder_.getMessageOrBuilder();
      } else {
        return towers_ == null ?
            com.bragi.Dota2Towers.getDefaultInstance() : towers_;
      }
    }
    /**
     * <code>.bragi.Dota2Towers towers = 5 [json_name = "towers"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Dota2Towers, com.bragi.Dota2Towers.Builder, com.bragi.Dota2TowersOrBuilder> 
        getTowersFieldBuilder() {
      if (towersBuilder_ == null) {
        towersBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.Dota2Towers, com.bragi.Dota2Towers.Builder, com.bragi.Dota2TowersOrBuilder>(
                getTowers(),
                getParentForChildren(),
                isClean());
        towers_ = null;
      }
      return towersBuilder_;
    }

    private com.bragi.Dota2Barracks barracks_;
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Dota2Barracks, com.bragi.Dota2Barracks.Builder, com.bragi.Dota2BarracksOrBuilder> barracksBuilder_;
    /**
     * <code>.bragi.Dota2Barracks barracks = 6 [json_name = "barracks"];</code>
     * @return Whether the barracks field is set.
     */
    public boolean hasBarracks() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>.bragi.Dota2Barracks barracks = 6 [json_name = "barracks"];</code>
     * @return The barracks.
     */
    public com.bragi.Dota2Barracks getBarracks() {
      if (barracksBuilder_ == null) {
        return barracks_ == null ? com.bragi.Dota2Barracks.getDefaultInstance() : barracks_;
      } else {
        return barracksBuilder_.getMessage();
      }
    }
    /**
     * <code>.bragi.Dota2Barracks barracks = 6 [json_name = "barracks"];</code>
     */
    public Builder setBarracks(com.bragi.Dota2Barracks value) {
      if (barracksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        barracks_ = value;
      } else {
        barracksBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>.bragi.Dota2Barracks barracks = 6 [json_name = "barracks"];</code>
     */
    public Builder setBarracks(
        com.bragi.Dota2Barracks.Builder builderForValue) {
      if (barracksBuilder_ == null) {
        barracks_ = builderForValue.build();
      } else {
        barracksBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>.bragi.Dota2Barracks barracks = 6 [json_name = "barracks"];</code>
     */
    public Builder mergeBarracks(com.bragi.Dota2Barracks value) {
      if (barracksBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          barracks_ != null &&
          barracks_ != com.bragi.Dota2Barracks.getDefaultInstance()) {
          getBarracksBuilder().mergeFrom(value);
        } else {
          barracks_ = value;
        }
      } else {
        barracksBuilder_.mergeFrom(value);
      }
      if (barracks_ != null) {
        bitField0_ |= 0x00000020;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.bragi.Dota2Barracks barracks = 6 [json_name = "barracks"];</code>
     */
    public Builder clearBarracks() {
      bitField0_ = (bitField0_ & ~0x00000020);
      barracks_ = null;
      if (barracksBuilder_ != null) {
        barracksBuilder_.dispose();
        barracksBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.bragi.Dota2Barracks barracks = 6 [json_name = "barracks"];</code>
     */
    public com.bragi.Dota2Barracks.Builder getBarracksBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getBarracksFieldBuilder().getBuilder();
    }
    /**
     * <code>.bragi.Dota2Barracks barracks = 6 [json_name = "barracks"];</code>
     */
    public com.bragi.Dota2BarracksOrBuilder getBarracksOrBuilder() {
      if (barracksBuilder_ != null) {
        return barracksBuilder_.getMessageOrBuilder();
      } else {
        return barracks_ == null ?
            com.bragi.Dota2Barracks.getDefaultInstance() : barracks_;
      }
    }
    /**
     * <code>.bragi.Dota2Barracks barracks = 6 [json_name = "barracks"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Dota2Barracks, com.bragi.Dota2Barracks.Builder, com.bragi.Dota2BarracksOrBuilder> 
        getBarracksFieldBuilder() {
      if (barracksBuilder_ == null) {
        barracksBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.Dota2Barracks, com.bragi.Dota2Barracks.Builder, com.bragi.Dota2BarracksOrBuilder>(
                getBarracks(),
                getParentForChildren(),
                isClean());
        barracks_ = null;
      }
      return barracksBuilder_;
    }

    private com.bragi.Roshan roshan_;
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Roshan, com.bragi.Roshan.Builder, com.bragi.RoshanOrBuilder> roshanBuilder_;
    /**
     * <code>.bragi.Roshan roshan = 7 [json_name = "roshan"];</code>
     * @return Whether the roshan field is set.
     */
    public boolean hasRoshan() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>.bragi.Roshan roshan = 7 [json_name = "roshan"];</code>
     * @return The roshan.
     */
    public com.bragi.Roshan getRoshan() {
      if (roshanBuilder_ == null) {
        return roshan_ == null ? com.bragi.Roshan.getDefaultInstance() : roshan_;
      } else {
        return roshanBuilder_.getMessage();
      }
    }
    /**
     * <code>.bragi.Roshan roshan = 7 [json_name = "roshan"];</code>
     */
    public Builder setRoshan(com.bragi.Roshan value) {
      if (roshanBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        roshan_ = value;
      } else {
        roshanBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>.bragi.Roshan roshan = 7 [json_name = "roshan"];</code>
     */
    public Builder setRoshan(
        com.bragi.Roshan.Builder builderForValue) {
      if (roshanBuilder_ == null) {
        roshan_ = builderForValue.build();
      } else {
        roshanBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>.bragi.Roshan roshan = 7 [json_name = "roshan"];</code>
     */
    public Builder mergeRoshan(com.bragi.Roshan value) {
      if (roshanBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0) &&
          roshan_ != null &&
          roshan_ != com.bragi.Roshan.getDefaultInstance()) {
          getRoshanBuilder().mergeFrom(value);
        } else {
          roshan_ = value;
        }
      } else {
        roshanBuilder_.mergeFrom(value);
      }
      if (roshan_ != null) {
        bitField0_ |= 0x00000040;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.bragi.Roshan roshan = 7 [json_name = "roshan"];</code>
     */
    public Builder clearRoshan() {
      bitField0_ = (bitField0_ & ~0x00000040);
      roshan_ = null;
      if (roshanBuilder_ != null) {
        roshanBuilder_.dispose();
        roshanBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.bragi.Roshan roshan = 7 [json_name = "roshan"];</code>
     */
    public com.bragi.Roshan.Builder getRoshanBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getRoshanFieldBuilder().getBuilder();
    }
    /**
     * <code>.bragi.Roshan roshan = 7 [json_name = "roshan"];</code>
     */
    public com.bragi.RoshanOrBuilder getRoshanOrBuilder() {
      if (roshanBuilder_ != null) {
        return roshanBuilder_.getMessageOrBuilder();
      } else {
        return roshan_ == null ?
            com.bragi.Roshan.getDefaultInstance() : roshan_;
      }
    }
    /**
     * <code>.bragi.Roshan roshan = 7 [json_name = "roshan"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Roshan, com.bragi.Roshan.Builder, com.bragi.RoshanOrBuilder> 
        getRoshanFieldBuilder() {
      if (roshanBuilder_ == null) {
        roshanBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.Roshan, com.bragi.Roshan.Builder, com.bragi.RoshanOrBuilder>(
                getRoshan(),
                getParentForChildren(),
                isClean());
        roshan_ = null;
      }
      return roshanBuilder_;
    }

    private boolean dayTime_ ;
    /**
     * <pre>
     * Flag that represents Dota2 in game day season: true =&gt; day, false =&gt; night
     * </pre>
     *
     * <code>bool day_time = 8 [json_name = "dayTime"];</code>
     * @return The dayTime.
     */
    @java.lang.Override
    public boolean getDayTime() {
      return dayTime_;
    }
    /**
     * <pre>
     * Flag that represents Dota2 in game day season: true =&gt; day, false =&gt; night
     * </pre>
     *
     * <code>bool day_time = 8 [json_name = "dayTime"];</code>
     * @param value The dayTime to set.
     * @return This builder for chaining.
     */
    public Builder setDayTime(boolean value) {

      dayTime_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Flag that represents Dota2 in game day season: true =&gt; day, false =&gt; night
     * </pre>
     *
     * <code>bool day_time = 8 [json_name = "dayTime"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDayTime() {
      bitField0_ = (bitField0_ & ~0x00000080);
      dayTime_ = false;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:bragi.Dota2CurrentMapState)
  }

  // @@protoc_insertion_point(class_scope:bragi.Dota2CurrentMapState)
  private static final com.bragi.Dota2CurrentMapState DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.bragi.Dota2CurrentMapState();
  }

  public static com.bragi.Dota2CurrentMapState getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Dota2CurrentMapState>
      PARSER = new com.google.protobuf.AbstractParser<Dota2CurrentMapState>() {
    @java.lang.Override
    public Dota2CurrentMapState parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Dota2CurrentMapState> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Dota2CurrentMapState> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.bragi.Dota2CurrentMapState getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

