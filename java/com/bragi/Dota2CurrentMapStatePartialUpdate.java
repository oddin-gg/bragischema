// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bragi/dota2.proto
// Protobuf Java Version: 4.29.3

package com.bragi;

/**
 * Protobuf type {@code bragi.Dota2CurrentMapStatePartialUpdate}
 */
public final class Dota2CurrentMapStatePartialUpdate extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:bragi.Dota2CurrentMapStatePartialUpdate)
    Dota2CurrentMapStatePartialUpdateOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      Dota2CurrentMapStatePartialUpdate.class.getName());
  }
  // Use Dota2CurrentMapStatePartialUpdate.newBuilder() to construct.
  private Dota2CurrentMapStatePartialUpdate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Dota2CurrentMapStatePartialUpdate() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.bragi.Dota2Proto.internal_static_bragi_Dota2CurrentMapStatePartialUpdate_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.bragi.Dota2Proto.internal_static_bragi_Dota2CurrentMapStatePartialUpdate_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.bragi.Dota2CurrentMapStatePartialUpdate.class, com.bragi.Dota2CurrentMapStatePartialUpdate.Builder.class);
  }

  private int updateCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object update_;
  public enum UpdateCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    GAME_TIME(1),
    TEAM_CURRENT_MAP_STATE(2),
    TEAM_CURRENT_MAP_PARTIAL_UPDATE(3),
    TOWERS(4),
    BARRACKS(5),
    ROSHAN(8),
    UPDATE_NOT_SET(0);
    private final int value;
    private UpdateCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UpdateCase valueOf(int value) {
      return forNumber(value);
    }

    public static UpdateCase forNumber(int value) {
      switch (value) {
        case 1: return GAME_TIME;
        case 2: return TEAM_CURRENT_MAP_STATE;
        case 3: return TEAM_CURRENT_MAP_PARTIAL_UPDATE;
        case 4: return TOWERS;
        case 5: return BARRACKS;
        case 8: return ROSHAN;
        case 0: return UPDATE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public UpdateCase
  getUpdateCase() {
    return UpdateCase.forNumber(
        updateCase_);
  }

  public static final int GAME_TIME_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Replaces "game_time" property in Dota2CurrentMapTimeState.
   * </pre>
   *
   * <code>.bragi.Dota2CurrentMapTimeState game_time = 1 [json_name = "gameTime"];</code>
   * @return Whether the gameTime field is set.
   */
  @java.lang.Override
  public boolean hasGameTime() {
    return updateCase_ == 1;
  }
  /**
   * <pre>
   * Replaces "game_time" property in Dota2CurrentMapTimeState.
   * </pre>
   *
   * <code>.bragi.Dota2CurrentMapTimeState game_time = 1 [json_name = "gameTime"];</code>
   * @return The gameTime.
   */
  @java.lang.Override
  public com.bragi.Dota2CurrentMapTimeState getGameTime() {
    if (updateCase_ == 1) {
       return (com.bragi.Dota2CurrentMapTimeState) update_;
    }
    return com.bragi.Dota2CurrentMapTimeState.getDefaultInstance();
  }
  /**
   * <pre>
   * Replaces "game_time" property in Dota2CurrentMapTimeState.
   * </pre>
   *
   * <code>.bragi.Dota2CurrentMapTimeState game_time = 1 [json_name = "gameTime"];</code>
   */
  @java.lang.Override
  public com.bragi.Dota2CurrentMapTimeStateOrBuilder getGameTimeOrBuilder() {
    if (updateCase_ == 1) {
       return (com.bragi.Dota2CurrentMapTimeState) update_;
    }
    return com.bragi.Dota2CurrentMapTimeState.getDefaultInstance();
  }

  public static final int TEAM_CURRENT_MAP_STATE_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Replaces whole value under given key in players map property in Dota2TeamCurrentMapState.
   * </pre>
   *
   * <code>.bragi.Dota2TeamCurrentMapState team_current_map_state = 2 [json_name = "teamCurrentMapState"];</code>
   * @return Whether the teamCurrentMapState field is set.
   */
  @java.lang.Override
  public boolean hasTeamCurrentMapState() {
    return updateCase_ == 2;
  }
  /**
   * <pre>
   * Replaces whole value under given key in players map property in Dota2TeamCurrentMapState.
   * </pre>
   *
   * <code>.bragi.Dota2TeamCurrentMapState team_current_map_state = 2 [json_name = "teamCurrentMapState"];</code>
   * @return The teamCurrentMapState.
   */
  @java.lang.Override
  public com.bragi.Dota2TeamCurrentMapState getTeamCurrentMapState() {
    if (updateCase_ == 2) {
       return (com.bragi.Dota2TeamCurrentMapState) update_;
    }
    return com.bragi.Dota2TeamCurrentMapState.getDefaultInstance();
  }
  /**
   * <pre>
   * Replaces whole value under given key in players map property in Dota2TeamCurrentMapState.
   * </pre>
   *
   * <code>.bragi.Dota2TeamCurrentMapState team_current_map_state = 2 [json_name = "teamCurrentMapState"];</code>
   */
  @java.lang.Override
  public com.bragi.Dota2TeamCurrentMapStateOrBuilder getTeamCurrentMapStateOrBuilder() {
    if (updateCase_ == 2) {
       return (com.bragi.Dota2TeamCurrentMapState) update_;
    }
    return com.bragi.Dota2TeamCurrentMapState.getDefaultInstance();
  }

  public static final int TEAM_CURRENT_MAP_PARTIAL_UPDATE_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Apply partial update on value under given key in teams map property in Dota2CurrentMapState.
   * </pre>
   *
   * <code>.bragi.Dota2TeamCurrentMapStatePartialUpdate team_current_map_partial_update = 3 [json_name = "teamCurrentMapPartialUpdate"];</code>
   * @return Whether the teamCurrentMapPartialUpdate field is set.
   */
  @java.lang.Override
  public boolean hasTeamCurrentMapPartialUpdate() {
    return updateCase_ == 3;
  }
  /**
   * <pre>
   * Apply partial update on value under given key in teams map property in Dota2CurrentMapState.
   * </pre>
   *
   * <code>.bragi.Dota2TeamCurrentMapStatePartialUpdate team_current_map_partial_update = 3 [json_name = "teamCurrentMapPartialUpdate"];</code>
   * @return The teamCurrentMapPartialUpdate.
   */
  @java.lang.Override
  public com.bragi.Dota2TeamCurrentMapStatePartialUpdate getTeamCurrentMapPartialUpdate() {
    if (updateCase_ == 3) {
       return (com.bragi.Dota2TeamCurrentMapStatePartialUpdate) update_;
    }
    return com.bragi.Dota2TeamCurrentMapStatePartialUpdate.getDefaultInstance();
  }
  /**
   * <pre>
   * Apply partial update on value under given key in teams map property in Dota2CurrentMapState.
   * </pre>
   *
   * <code>.bragi.Dota2TeamCurrentMapStatePartialUpdate team_current_map_partial_update = 3 [json_name = "teamCurrentMapPartialUpdate"];</code>
   */
  @java.lang.Override
  public com.bragi.Dota2TeamCurrentMapStatePartialUpdateOrBuilder getTeamCurrentMapPartialUpdateOrBuilder() {
    if (updateCase_ == 3) {
       return (com.bragi.Dota2TeamCurrentMapStatePartialUpdate) update_;
    }
    return com.bragi.Dota2TeamCurrentMapStatePartialUpdate.getDefaultInstance();
  }

  public static final int TOWERS_FIELD_NUMBER = 4;
  /**
   * <pre>
   * Replaces "towers" property in Dota2Towers.
   * </pre>
   *
   * <code>.bragi.Dota2Towers towers = 4 [json_name = "towers"];</code>
   * @return Whether the towers field is set.
   */
  @java.lang.Override
  public boolean hasTowers() {
    return updateCase_ == 4;
  }
  /**
   * <pre>
   * Replaces "towers" property in Dota2Towers.
   * </pre>
   *
   * <code>.bragi.Dota2Towers towers = 4 [json_name = "towers"];</code>
   * @return The towers.
   */
  @java.lang.Override
  public com.bragi.Dota2Towers getTowers() {
    if (updateCase_ == 4) {
       return (com.bragi.Dota2Towers) update_;
    }
    return com.bragi.Dota2Towers.getDefaultInstance();
  }
  /**
   * <pre>
   * Replaces "towers" property in Dota2Towers.
   * </pre>
   *
   * <code>.bragi.Dota2Towers towers = 4 [json_name = "towers"];</code>
   */
  @java.lang.Override
  public com.bragi.Dota2TowersOrBuilder getTowersOrBuilder() {
    if (updateCase_ == 4) {
       return (com.bragi.Dota2Towers) update_;
    }
    return com.bragi.Dota2Towers.getDefaultInstance();
  }

  public static final int BARRACKS_FIELD_NUMBER = 5;
  /**
   * <pre>
   * Replaces "barracks" property in Dota2Barracks.
   * </pre>
   *
   * <code>.bragi.Dota2Barracks barracks = 5 [json_name = "barracks"];</code>
   * @return Whether the barracks field is set.
   */
  @java.lang.Override
  public boolean hasBarracks() {
    return updateCase_ == 5;
  }
  /**
   * <pre>
   * Replaces "barracks" property in Dota2Barracks.
   * </pre>
   *
   * <code>.bragi.Dota2Barracks barracks = 5 [json_name = "barracks"];</code>
   * @return The barracks.
   */
  @java.lang.Override
  public com.bragi.Dota2Barracks getBarracks() {
    if (updateCase_ == 5) {
       return (com.bragi.Dota2Barracks) update_;
    }
    return com.bragi.Dota2Barracks.getDefaultInstance();
  }
  /**
   * <pre>
   * Replaces "barracks" property in Dota2Barracks.
   * </pre>
   *
   * <code>.bragi.Dota2Barracks barracks = 5 [json_name = "barracks"];</code>
   */
  @java.lang.Override
  public com.bragi.Dota2BarracksOrBuilder getBarracksOrBuilder() {
    if (updateCase_ == 5) {
       return (com.bragi.Dota2Barracks) update_;
    }
    return com.bragi.Dota2Barracks.getDefaultInstance();
  }

  public static final int ROSHAN_FIELD_NUMBER = 8;
  /**
   * <code>.bragi.Roshan roshan = 8 [json_name = "roshan"];</code>
   * @return Whether the roshan field is set.
   */
  @java.lang.Override
  public boolean hasRoshan() {
    return updateCase_ == 8;
  }
  /**
   * <code>.bragi.Roshan roshan = 8 [json_name = "roshan"];</code>
   * @return The roshan.
   */
  @java.lang.Override
  public com.bragi.Roshan getRoshan() {
    if (updateCase_ == 8) {
       return (com.bragi.Roshan) update_;
    }
    return com.bragi.Roshan.getDefaultInstance();
  }
  /**
   * <code>.bragi.Roshan roshan = 8 [json_name = "roshan"];</code>
   */
  @java.lang.Override
  public com.bragi.RoshanOrBuilder getRoshanOrBuilder() {
    if (updateCase_ == 8) {
       return (com.bragi.Roshan) update_;
    }
    return com.bragi.Roshan.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (updateCase_ == 1) {
      output.writeMessage(1, (com.bragi.Dota2CurrentMapTimeState) update_);
    }
    if (updateCase_ == 2) {
      output.writeMessage(2, (com.bragi.Dota2TeamCurrentMapState) update_);
    }
    if (updateCase_ == 3) {
      output.writeMessage(3, (com.bragi.Dota2TeamCurrentMapStatePartialUpdate) update_);
    }
    if (updateCase_ == 4) {
      output.writeMessage(4, (com.bragi.Dota2Towers) update_);
    }
    if (updateCase_ == 5) {
      output.writeMessage(5, (com.bragi.Dota2Barracks) update_);
    }
    if (updateCase_ == 8) {
      output.writeMessage(8, (com.bragi.Roshan) update_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (updateCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.bragi.Dota2CurrentMapTimeState) update_);
    }
    if (updateCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.bragi.Dota2TeamCurrentMapState) update_);
    }
    if (updateCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.bragi.Dota2TeamCurrentMapStatePartialUpdate) update_);
    }
    if (updateCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.bragi.Dota2Towers) update_);
    }
    if (updateCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (com.bragi.Dota2Barracks) update_);
    }
    if (updateCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, (com.bragi.Roshan) update_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.bragi.Dota2CurrentMapStatePartialUpdate)) {
      return super.equals(obj);
    }
    com.bragi.Dota2CurrentMapStatePartialUpdate other = (com.bragi.Dota2CurrentMapStatePartialUpdate) obj;

    if (!getUpdateCase().equals(other.getUpdateCase())) return false;
    switch (updateCase_) {
      case 1:
        if (!getGameTime()
            .equals(other.getGameTime())) return false;
        break;
      case 2:
        if (!getTeamCurrentMapState()
            .equals(other.getTeamCurrentMapState())) return false;
        break;
      case 3:
        if (!getTeamCurrentMapPartialUpdate()
            .equals(other.getTeamCurrentMapPartialUpdate())) return false;
        break;
      case 4:
        if (!getTowers()
            .equals(other.getTowers())) return false;
        break;
      case 5:
        if (!getBarracks()
            .equals(other.getBarracks())) return false;
        break;
      case 8:
        if (!getRoshan()
            .equals(other.getRoshan())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (updateCase_) {
      case 1:
        hash = (37 * hash) + GAME_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getGameTime().hashCode();
        break;
      case 2:
        hash = (37 * hash) + TEAM_CURRENT_MAP_STATE_FIELD_NUMBER;
        hash = (53 * hash) + getTeamCurrentMapState().hashCode();
        break;
      case 3:
        hash = (37 * hash) + TEAM_CURRENT_MAP_PARTIAL_UPDATE_FIELD_NUMBER;
        hash = (53 * hash) + getTeamCurrentMapPartialUpdate().hashCode();
        break;
      case 4:
        hash = (37 * hash) + TOWERS_FIELD_NUMBER;
        hash = (53 * hash) + getTowers().hashCode();
        break;
      case 5:
        hash = (37 * hash) + BARRACKS_FIELD_NUMBER;
        hash = (53 * hash) + getBarracks().hashCode();
        break;
      case 8:
        hash = (37 * hash) + ROSHAN_FIELD_NUMBER;
        hash = (53 * hash) + getRoshan().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.bragi.Dota2CurrentMapStatePartialUpdate parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.Dota2CurrentMapStatePartialUpdate parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.Dota2CurrentMapStatePartialUpdate parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.Dota2CurrentMapStatePartialUpdate parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.Dota2CurrentMapStatePartialUpdate parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.Dota2CurrentMapStatePartialUpdate parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.Dota2CurrentMapStatePartialUpdate parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bragi.Dota2CurrentMapStatePartialUpdate parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.bragi.Dota2CurrentMapStatePartialUpdate parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.bragi.Dota2CurrentMapStatePartialUpdate parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.bragi.Dota2CurrentMapStatePartialUpdate parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bragi.Dota2CurrentMapStatePartialUpdate parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.bragi.Dota2CurrentMapStatePartialUpdate prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code bragi.Dota2CurrentMapStatePartialUpdate}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bragi.Dota2CurrentMapStatePartialUpdate)
      com.bragi.Dota2CurrentMapStatePartialUpdateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bragi.Dota2Proto.internal_static_bragi_Dota2CurrentMapStatePartialUpdate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bragi.Dota2Proto.internal_static_bragi_Dota2CurrentMapStatePartialUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bragi.Dota2CurrentMapStatePartialUpdate.class, com.bragi.Dota2CurrentMapStatePartialUpdate.Builder.class);
    }

    // Construct using com.bragi.Dota2CurrentMapStatePartialUpdate.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (gameTimeBuilder_ != null) {
        gameTimeBuilder_.clear();
      }
      if (teamCurrentMapStateBuilder_ != null) {
        teamCurrentMapStateBuilder_.clear();
      }
      if (teamCurrentMapPartialUpdateBuilder_ != null) {
        teamCurrentMapPartialUpdateBuilder_.clear();
      }
      if (towersBuilder_ != null) {
        towersBuilder_.clear();
      }
      if (barracksBuilder_ != null) {
        barracksBuilder_.clear();
      }
      if (roshanBuilder_ != null) {
        roshanBuilder_.clear();
      }
      updateCase_ = 0;
      update_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.bragi.Dota2Proto.internal_static_bragi_Dota2CurrentMapStatePartialUpdate_descriptor;
    }

    @java.lang.Override
    public com.bragi.Dota2CurrentMapStatePartialUpdate getDefaultInstanceForType() {
      return com.bragi.Dota2CurrentMapStatePartialUpdate.getDefaultInstance();
    }

    @java.lang.Override
    public com.bragi.Dota2CurrentMapStatePartialUpdate build() {
      com.bragi.Dota2CurrentMapStatePartialUpdate result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.bragi.Dota2CurrentMapStatePartialUpdate buildPartial() {
      com.bragi.Dota2CurrentMapStatePartialUpdate result = new com.bragi.Dota2CurrentMapStatePartialUpdate(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.bragi.Dota2CurrentMapStatePartialUpdate result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(com.bragi.Dota2CurrentMapStatePartialUpdate result) {
      result.updateCase_ = updateCase_;
      result.update_ = this.update_;
      if (updateCase_ == 1 &&
          gameTimeBuilder_ != null) {
        result.update_ = gameTimeBuilder_.build();
      }
      if (updateCase_ == 2 &&
          teamCurrentMapStateBuilder_ != null) {
        result.update_ = teamCurrentMapStateBuilder_.build();
      }
      if (updateCase_ == 3 &&
          teamCurrentMapPartialUpdateBuilder_ != null) {
        result.update_ = teamCurrentMapPartialUpdateBuilder_.build();
      }
      if (updateCase_ == 4 &&
          towersBuilder_ != null) {
        result.update_ = towersBuilder_.build();
      }
      if (updateCase_ == 5 &&
          barracksBuilder_ != null) {
        result.update_ = barracksBuilder_.build();
      }
      if (updateCase_ == 8 &&
          roshanBuilder_ != null) {
        result.update_ = roshanBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.bragi.Dota2CurrentMapStatePartialUpdate) {
        return mergeFrom((com.bragi.Dota2CurrentMapStatePartialUpdate)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.bragi.Dota2CurrentMapStatePartialUpdate other) {
      if (other == com.bragi.Dota2CurrentMapStatePartialUpdate.getDefaultInstance()) return this;
      switch (other.getUpdateCase()) {
        case GAME_TIME: {
          mergeGameTime(other.getGameTime());
          break;
        }
        case TEAM_CURRENT_MAP_STATE: {
          mergeTeamCurrentMapState(other.getTeamCurrentMapState());
          break;
        }
        case TEAM_CURRENT_MAP_PARTIAL_UPDATE: {
          mergeTeamCurrentMapPartialUpdate(other.getTeamCurrentMapPartialUpdate());
          break;
        }
        case TOWERS: {
          mergeTowers(other.getTowers());
          break;
        }
        case BARRACKS: {
          mergeBarracks(other.getBarracks());
          break;
        }
        case ROSHAN: {
          mergeRoshan(other.getRoshan());
          break;
        }
        case UPDATE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getGameTimeFieldBuilder().getBuilder(),
                  extensionRegistry);
              updateCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getTeamCurrentMapStateFieldBuilder().getBuilder(),
                  extensionRegistry);
              updateCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getTeamCurrentMapPartialUpdateFieldBuilder().getBuilder(),
                  extensionRegistry);
              updateCase_ = 3;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getTowersFieldBuilder().getBuilder(),
                  extensionRegistry);
              updateCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getBarracksFieldBuilder().getBuilder(),
                  extensionRegistry);
              updateCase_ = 5;
              break;
            } // case 42
            case 66: {
              input.readMessage(
                  getRoshanFieldBuilder().getBuilder(),
                  extensionRegistry);
              updateCase_ = 8;
              break;
            } // case 66
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int updateCase_ = 0;
    private java.lang.Object update_;
    public UpdateCase
        getUpdateCase() {
      return UpdateCase.forNumber(
          updateCase_);
    }

    public Builder clearUpdate() {
      updateCase_ = 0;
      update_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Dota2CurrentMapTimeState, com.bragi.Dota2CurrentMapTimeState.Builder, com.bragi.Dota2CurrentMapTimeStateOrBuilder> gameTimeBuilder_;
    /**
     * <pre>
     * Replaces "game_time" property in Dota2CurrentMapTimeState.
     * </pre>
     *
     * <code>.bragi.Dota2CurrentMapTimeState game_time = 1 [json_name = "gameTime"];</code>
     * @return Whether the gameTime field is set.
     */
    @java.lang.Override
    public boolean hasGameTime() {
      return updateCase_ == 1;
    }
    /**
     * <pre>
     * Replaces "game_time" property in Dota2CurrentMapTimeState.
     * </pre>
     *
     * <code>.bragi.Dota2CurrentMapTimeState game_time = 1 [json_name = "gameTime"];</code>
     * @return The gameTime.
     */
    @java.lang.Override
    public com.bragi.Dota2CurrentMapTimeState getGameTime() {
      if (gameTimeBuilder_ == null) {
        if (updateCase_ == 1) {
          return (com.bragi.Dota2CurrentMapTimeState) update_;
        }
        return com.bragi.Dota2CurrentMapTimeState.getDefaultInstance();
      } else {
        if (updateCase_ == 1) {
          return gameTimeBuilder_.getMessage();
        }
        return com.bragi.Dota2CurrentMapTimeState.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Replaces "game_time" property in Dota2CurrentMapTimeState.
     * </pre>
     *
     * <code>.bragi.Dota2CurrentMapTimeState game_time = 1 [json_name = "gameTime"];</code>
     */
    public Builder setGameTime(com.bragi.Dota2CurrentMapTimeState value) {
      if (gameTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        update_ = value;
        onChanged();
      } else {
        gameTimeBuilder_.setMessage(value);
      }
      updateCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Replaces "game_time" property in Dota2CurrentMapTimeState.
     * </pre>
     *
     * <code>.bragi.Dota2CurrentMapTimeState game_time = 1 [json_name = "gameTime"];</code>
     */
    public Builder setGameTime(
        com.bragi.Dota2CurrentMapTimeState.Builder builderForValue) {
      if (gameTimeBuilder_ == null) {
        update_ = builderForValue.build();
        onChanged();
      } else {
        gameTimeBuilder_.setMessage(builderForValue.build());
      }
      updateCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Replaces "game_time" property in Dota2CurrentMapTimeState.
     * </pre>
     *
     * <code>.bragi.Dota2CurrentMapTimeState game_time = 1 [json_name = "gameTime"];</code>
     */
    public Builder mergeGameTime(com.bragi.Dota2CurrentMapTimeState value) {
      if (gameTimeBuilder_ == null) {
        if (updateCase_ == 1 &&
            update_ != com.bragi.Dota2CurrentMapTimeState.getDefaultInstance()) {
          update_ = com.bragi.Dota2CurrentMapTimeState.newBuilder((com.bragi.Dota2CurrentMapTimeState) update_)
              .mergeFrom(value).buildPartial();
        } else {
          update_ = value;
        }
        onChanged();
      } else {
        if (updateCase_ == 1) {
          gameTimeBuilder_.mergeFrom(value);
        } else {
          gameTimeBuilder_.setMessage(value);
        }
      }
      updateCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Replaces "game_time" property in Dota2CurrentMapTimeState.
     * </pre>
     *
     * <code>.bragi.Dota2CurrentMapTimeState game_time = 1 [json_name = "gameTime"];</code>
     */
    public Builder clearGameTime() {
      if (gameTimeBuilder_ == null) {
        if (updateCase_ == 1) {
          updateCase_ = 0;
          update_ = null;
          onChanged();
        }
      } else {
        if (updateCase_ == 1) {
          updateCase_ = 0;
          update_ = null;
        }
        gameTimeBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Replaces "game_time" property in Dota2CurrentMapTimeState.
     * </pre>
     *
     * <code>.bragi.Dota2CurrentMapTimeState game_time = 1 [json_name = "gameTime"];</code>
     */
    public com.bragi.Dota2CurrentMapTimeState.Builder getGameTimeBuilder() {
      return getGameTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Replaces "game_time" property in Dota2CurrentMapTimeState.
     * </pre>
     *
     * <code>.bragi.Dota2CurrentMapTimeState game_time = 1 [json_name = "gameTime"];</code>
     */
    @java.lang.Override
    public com.bragi.Dota2CurrentMapTimeStateOrBuilder getGameTimeOrBuilder() {
      if ((updateCase_ == 1) && (gameTimeBuilder_ != null)) {
        return gameTimeBuilder_.getMessageOrBuilder();
      } else {
        if (updateCase_ == 1) {
          return (com.bragi.Dota2CurrentMapTimeState) update_;
        }
        return com.bragi.Dota2CurrentMapTimeState.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Replaces "game_time" property in Dota2CurrentMapTimeState.
     * </pre>
     *
     * <code>.bragi.Dota2CurrentMapTimeState game_time = 1 [json_name = "gameTime"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Dota2CurrentMapTimeState, com.bragi.Dota2CurrentMapTimeState.Builder, com.bragi.Dota2CurrentMapTimeStateOrBuilder> 
        getGameTimeFieldBuilder() {
      if (gameTimeBuilder_ == null) {
        if (!(updateCase_ == 1)) {
          update_ = com.bragi.Dota2CurrentMapTimeState.getDefaultInstance();
        }
        gameTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.Dota2CurrentMapTimeState, com.bragi.Dota2CurrentMapTimeState.Builder, com.bragi.Dota2CurrentMapTimeStateOrBuilder>(
                (com.bragi.Dota2CurrentMapTimeState) update_,
                getParentForChildren(),
                isClean());
        update_ = null;
      }
      updateCase_ = 1;
      onChanged();
      return gameTimeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Dota2TeamCurrentMapState, com.bragi.Dota2TeamCurrentMapState.Builder, com.bragi.Dota2TeamCurrentMapStateOrBuilder> teamCurrentMapStateBuilder_;
    /**
     * <pre>
     * Replaces whole value under given key in players map property in Dota2TeamCurrentMapState.
     * </pre>
     *
     * <code>.bragi.Dota2TeamCurrentMapState team_current_map_state = 2 [json_name = "teamCurrentMapState"];</code>
     * @return Whether the teamCurrentMapState field is set.
     */
    @java.lang.Override
    public boolean hasTeamCurrentMapState() {
      return updateCase_ == 2;
    }
    /**
     * <pre>
     * Replaces whole value under given key in players map property in Dota2TeamCurrentMapState.
     * </pre>
     *
     * <code>.bragi.Dota2TeamCurrentMapState team_current_map_state = 2 [json_name = "teamCurrentMapState"];</code>
     * @return The teamCurrentMapState.
     */
    @java.lang.Override
    public com.bragi.Dota2TeamCurrentMapState getTeamCurrentMapState() {
      if (teamCurrentMapStateBuilder_ == null) {
        if (updateCase_ == 2) {
          return (com.bragi.Dota2TeamCurrentMapState) update_;
        }
        return com.bragi.Dota2TeamCurrentMapState.getDefaultInstance();
      } else {
        if (updateCase_ == 2) {
          return teamCurrentMapStateBuilder_.getMessage();
        }
        return com.bragi.Dota2TeamCurrentMapState.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Replaces whole value under given key in players map property in Dota2TeamCurrentMapState.
     * </pre>
     *
     * <code>.bragi.Dota2TeamCurrentMapState team_current_map_state = 2 [json_name = "teamCurrentMapState"];</code>
     */
    public Builder setTeamCurrentMapState(com.bragi.Dota2TeamCurrentMapState value) {
      if (teamCurrentMapStateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        update_ = value;
        onChanged();
      } else {
        teamCurrentMapStateBuilder_.setMessage(value);
      }
      updateCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Replaces whole value under given key in players map property in Dota2TeamCurrentMapState.
     * </pre>
     *
     * <code>.bragi.Dota2TeamCurrentMapState team_current_map_state = 2 [json_name = "teamCurrentMapState"];</code>
     */
    public Builder setTeamCurrentMapState(
        com.bragi.Dota2TeamCurrentMapState.Builder builderForValue) {
      if (teamCurrentMapStateBuilder_ == null) {
        update_ = builderForValue.build();
        onChanged();
      } else {
        teamCurrentMapStateBuilder_.setMessage(builderForValue.build());
      }
      updateCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Replaces whole value under given key in players map property in Dota2TeamCurrentMapState.
     * </pre>
     *
     * <code>.bragi.Dota2TeamCurrentMapState team_current_map_state = 2 [json_name = "teamCurrentMapState"];</code>
     */
    public Builder mergeTeamCurrentMapState(com.bragi.Dota2TeamCurrentMapState value) {
      if (teamCurrentMapStateBuilder_ == null) {
        if (updateCase_ == 2 &&
            update_ != com.bragi.Dota2TeamCurrentMapState.getDefaultInstance()) {
          update_ = com.bragi.Dota2TeamCurrentMapState.newBuilder((com.bragi.Dota2TeamCurrentMapState) update_)
              .mergeFrom(value).buildPartial();
        } else {
          update_ = value;
        }
        onChanged();
      } else {
        if (updateCase_ == 2) {
          teamCurrentMapStateBuilder_.mergeFrom(value);
        } else {
          teamCurrentMapStateBuilder_.setMessage(value);
        }
      }
      updateCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Replaces whole value under given key in players map property in Dota2TeamCurrentMapState.
     * </pre>
     *
     * <code>.bragi.Dota2TeamCurrentMapState team_current_map_state = 2 [json_name = "teamCurrentMapState"];</code>
     */
    public Builder clearTeamCurrentMapState() {
      if (teamCurrentMapStateBuilder_ == null) {
        if (updateCase_ == 2) {
          updateCase_ = 0;
          update_ = null;
          onChanged();
        }
      } else {
        if (updateCase_ == 2) {
          updateCase_ = 0;
          update_ = null;
        }
        teamCurrentMapStateBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Replaces whole value under given key in players map property in Dota2TeamCurrentMapState.
     * </pre>
     *
     * <code>.bragi.Dota2TeamCurrentMapState team_current_map_state = 2 [json_name = "teamCurrentMapState"];</code>
     */
    public com.bragi.Dota2TeamCurrentMapState.Builder getTeamCurrentMapStateBuilder() {
      return getTeamCurrentMapStateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Replaces whole value under given key in players map property in Dota2TeamCurrentMapState.
     * </pre>
     *
     * <code>.bragi.Dota2TeamCurrentMapState team_current_map_state = 2 [json_name = "teamCurrentMapState"];</code>
     */
    @java.lang.Override
    public com.bragi.Dota2TeamCurrentMapStateOrBuilder getTeamCurrentMapStateOrBuilder() {
      if ((updateCase_ == 2) && (teamCurrentMapStateBuilder_ != null)) {
        return teamCurrentMapStateBuilder_.getMessageOrBuilder();
      } else {
        if (updateCase_ == 2) {
          return (com.bragi.Dota2TeamCurrentMapState) update_;
        }
        return com.bragi.Dota2TeamCurrentMapState.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Replaces whole value under given key in players map property in Dota2TeamCurrentMapState.
     * </pre>
     *
     * <code>.bragi.Dota2TeamCurrentMapState team_current_map_state = 2 [json_name = "teamCurrentMapState"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Dota2TeamCurrentMapState, com.bragi.Dota2TeamCurrentMapState.Builder, com.bragi.Dota2TeamCurrentMapStateOrBuilder> 
        getTeamCurrentMapStateFieldBuilder() {
      if (teamCurrentMapStateBuilder_ == null) {
        if (!(updateCase_ == 2)) {
          update_ = com.bragi.Dota2TeamCurrentMapState.getDefaultInstance();
        }
        teamCurrentMapStateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.Dota2TeamCurrentMapState, com.bragi.Dota2TeamCurrentMapState.Builder, com.bragi.Dota2TeamCurrentMapStateOrBuilder>(
                (com.bragi.Dota2TeamCurrentMapState) update_,
                getParentForChildren(),
                isClean());
        update_ = null;
      }
      updateCase_ = 2;
      onChanged();
      return teamCurrentMapStateBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Dota2TeamCurrentMapStatePartialUpdate, com.bragi.Dota2TeamCurrentMapStatePartialUpdate.Builder, com.bragi.Dota2TeamCurrentMapStatePartialUpdateOrBuilder> teamCurrentMapPartialUpdateBuilder_;
    /**
     * <pre>
     * Apply partial update on value under given key in teams map property in Dota2CurrentMapState.
     * </pre>
     *
     * <code>.bragi.Dota2TeamCurrentMapStatePartialUpdate team_current_map_partial_update = 3 [json_name = "teamCurrentMapPartialUpdate"];</code>
     * @return Whether the teamCurrentMapPartialUpdate field is set.
     */
    @java.lang.Override
    public boolean hasTeamCurrentMapPartialUpdate() {
      return updateCase_ == 3;
    }
    /**
     * <pre>
     * Apply partial update on value under given key in teams map property in Dota2CurrentMapState.
     * </pre>
     *
     * <code>.bragi.Dota2TeamCurrentMapStatePartialUpdate team_current_map_partial_update = 3 [json_name = "teamCurrentMapPartialUpdate"];</code>
     * @return The teamCurrentMapPartialUpdate.
     */
    @java.lang.Override
    public com.bragi.Dota2TeamCurrentMapStatePartialUpdate getTeamCurrentMapPartialUpdate() {
      if (teamCurrentMapPartialUpdateBuilder_ == null) {
        if (updateCase_ == 3) {
          return (com.bragi.Dota2TeamCurrentMapStatePartialUpdate) update_;
        }
        return com.bragi.Dota2TeamCurrentMapStatePartialUpdate.getDefaultInstance();
      } else {
        if (updateCase_ == 3) {
          return teamCurrentMapPartialUpdateBuilder_.getMessage();
        }
        return com.bragi.Dota2TeamCurrentMapStatePartialUpdate.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Apply partial update on value under given key in teams map property in Dota2CurrentMapState.
     * </pre>
     *
     * <code>.bragi.Dota2TeamCurrentMapStatePartialUpdate team_current_map_partial_update = 3 [json_name = "teamCurrentMapPartialUpdate"];</code>
     */
    public Builder setTeamCurrentMapPartialUpdate(com.bragi.Dota2TeamCurrentMapStatePartialUpdate value) {
      if (teamCurrentMapPartialUpdateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        update_ = value;
        onChanged();
      } else {
        teamCurrentMapPartialUpdateBuilder_.setMessage(value);
      }
      updateCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Apply partial update on value under given key in teams map property in Dota2CurrentMapState.
     * </pre>
     *
     * <code>.bragi.Dota2TeamCurrentMapStatePartialUpdate team_current_map_partial_update = 3 [json_name = "teamCurrentMapPartialUpdate"];</code>
     */
    public Builder setTeamCurrentMapPartialUpdate(
        com.bragi.Dota2TeamCurrentMapStatePartialUpdate.Builder builderForValue) {
      if (teamCurrentMapPartialUpdateBuilder_ == null) {
        update_ = builderForValue.build();
        onChanged();
      } else {
        teamCurrentMapPartialUpdateBuilder_.setMessage(builderForValue.build());
      }
      updateCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Apply partial update on value under given key in teams map property in Dota2CurrentMapState.
     * </pre>
     *
     * <code>.bragi.Dota2TeamCurrentMapStatePartialUpdate team_current_map_partial_update = 3 [json_name = "teamCurrentMapPartialUpdate"];</code>
     */
    public Builder mergeTeamCurrentMapPartialUpdate(com.bragi.Dota2TeamCurrentMapStatePartialUpdate value) {
      if (teamCurrentMapPartialUpdateBuilder_ == null) {
        if (updateCase_ == 3 &&
            update_ != com.bragi.Dota2TeamCurrentMapStatePartialUpdate.getDefaultInstance()) {
          update_ = com.bragi.Dota2TeamCurrentMapStatePartialUpdate.newBuilder((com.bragi.Dota2TeamCurrentMapStatePartialUpdate) update_)
              .mergeFrom(value).buildPartial();
        } else {
          update_ = value;
        }
        onChanged();
      } else {
        if (updateCase_ == 3) {
          teamCurrentMapPartialUpdateBuilder_.mergeFrom(value);
        } else {
          teamCurrentMapPartialUpdateBuilder_.setMessage(value);
        }
      }
      updateCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Apply partial update on value under given key in teams map property in Dota2CurrentMapState.
     * </pre>
     *
     * <code>.bragi.Dota2TeamCurrentMapStatePartialUpdate team_current_map_partial_update = 3 [json_name = "teamCurrentMapPartialUpdate"];</code>
     */
    public Builder clearTeamCurrentMapPartialUpdate() {
      if (teamCurrentMapPartialUpdateBuilder_ == null) {
        if (updateCase_ == 3) {
          updateCase_ = 0;
          update_ = null;
          onChanged();
        }
      } else {
        if (updateCase_ == 3) {
          updateCase_ = 0;
          update_ = null;
        }
        teamCurrentMapPartialUpdateBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Apply partial update on value under given key in teams map property in Dota2CurrentMapState.
     * </pre>
     *
     * <code>.bragi.Dota2TeamCurrentMapStatePartialUpdate team_current_map_partial_update = 3 [json_name = "teamCurrentMapPartialUpdate"];</code>
     */
    public com.bragi.Dota2TeamCurrentMapStatePartialUpdate.Builder getTeamCurrentMapPartialUpdateBuilder() {
      return getTeamCurrentMapPartialUpdateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Apply partial update on value under given key in teams map property in Dota2CurrentMapState.
     * </pre>
     *
     * <code>.bragi.Dota2TeamCurrentMapStatePartialUpdate team_current_map_partial_update = 3 [json_name = "teamCurrentMapPartialUpdate"];</code>
     */
    @java.lang.Override
    public com.bragi.Dota2TeamCurrentMapStatePartialUpdateOrBuilder getTeamCurrentMapPartialUpdateOrBuilder() {
      if ((updateCase_ == 3) && (teamCurrentMapPartialUpdateBuilder_ != null)) {
        return teamCurrentMapPartialUpdateBuilder_.getMessageOrBuilder();
      } else {
        if (updateCase_ == 3) {
          return (com.bragi.Dota2TeamCurrentMapStatePartialUpdate) update_;
        }
        return com.bragi.Dota2TeamCurrentMapStatePartialUpdate.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Apply partial update on value under given key in teams map property in Dota2CurrentMapState.
     * </pre>
     *
     * <code>.bragi.Dota2TeamCurrentMapStatePartialUpdate team_current_map_partial_update = 3 [json_name = "teamCurrentMapPartialUpdate"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Dota2TeamCurrentMapStatePartialUpdate, com.bragi.Dota2TeamCurrentMapStatePartialUpdate.Builder, com.bragi.Dota2TeamCurrentMapStatePartialUpdateOrBuilder> 
        getTeamCurrentMapPartialUpdateFieldBuilder() {
      if (teamCurrentMapPartialUpdateBuilder_ == null) {
        if (!(updateCase_ == 3)) {
          update_ = com.bragi.Dota2TeamCurrentMapStatePartialUpdate.getDefaultInstance();
        }
        teamCurrentMapPartialUpdateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.Dota2TeamCurrentMapStatePartialUpdate, com.bragi.Dota2TeamCurrentMapStatePartialUpdate.Builder, com.bragi.Dota2TeamCurrentMapStatePartialUpdateOrBuilder>(
                (com.bragi.Dota2TeamCurrentMapStatePartialUpdate) update_,
                getParentForChildren(),
                isClean());
        update_ = null;
      }
      updateCase_ = 3;
      onChanged();
      return teamCurrentMapPartialUpdateBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Dota2Towers, com.bragi.Dota2Towers.Builder, com.bragi.Dota2TowersOrBuilder> towersBuilder_;
    /**
     * <pre>
     * Replaces "towers" property in Dota2Towers.
     * </pre>
     *
     * <code>.bragi.Dota2Towers towers = 4 [json_name = "towers"];</code>
     * @return Whether the towers field is set.
     */
    @java.lang.Override
    public boolean hasTowers() {
      return updateCase_ == 4;
    }
    /**
     * <pre>
     * Replaces "towers" property in Dota2Towers.
     * </pre>
     *
     * <code>.bragi.Dota2Towers towers = 4 [json_name = "towers"];</code>
     * @return The towers.
     */
    @java.lang.Override
    public com.bragi.Dota2Towers getTowers() {
      if (towersBuilder_ == null) {
        if (updateCase_ == 4) {
          return (com.bragi.Dota2Towers) update_;
        }
        return com.bragi.Dota2Towers.getDefaultInstance();
      } else {
        if (updateCase_ == 4) {
          return towersBuilder_.getMessage();
        }
        return com.bragi.Dota2Towers.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Replaces "towers" property in Dota2Towers.
     * </pre>
     *
     * <code>.bragi.Dota2Towers towers = 4 [json_name = "towers"];</code>
     */
    public Builder setTowers(com.bragi.Dota2Towers value) {
      if (towersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        update_ = value;
        onChanged();
      } else {
        towersBuilder_.setMessage(value);
      }
      updateCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Replaces "towers" property in Dota2Towers.
     * </pre>
     *
     * <code>.bragi.Dota2Towers towers = 4 [json_name = "towers"];</code>
     */
    public Builder setTowers(
        com.bragi.Dota2Towers.Builder builderForValue) {
      if (towersBuilder_ == null) {
        update_ = builderForValue.build();
        onChanged();
      } else {
        towersBuilder_.setMessage(builderForValue.build());
      }
      updateCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Replaces "towers" property in Dota2Towers.
     * </pre>
     *
     * <code>.bragi.Dota2Towers towers = 4 [json_name = "towers"];</code>
     */
    public Builder mergeTowers(com.bragi.Dota2Towers value) {
      if (towersBuilder_ == null) {
        if (updateCase_ == 4 &&
            update_ != com.bragi.Dota2Towers.getDefaultInstance()) {
          update_ = com.bragi.Dota2Towers.newBuilder((com.bragi.Dota2Towers) update_)
              .mergeFrom(value).buildPartial();
        } else {
          update_ = value;
        }
        onChanged();
      } else {
        if (updateCase_ == 4) {
          towersBuilder_.mergeFrom(value);
        } else {
          towersBuilder_.setMessage(value);
        }
      }
      updateCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Replaces "towers" property in Dota2Towers.
     * </pre>
     *
     * <code>.bragi.Dota2Towers towers = 4 [json_name = "towers"];</code>
     */
    public Builder clearTowers() {
      if (towersBuilder_ == null) {
        if (updateCase_ == 4) {
          updateCase_ = 0;
          update_ = null;
          onChanged();
        }
      } else {
        if (updateCase_ == 4) {
          updateCase_ = 0;
          update_ = null;
        }
        towersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Replaces "towers" property in Dota2Towers.
     * </pre>
     *
     * <code>.bragi.Dota2Towers towers = 4 [json_name = "towers"];</code>
     */
    public com.bragi.Dota2Towers.Builder getTowersBuilder() {
      return getTowersFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Replaces "towers" property in Dota2Towers.
     * </pre>
     *
     * <code>.bragi.Dota2Towers towers = 4 [json_name = "towers"];</code>
     */
    @java.lang.Override
    public com.bragi.Dota2TowersOrBuilder getTowersOrBuilder() {
      if ((updateCase_ == 4) && (towersBuilder_ != null)) {
        return towersBuilder_.getMessageOrBuilder();
      } else {
        if (updateCase_ == 4) {
          return (com.bragi.Dota2Towers) update_;
        }
        return com.bragi.Dota2Towers.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Replaces "towers" property in Dota2Towers.
     * </pre>
     *
     * <code>.bragi.Dota2Towers towers = 4 [json_name = "towers"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Dota2Towers, com.bragi.Dota2Towers.Builder, com.bragi.Dota2TowersOrBuilder> 
        getTowersFieldBuilder() {
      if (towersBuilder_ == null) {
        if (!(updateCase_ == 4)) {
          update_ = com.bragi.Dota2Towers.getDefaultInstance();
        }
        towersBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.Dota2Towers, com.bragi.Dota2Towers.Builder, com.bragi.Dota2TowersOrBuilder>(
                (com.bragi.Dota2Towers) update_,
                getParentForChildren(),
                isClean());
        update_ = null;
      }
      updateCase_ = 4;
      onChanged();
      return towersBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Dota2Barracks, com.bragi.Dota2Barracks.Builder, com.bragi.Dota2BarracksOrBuilder> barracksBuilder_;
    /**
     * <pre>
     * Replaces "barracks" property in Dota2Barracks.
     * </pre>
     *
     * <code>.bragi.Dota2Barracks barracks = 5 [json_name = "barracks"];</code>
     * @return Whether the barracks field is set.
     */
    @java.lang.Override
    public boolean hasBarracks() {
      return updateCase_ == 5;
    }
    /**
     * <pre>
     * Replaces "barracks" property in Dota2Barracks.
     * </pre>
     *
     * <code>.bragi.Dota2Barracks barracks = 5 [json_name = "barracks"];</code>
     * @return The barracks.
     */
    @java.lang.Override
    public com.bragi.Dota2Barracks getBarracks() {
      if (barracksBuilder_ == null) {
        if (updateCase_ == 5) {
          return (com.bragi.Dota2Barracks) update_;
        }
        return com.bragi.Dota2Barracks.getDefaultInstance();
      } else {
        if (updateCase_ == 5) {
          return barracksBuilder_.getMessage();
        }
        return com.bragi.Dota2Barracks.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Replaces "barracks" property in Dota2Barracks.
     * </pre>
     *
     * <code>.bragi.Dota2Barracks barracks = 5 [json_name = "barracks"];</code>
     */
    public Builder setBarracks(com.bragi.Dota2Barracks value) {
      if (barracksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        update_ = value;
        onChanged();
      } else {
        barracksBuilder_.setMessage(value);
      }
      updateCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Replaces "barracks" property in Dota2Barracks.
     * </pre>
     *
     * <code>.bragi.Dota2Barracks barracks = 5 [json_name = "barracks"];</code>
     */
    public Builder setBarracks(
        com.bragi.Dota2Barracks.Builder builderForValue) {
      if (barracksBuilder_ == null) {
        update_ = builderForValue.build();
        onChanged();
      } else {
        barracksBuilder_.setMessage(builderForValue.build());
      }
      updateCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Replaces "barracks" property in Dota2Barracks.
     * </pre>
     *
     * <code>.bragi.Dota2Barracks barracks = 5 [json_name = "barracks"];</code>
     */
    public Builder mergeBarracks(com.bragi.Dota2Barracks value) {
      if (barracksBuilder_ == null) {
        if (updateCase_ == 5 &&
            update_ != com.bragi.Dota2Barracks.getDefaultInstance()) {
          update_ = com.bragi.Dota2Barracks.newBuilder((com.bragi.Dota2Barracks) update_)
              .mergeFrom(value).buildPartial();
        } else {
          update_ = value;
        }
        onChanged();
      } else {
        if (updateCase_ == 5) {
          barracksBuilder_.mergeFrom(value);
        } else {
          barracksBuilder_.setMessage(value);
        }
      }
      updateCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Replaces "barracks" property in Dota2Barracks.
     * </pre>
     *
     * <code>.bragi.Dota2Barracks barracks = 5 [json_name = "barracks"];</code>
     */
    public Builder clearBarracks() {
      if (barracksBuilder_ == null) {
        if (updateCase_ == 5) {
          updateCase_ = 0;
          update_ = null;
          onChanged();
        }
      } else {
        if (updateCase_ == 5) {
          updateCase_ = 0;
          update_ = null;
        }
        barracksBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Replaces "barracks" property in Dota2Barracks.
     * </pre>
     *
     * <code>.bragi.Dota2Barracks barracks = 5 [json_name = "barracks"];</code>
     */
    public com.bragi.Dota2Barracks.Builder getBarracksBuilder() {
      return getBarracksFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Replaces "barracks" property in Dota2Barracks.
     * </pre>
     *
     * <code>.bragi.Dota2Barracks barracks = 5 [json_name = "barracks"];</code>
     */
    @java.lang.Override
    public com.bragi.Dota2BarracksOrBuilder getBarracksOrBuilder() {
      if ((updateCase_ == 5) && (barracksBuilder_ != null)) {
        return barracksBuilder_.getMessageOrBuilder();
      } else {
        if (updateCase_ == 5) {
          return (com.bragi.Dota2Barracks) update_;
        }
        return com.bragi.Dota2Barracks.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Replaces "barracks" property in Dota2Barracks.
     * </pre>
     *
     * <code>.bragi.Dota2Barracks barracks = 5 [json_name = "barracks"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Dota2Barracks, com.bragi.Dota2Barracks.Builder, com.bragi.Dota2BarracksOrBuilder> 
        getBarracksFieldBuilder() {
      if (barracksBuilder_ == null) {
        if (!(updateCase_ == 5)) {
          update_ = com.bragi.Dota2Barracks.getDefaultInstance();
        }
        barracksBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.Dota2Barracks, com.bragi.Dota2Barracks.Builder, com.bragi.Dota2BarracksOrBuilder>(
                (com.bragi.Dota2Barracks) update_,
                getParentForChildren(),
                isClean());
        update_ = null;
      }
      updateCase_ = 5;
      onChanged();
      return barracksBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Roshan, com.bragi.Roshan.Builder, com.bragi.RoshanOrBuilder> roshanBuilder_;
    /**
     * <code>.bragi.Roshan roshan = 8 [json_name = "roshan"];</code>
     * @return Whether the roshan field is set.
     */
    @java.lang.Override
    public boolean hasRoshan() {
      return updateCase_ == 8;
    }
    /**
     * <code>.bragi.Roshan roshan = 8 [json_name = "roshan"];</code>
     * @return The roshan.
     */
    @java.lang.Override
    public com.bragi.Roshan getRoshan() {
      if (roshanBuilder_ == null) {
        if (updateCase_ == 8) {
          return (com.bragi.Roshan) update_;
        }
        return com.bragi.Roshan.getDefaultInstance();
      } else {
        if (updateCase_ == 8) {
          return roshanBuilder_.getMessage();
        }
        return com.bragi.Roshan.getDefaultInstance();
      }
    }
    /**
     * <code>.bragi.Roshan roshan = 8 [json_name = "roshan"];</code>
     */
    public Builder setRoshan(com.bragi.Roshan value) {
      if (roshanBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        update_ = value;
        onChanged();
      } else {
        roshanBuilder_.setMessage(value);
      }
      updateCase_ = 8;
      return this;
    }
    /**
     * <code>.bragi.Roshan roshan = 8 [json_name = "roshan"];</code>
     */
    public Builder setRoshan(
        com.bragi.Roshan.Builder builderForValue) {
      if (roshanBuilder_ == null) {
        update_ = builderForValue.build();
        onChanged();
      } else {
        roshanBuilder_.setMessage(builderForValue.build());
      }
      updateCase_ = 8;
      return this;
    }
    /**
     * <code>.bragi.Roshan roshan = 8 [json_name = "roshan"];</code>
     */
    public Builder mergeRoshan(com.bragi.Roshan value) {
      if (roshanBuilder_ == null) {
        if (updateCase_ == 8 &&
            update_ != com.bragi.Roshan.getDefaultInstance()) {
          update_ = com.bragi.Roshan.newBuilder((com.bragi.Roshan) update_)
              .mergeFrom(value).buildPartial();
        } else {
          update_ = value;
        }
        onChanged();
      } else {
        if (updateCase_ == 8) {
          roshanBuilder_.mergeFrom(value);
        } else {
          roshanBuilder_.setMessage(value);
        }
      }
      updateCase_ = 8;
      return this;
    }
    /**
     * <code>.bragi.Roshan roshan = 8 [json_name = "roshan"];</code>
     */
    public Builder clearRoshan() {
      if (roshanBuilder_ == null) {
        if (updateCase_ == 8) {
          updateCase_ = 0;
          update_ = null;
          onChanged();
        }
      } else {
        if (updateCase_ == 8) {
          updateCase_ = 0;
          update_ = null;
        }
        roshanBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.bragi.Roshan roshan = 8 [json_name = "roshan"];</code>
     */
    public com.bragi.Roshan.Builder getRoshanBuilder() {
      return getRoshanFieldBuilder().getBuilder();
    }
    /**
     * <code>.bragi.Roshan roshan = 8 [json_name = "roshan"];</code>
     */
    @java.lang.Override
    public com.bragi.RoshanOrBuilder getRoshanOrBuilder() {
      if ((updateCase_ == 8) && (roshanBuilder_ != null)) {
        return roshanBuilder_.getMessageOrBuilder();
      } else {
        if (updateCase_ == 8) {
          return (com.bragi.Roshan) update_;
        }
        return com.bragi.Roshan.getDefaultInstance();
      }
    }
    /**
     * <code>.bragi.Roshan roshan = 8 [json_name = "roshan"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Roshan, com.bragi.Roshan.Builder, com.bragi.RoshanOrBuilder> 
        getRoshanFieldBuilder() {
      if (roshanBuilder_ == null) {
        if (!(updateCase_ == 8)) {
          update_ = com.bragi.Roshan.getDefaultInstance();
        }
        roshanBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.Roshan, com.bragi.Roshan.Builder, com.bragi.RoshanOrBuilder>(
                (com.bragi.Roshan) update_,
                getParentForChildren(),
                isClean());
        update_ = null;
      }
      updateCase_ = 8;
      onChanged();
      return roshanBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:bragi.Dota2CurrentMapStatePartialUpdate)
  }

  // @@protoc_insertion_point(class_scope:bragi.Dota2CurrentMapStatePartialUpdate)
  private static final com.bragi.Dota2CurrentMapStatePartialUpdate DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.bragi.Dota2CurrentMapStatePartialUpdate();
  }

  public static com.bragi.Dota2CurrentMapStatePartialUpdate getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Dota2CurrentMapStatePartialUpdate>
      PARSER = new com.google.protobuf.AbstractParser<Dota2CurrentMapStatePartialUpdate>() {
    @java.lang.Override
    public Dota2CurrentMapStatePartialUpdate parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Dota2CurrentMapStatePartialUpdate> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Dota2CurrentMapStatePartialUpdate> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.bragi.Dota2CurrentMapStatePartialUpdate getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

