// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bragi/dota2.proto
// Protobuf Java Version: 4.29.3

package com.bragi;

public interface Dota2PlayerCurrentMapStatisticsStateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:bragi.Dota2PlayerCurrentMapStatisticsState)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string player_urn = 1 [json_name = "playerUrn"];</code>
   * @return The playerUrn.
   */
  java.lang.String getPlayerUrn();
  /**
   * <code>string player_urn = 1 [json_name = "playerUrn"];</code>
   * @return The bytes for playerUrn.
   */
  com.google.protobuf.ByteString
      getPlayerUrnBytes();

  /**
   * <code>bool alive = 2 [json_name = "alive"];</code>
   * @return The alive.
   */
  boolean getAlive();

  /**
   * <code>uint32 health = 3 [json_name = "health"];</code>
   * @return The health.
   */
  int getHealth();

  /**
   * <code>uint32 max_health = 4 [json_name = "maxHealth"];</code>
   * @return The maxHealth.
   */
  int getMaxHealth();

  /**
   * <code>uint32 current_gold = 5 [json_name = "currentGold"];</code>
   * @return The currentGold.
   */
  int getCurrentGold();

  /**
   * <pre>
   * Players gold plus sum of buy values of items in inventory/courier.
   * </pre>
   *
   * <code>uint32 net_worth = 6 [json_name = "netWorth"];</code>
   * @return The netWorth.
   */
  int getNetWorth();

  /**
   * <pre>
   * How much gold you need to spend to use buyback.
   * </pre>
   *
   * <code>uint32 buyback_cost = 7 [json_name = "buybackCost"];</code>
   * @return The buybackCost.
   */
  int getBuybackCost();

  /**
   * <code>bool has_buyback = 8 [json_name = "hasBuyback"];</code>
   * @return The hasBuyback.
   */
  boolean getHasBuyback();

  /**
   * <code>bool has_aegis = 9 [json_name = "hasAegis"];</code>
   * @return The hasAegis.
   */
  boolean getHasAegis();

  /**
   * <code>uint32 mana = 10 [json_name = "mana"];</code>
   * @return The mana.
   */
  int getMana();

  /**
   * <code>uint32 max_mana = 11 [json_name = "maxMana"];</code>
   * @return The maxMana.
   */
  int getMaxMana();

  /**
   * <pre>
   * Number of reliable Golds.
   * </pre>
   *
   * <code>uint32 gold_reliable = 12 [json_name = "goldReliable"];</code>
   * @return The goldReliable.
   */
  int getGoldReliable();

  /**
   * <pre>
   * Number of unreliable Golds.
   * </pre>
   *
   * <code>uint32 gold_unreliable = 13 [json_name = "goldUnreliable"];</code>
   * @return The goldUnreliable.
   */
  int getGoldUnreliable();

  /**
   * <pre>
   * Number of denied creeps (you can kill your own minion to prevent an enemy player getting gold from it).
   * </pre>
   *
   * <code>uint32 denies = 14 [json_name = "denies"];</code>
   * @return The denies.
   */
  int getDenies();

  /**
   * <pre>
   * Number of killed creeps.
   * </pre>
   *
   * <code>uint32 last_hits = 15 [json_name = "lastHits"];</code>
   * @return The lastHits.
   */
  int getLastHits();

  /**
   * <code>uint32 level = 16 [json_name = "level"];</code>
   * @return The level.
   */
  int getLevel();
}
