// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bragi/dota2.proto
// Protobuf Java Version: 4.29.3

package com.bragi;

/**
 * Protobuf type {@code bragi.Dota2TeamPreviousMapState}
 */
public final class Dota2TeamPreviousMapState extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:bragi.Dota2TeamPreviousMapState)
    Dota2TeamPreviousMapStateOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      Dota2TeamPreviousMapState.class.getName());
  }
  // Use Dota2TeamPreviousMapState.newBuilder() to construct.
  private Dota2TeamPreviousMapState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Dota2TeamPreviousMapState() {
    teamUrn_ = "";
    faction_ = 0;
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.bragi.Dota2Proto.internal_static_bragi_Dota2TeamPreviousMapState_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 9:
        return internalGetPlayers();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.bragi.Dota2Proto.internal_static_bragi_Dota2TeamPreviousMapState_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.bragi.Dota2TeamPreviousMapState.class, com.bragi.Dota2TeamPreviousMapState.Builder.class);
  }

  private int bitField0_;
  public static final int TEAM_URN_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object teamUrn_ = "";
  /**
   * <code>string team_urn = 1 [json_name = "teamUrn"];</code>
   * @return The teamUrn.
   */
  @java.lang.Override
  public java.lang.String getTeamUrn() {
    java.lang.Object ref = teamUrn_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      teamUrn_ = s;
      return s;
    }
  }
  /**
   * <code>string team_urn = 1 [json_name = "teamUrn"];</code>
   * @return The bytes for teamUrn.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTeamUrnBytes() {
    java.lang.Object ref = teamUrn_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      teamUrn_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FACTION_FIELD_NUMBER = 2;
  private int faction_ = 0;
  /**
   * <code>.bragi.Dota2Faction faction = 2 [json_name = "faction"];</code>
   * @return The enum numeric value on the wire for faction.
   */
  @java.lang.Override public int getFactionValue() {
    return faction_;
  }
  /**
   * <code>.bragi.Dota2Faction faction = 2 [json_name = "faction"];</code>
   * @return The faction.
   */
  @java.lang.Override public com.bragi.Dota2Faction getFaction() {
    com.bragi.Dota2Faction result = com.bragi.Dota2Faction.forNumber(faction_);
    return result == null ? com.bragi.Dota2Faction.UNRECOGNIZED : result;
  }

  public static final int BARRACKS_FIELD_NUMBER = 3;
  private int barracks_ = 0;
  /**
   * <code>uint32 barracks = 3 [json_name = "barracks"];</code>
   * @return The barracks.
   */
  @java.lang.Override
  public int getBarracks() {
    return barracks_;
  }

  public static final int KILLS_FIELD_NUMBER = 4;
  private int kills_ = 0;
  /**
   * <code>uint32 kills = 4 [json_name = "kills"];</code>
   * @return The kills.
   */
  @java.lang.Override
  public int getKills() {
    return kills_;
  }

  public static final int NET_WORTH_FIELD_NUMBER = 5;
  private int netWorth_ = 0;
  /**
   * <code>uint32 net_worth = 5 [json_name = "netWorth"];</code>
   * @return The netWorth.
   */
  @java.lang.Override
  public int getNetWorth() {
    return netWorth_;
  }

  public static final int ROSHANS_FIELD_NUMBER = 6;
  private int roshans_ = 0;
  /**
   * <code>uint32 roshans = 6 [json_name = "roshans"];</code>
   * @return The roshans.
   */
  @java.lang.Override
  public int getRoshans() {
    return roshans_;
  }

  public static final int TOWERS_FIELD_NUMBER = 7;
  private int towers_ = 0;
  /**
   * <code>uint32 towers = 7 [json_name = "towers"];</code>
   * @return The towers.
   */
  @java.lang.Override
  public int getTowers() {
    return towers_;
  }

  public static final int WON_FIELD_NUMBER = 8;
  private boolean won_ = false;
  /**
   * <code>optional bool won = 8 [json_name = "won"];</code>
   * @return Whether the won field is set.
   */
  @java.lang.Override
  public boolean hasWon() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional bool won = 8 [json_name = "won"];</code>
   * @return The won.
   */
  @java.lang.Override
  public boolean getWon() {
    return won_;
  }

  public static final int PLAYERS_FIELD_NUMBER = 9;
  private static final class PlayersDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, com.bragi.Dota2PlayerPreviousMapState> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, com.bragi.Dota2PlayerPreviousMapState>newDefaultInstance(
                com.bragi.Dota2Proto.internal_static_bragi_Dota2TeamPreviousMapState_PlayersEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.bragi.Dota2PlayerPreviousMapState.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, com.bragi.Dota2PlayerPreviousMapState> players_;
  private com.google.protobuf.MapField<java.lang.String, com.bragi.Dota2PlayerPreviousMapState>
  internalGetPlayers() {
    if (players_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          PlayersDefaultEntryHolder.defaultEntry);
    }
    return players_;
  }
  public int getPlayersCount() {
    return internalGetPlayers().getMap().size();
  }
  /**
   * <code>map&lt;string, .bragi.Dota2PlayerPreviousMapState&gt; players = 9 [json_name = "players"];</code>
   */
  @java.lang.Override
  public boolean containsPlayers(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetPlayers().getMap().containsKey(key);
  }
  /**
   * Use {@link #getPlayersMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.bragi.Dota2PlayerPreviousMapState> getPlayers() {
    return getPlayersMap();
  }
  /**
   * <code>map&lt;string, .bragi.Dota2PlayerPreviousMapState&gt; players = 9 [json_name = "players"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, com.bragi.Dota2PlayerPreviousMapState> getPlayersMap() {
    return internalGetPlayers().getMap();
  }
  /**
   * <code>map&lt;string, .bragi.Dota2PlayerPreviousMapState&gt; players = 9 [json_name = "players"];</code>
   */
  @java.lang.Override
  public /* nullable */
com.bragi.Dota2PlayerPreviousMapState getPlayersOrDefault(
      java.lang.String key,
      /* nullable */
com.bragi.Dota2PlayerPreviousMapState defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.bragi.Dota2PlayerPreviousMapState> map =
        internalGetPlayers().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .bragi.Dota2PlayerPreviousMapState&gt; players = 9 [json_name = "players"];</code>
   */
  @java.lang.Override
  public com.bragi.Dota2PlayerPreviousMapState getPlayersOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.bragi.Dota2PlayerPreviousMapState> map =
        internalGetPlayers().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(teamUrn_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, teamUrn_);
    }
    if (faction_ != com.bragi.Dota2Faction.DOTA2_FACTION_UNSPECIFIED.getNumber()) {
      output.writeEnum(2, faction_);
    }
    if (barracks_ != 0) {
      output.writeUInt32(3, barracks_);
    }
    if (kills_ != 0) {
      output.writeUInt32(4, kills_);
    }
    if (netWorth_ != 0) {
      output.writeUInt32(5, netWorth_);
    }
    if (roshans_ != 0) {
      output.writeUInt32(6, roshans_);
    }
    if (towers_ != 0) {
      output.writeUInt32(7, towers_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeBool(8, won_);
    }
    com.google.protobuf.GeneratedMessage
      .serializeStringMapTo(
        output,
        internalGetPlayers(),
        PlayersDefaultEntryHolder.defaultEntry,
        9);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(teamUrn_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, teamUrn_);
    }
    if (faction_ != com.bragi.Dota2Faction.DOTA2_FACTION_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, faction_);
    }
    if (barracks_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, barracks_);
    }
    if (kills_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, kills_);
    }
    if (netWorth_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, netWorth_);
    }
    if (roshans_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(6, roshans_);
    }
    if (towers_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(7, towers_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, won_);
    }
    for (java.util.Map.Entry<java.lang.String, com.bragi.Dota2PlayerPreviousMapState> entry
         : internalGetPlayers().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.bragi.Dota2PlayerPreviousMapState>
      players__ = PlayersDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, players__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.bragi.Dota2TeamPreviousMapState)) {
      return super.equals(obj);
    }
    com.bragi.Dota2TeamPreviousMapState other = (com.bragi.Dota2TeamPreviousMapState) obj;

    if (!getTeamUrn()
        .equals(other.getTeamUrn())) return false;
    if (faction_ != other.faction_) return false;
    if (getBarracks()
        != other.getBarracks()) return false;
    if (getKills()
        != other.getKills()) return false;
    if (getNetWorth()
        != other.getNetWorth()) return false;
    if (getRoshans()
        != other.getRoshans()) return false;
    if (getTowers()
        != other.getTowers()) return false;
    if (hasWon() != other.hasWon()) return false;
    if (hasWon()) {
      if (getWon()
          != other.getWon()) return false;
    }
    if (!internalGetPlayers().equals(
        other.internalGetPlayers())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TEAM_URN_FIELD_NUMBER;
    hash = (53 * hash) + getTeamUrn().hashCode();
    hash = (37 * hash) + FACTION_FIELD_NUMBER;
    hash = (53 * hash) + faction_;
    hash = (37 * hash) + BARRACKS_FIELD_NUMBER;
    hash = (53 * hash) + getBarracks();
    hash = (37 * hash) + KILLS_FIELD_NUMBER;
    hash = (53 * hash) + getKills();
    hash = (37 * hash) + NET_WORTH_FIELD_NUMBER;
    hash = (53 * hash) + getNetWorth();
    hash = (37 * hash) + ROSHANS_FIELD_NUMBER;
    hash = (53 * hash) + getRoshans();
    hash = (37 * hash) + TOWERS_FIELD_NUMBER;
    hash = (53 * hash) + getTowers();
    if (hasWon()) {
      hash = (37 * hash) + WON_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getWon());
    }
    if (!internalGetPlayers().getMap().isEmpty()) {
      hash = (37 * hash) + PLAYERS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetPlayers().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.bragi.Dota2TeamPreviousMapState parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.Dota2TeamPreviousMapState parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.Dota2TeamPreviousMapState parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.Dota2TeamPreviousMapState parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.Dota2TeamPreviousMapState parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.Dota2TeamPreviousMapState parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.Dota2TeamPreviousMapState parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bragi.Dota2TeamPreviousMapState parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.bragi.Dota2TeamPreviousMapState parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.bragi.Dota2TeamPreviousMapState parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.bragi.Dota2TeamPreviousMapState parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bragi.Dota2TeamPreviousMapState parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.bragi.Dota2TeamPreviousMapState prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code bragi.Dota2TeamPreviousMapState}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bragi.Dota2TeamPreviousMapState)
      com.bragi.Dota2TeamPreviousMapStateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bragi.Dota2Proto.internal_static_bragi_Dota2TeamPreviousMapState_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 9:
          return internalGetPlayers();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 9:
          return internalGetMutablePlayers();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bragi.Dota2Proto.internal_static_bragi_Dota2TeamPreviousMapState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bragi.Dota2TeamPreviousMapState.class, com.bragi.Dota2TeamPreviousMapState.Builder.class);
    }

    // Construct using com.bragi.Dota2TeamPreviousMapState.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      teamUrn_ = "";
      faction_ = 0;
      barracks_ = 0;
      kills_ = 0;
      netWorth_ = 0;
      roshans_ = 0;
      towers_ = 0;
      won_ = false;
      internalGetMutablePlayers().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.bragi.Dota2Proto.internal_static_bragi_Dota2TeamPreviousMapState_descriptor;
    }

    @java.lang.Override
    public com.bragi.Dota2TeamPreviousMapState getDefaultInstanceForType() {
      return com.bragi.Dota2TeamPreviousMapState.getDefaultInstance();
    }

    @java.lang.Override
    public com.bragi.Dota2TeamPreviousMapState build() {
      com.bragi.Dota2TeamPreviousMapState result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.bragi.Dota2TeamPreviousMapState buildPartial() {
      com.bragi.Dota2TeamPreviousMapState result = new com.bragi.Dota2TeamPreviousMapState(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.bragi.Dota2TeamPreviousMapState result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.teamUrn_ = teamUrn_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.faction_ = faction_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.barracks_ = barracks_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.kills_ = kills_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.netWorth_ = netWorth_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.roshans_ = roshans_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.towers_ = towers_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.won_ = won_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.players_ = internalGetPlayers().build(PlayersDefaultEntryHolder.defaultEntry);
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.bragi.Dota2TeamPreviousMapState) {
        return mergeFrom((com.bragi.Dota2TeamPreviousMapState)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.bragi.Dota2TeamPreviousMapState other) {
      if (other == com.bragi.Dota2TeamPreviousMapState.getDefaultInstance()) return this;
      if (!other.getTeamUrn().isEmpty()) {
        teamUrn_ = other.teamUrn_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.faction_ != 0) {
        setFactionValue(other.getFactionValue());
      }
      if (other.getBarracks() != 0) {
        setBarracks(other.getBarracks());
      }
      if (other.getKills() != 0) {
        setKills(other.getKills());
      }
      if (other.getNetWorth() != 0) {
        setNetWorth(other.getNetWorth());
      }
      if (other.getRoshans() != 0) {
        setRoshans(other.getRoshans());
      }
      if (other.getTowers() != 0) {
        setTowers(other.getTowers());
      }
      if (other.hasWon()) {
        setWon(other.getWon());
      }
      internalGetMutablePlayers().mergeFrom(
          other.internalGetPlayers());
      bitField0_ |= 0x00000100;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              teamUrn_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              faction_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              barracks_ = input.readUInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              kills_ = input.readUInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              netWorth_ = input.readUInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              roshans_ = input.readUInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              towers_ = input.readUInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              won_ = input.readBool();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 74: {
              com.google.protobuf.MapEntry<java.lang.String, com.bragi.Dota2PlayerPreviousMapState>
              players__ = input.readMessage(
                  PlayersDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutablePlayers().ensureBuilderMap().put(
                  players__.getKey(), players__.getValue());
              bitField0_ |= 0x00000100;
              break;
            } // case 74
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object teamUrn_ = "";
    /**
     * <code>string team_urn = 1 [json_name = "teamUrn"];</code>
     * @return The teamUrn.
     */
    public java.lang.String getTeamUrn() {
      java.lang.Object ref = teamUrn_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        teamUrn_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string team_urn = 1 [json_name = "teamUrn"];</code>
     * @return The bytes for teamUrn.
     */
    public com.google.protobuf.ByteString
        getTeamUrnBytes() {
      java.lang.Object ref = teamUrn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamUrn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string team_urn = 1 [json_name = "teamUrn"];</code>
     * @param value The teamUrn to set.
     * @return This builder for chaining.
     */
    public Builder setTeamUrn(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      teamUrn_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>string team_urn = 1 [json_name = "teamUrn"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTeamUrn() {
      teamUrn_ = getDefaultInstance().getTeamUrn();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>string team_urn = 1 [json_name = "teamUrn"];</code>
     * @param value The bytes for teamUrn to set.
     * @return This builder for chaining.
     */
    public Builder setTeamUrnBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      teamUrn_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private int faction_ = 0;
    /**
     * <code>.bragi.Dota2Faction faction = 2 [json_name = "faction"];</code>
     * @return The enum numeric value on the wire for faction.
     */
    @java.lang.Override public int getFactionValue() {
      return faction_;
    }
    /**
     * <code>.bragi.Dota2Faction faction = 2 [json_name = "faction"];</code>
     * @param value The enum numeric value on the wire for faction to set.
     * @return This builder for chaining.
     */
    public Builder setFactionValue(int value) {
      faction_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>.bragi.Dota2Faction faction = 2 [json_name = "faction"];</code>
     * @return The faction.
     */
    @java.lang.Override
    public com.bragi.Dota2Faction getFaction() {
      com.bragi.Dota2Faction result = com.bragi.Dota2Faction.forNumber(faction_);
      return result == null ? com.bragi.Dota2Faction.UNRECOGNIZED : result;
    }
    /**
     * <code>.bragi.Dota2Faction faction = 2 [json_name = "faction"];</code>
     * @param value The faction to set.
     * @return This builder for chaining.
     */
    public Builder setFaction(com.bragi.Dota2Faction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      faction_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.bragi.Dota2Faction faction = 2 [json_name = "faction"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFaction() {
      bitField0_ = (bitField0_ & ~0x00000002);
      faction_ = 0;
      onChanged();
      return this;
    }

    private int barracks_ ;
    /**
     * <code>uint32 barracks = 3 [json_name = "barracks"];</code>
     * @return The barracks.
     */
    @java.lang.Override
    public int getBarracks() {
      return barracks_;
    }
    /**
     * <code>uint32 barracks = 3 [json_name = "barracks"];</code>
     * @param value The barracks to set.
     * @return This builder for chaining.
     */
    public Builder setBarracks(int value) {

      barracks_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 barracks = 3 [json_name = "barracks"];</code>
     * @return This builder for chaining.
     */
    public Builder clearBarracks() {
      bitField0_ = (bitField0_ & ~0x00000004);
      barracks_ = 0;
      onChanged();
      return this;
    }

    private int kills_ ;
    /**
     * <code>uint32 kills = 4 [json_name = "kills"];</code>
     * @return The kills.
     */
    @java.lang.Override
    public int getKills() {
      return kills_;
    }
    /**
     * <code>uint32 kills = 4 [json_name = "kills"];</code>
     * @param value The kills to set.
     * @return This builder for chaining.
     */
    public Builder setKills(int value) {

      kills_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 kills = 4 [json_name = "kills"];</code>
     * @return This builder for chaining.
     */
    public Builder clearKills() {
      bitField0_ = (bitField0_ & ~0x00000008);
      kills_ = 0;
      onChanged();
      return this;
    }

    private int netWorth_ ;
    /**
     * <code>uint32 net_worth = 5 [json_name = "netWorth"];</code>
     * @return The netWorth.
     */
    @java.lang.Override
    public int getNetWorth() {
      return netWorth_;
    }
    /**
     * <code>uint32 net_worth = 5 [json_name = "netWorth"];</code>
     * @param value The netWorth to set.
     * @return This builder for chaining.
     */
    public Builder setNetWorth(int value) {

      netWorth_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 net_worth = 5 [json_name = "netWorth"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNetWorth() {
      bitField0_ = (bitField0_ & ~0x00000010);
      netWorth_ = 0;
      onChanged();
      return this;
    }

    private int roshans_ ;
    /**
     * <code>uint32 roshans = 6 [json_name = "roshans"];</code>
     * @return The roshans.
     */
    @java.lang.Override
    public int getRoshans() {
      return roshans_;
    }
    /**
     * <code>uint32 roshans = 6 [json_name = "roshans"];</code>
     * @param value The roshans to set.
     * @return This builder for chaining.
     */
    public Builder setRoshans(int value) {

      roshans_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 roshans = 6 [json_name = "roshans"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRoshans() {
      bitField0_ = (bitField0_ & ~0x00000020);
      roshans_ = 0;
      onChanged();
      return this;
    }

    private int towers_ ;
    /**
     * <code>uint32 towers = 7 [json_name = "towers"];</code>
     * @return The towers.
     */
    @java.lang.Override
    public int getTowers() {
      return towers_;
    }
    /**
     * <code>uint32 towers = 7 [json_name = "towers"];</code>
     * @param value The towers to set.
     * @return This builder for chaining.
     */
    public Builder setTowers(int value) {

      towers_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 towers = 7 [json_name = "towers"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTowers() {
      bitField0_ = (bitField0_ & ~0x00000040);
      towers_ = 0;
      onChanged();
      return this;
    }

    private boolean won_ ;
    /**
     * <code>optional bool won = 8 [json_name = "won"];</code>
     * @return Whether the won field is set.
     */
    @java.lang.Override
    public boolean hasWon() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional bool won = 8 [json_name = "won"];</code>
     * @return The won.
     */
    @java.lang.Override
    public boolean getWon() {
      return won_;
    }
    /**
     * <code>optional bool won = 8 [json_name = "won"];</code>
     * @param value The won to set.
     * @return This builder for chaining.
     */
    public Builder setWon(boolean value) {

      won_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool won = 8 [json_name = "won"];</code>
     * @return This builder for chaining.
     */
    public Builder clearWon() {
      bitField0_ = (bitField0_ & ~0x00000080);
      won_ = false;
      onChanged();
      return this;
    }

    private static final class PlayersConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.String, com.bragi.Dota2PlayerPreviousMapStateOrBuilder, com.bragi.Dota2PlayerPreviousMapState> {
      @java.lang.Override
      public com.bragi.Dota2PlayerPreviousMapState build(com.bragi.Dota2PlayerPreviousMapStateOrBuilder val) {
        if (val instanceof com.bragi.Dota2PlayerPreviousMapState) { return (com.bragi.Dota2PlayerPreviousMapState) val; }
        return ((com.bragi.Dota2PlayerPreviousMapState.Builder) val).build();
      }

      @java.lang.Override
      public com.google.protobuf.MapEntry<java.lang.String, com.bragi.Dota2PlayerPreviousMapState> defaultEntry() {
        return PlayersDefaultEntryHolder.defaultEntry;
      }
    };
    private static final PlayersConverter playersConverter = new PlayersConverter();

    private com.google.protobuf.MapFieldBuilder<
        java.lang.String, com.bragi.Dota2PlayerPreviousMapStateOrBuilder, com.bragi.Dota2PlayerPreviousMapState, com.bragi.Dota2PlayerPreviousMapState.Builder> players_;
    private com.google.protobuf.MapFieldBuilder<java.lang.String, com.bragi.Dota2PlayerPreviousMapStateOrBuilder, com.bragi.Dota2PlayerPreviousMapState, com.bragi.Dota2PlayerPreviousMapState.Builder>
        internalGetPlayers() {
      if (players_ == null) {
        return new com.google.protobuf.MapFieldBuilder<>(playersConverter);
      }
      return players_;
    }
    private com.google.protobuf.MapFieldBuilder<java.lang.String, com.bragi.Dota2PlayerPreviousMapStateOrBuilder, com.bragi.Dota2PlayerPreviousMapState, com.bragi.Dota2PlayerPreviousMapState.Builder>
        internalGetMutablePlayers() {
      if (players_ == null) {
        players_ = new com.google.protobuf.MapFieldBuilder<>(playersConverter);
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return players_;
    }
    public int getPlayersCount() {
      return internalGetPlayers().ensureBuilderMap().size();
    }
    /**
     * <code>map&lt;string, .bragi.Dota2PlayerPreviousMapState&gt; players = 9 [json_name = "players"];</code>
     */
    @java.lang.Override
    public boolean containsPlayers(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetPlayers().ensureBuilderMap().containsKey(key);
    }
    /**
     * Use {@link #getPlayersMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.bragi.Dota2PlayerPreviousMapState> getPlayers() {
      return getPlayersMap();
    }
    /**
     * <code>map&lt;string, .bragi.Dota2PlayerPreviousMapState&gt; players = 9 [json_name = "players"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, com.bragi.Dota2PlayerPreviousMapState> getPlayersMap() {
      return internalGetPlayers().getImmutableMap();
    }
    /**
     * <code>map&lt;string, .bragi.Dota2PlayerPreviousMapState&gt; players = 9 [json_name = "players"];</code>
     */
    @java.lang.Override
    public /* nullable */
com.bragi.Dota2PlayerPreviousMapState getPlayersOrDefault(
        java.lang.String key,
        /* nullable */
com.bragi.Dota2PlayerPreviousMapState defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.bragi.Dota2PlayerPreviousMapStateOrBuilder> map = internalGetMutablePlayers().ensureBuilderMap();
      return map.containsKey(key) ? playersConverter.build(map.get(key)) : defaultValue;
    }
    /**
     * <code>map&lt;string, .bragi.Dota2PlayerPreviousMapState&gt; players = 9 [json_name = "players"];</code>
     */
    @java.lang.Override
    public com.bragi.Dota2PlayerPreviousMapState getPlayersOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.bragi.Dota2PlayerPreviousMapStateOrBuilder> map = internalGetMutablePlayers().ensureBuilderMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return playersConverter.build(map.get(key));
    }
    public Builder clearPlayers() {
      bitField0_ = (bitField0_ & ~0x00000100);
      internalGetMutablePlayers().clear();
      return this;
    }
    /**
     * <code>map&lt;string, .bragi.Dota2PlayerPreviousMapState&gt; players = 9 [json_name = "players"];</code>
     */
    public Builder removePlayers(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutablePlayers().ensureBuilderMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.bragi.Dota2PlayerPreviousMapState>
        getMutablePlayers() {
      bitField0_ |= 0x00000100;
      return internalGetMutablePlayers().ensureMessageMap();
    }
    /**
     * <code>map&lt;string, .bragi.Dota2PlayerPreviousMapState&gt; players = 9 [json_name = "players"];</code>
     */
    public Builder putPlayers(
        java.lang.String key,
        com.bragi.Dota2PlayerPreviousMapState value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutablePlayers().ensureBuilderMap()
          .put(key, value);
      bitField0_ |= 0x00000100;
      return this;
    }
    /**
     * <code>map&lt;string, .bragi.Dota2PlayerPreviousMapState&gt; players = 9 [json_name = "players"];</code>
     */
    public Builder putAllPlayers(
        java.util.Map<java.lang.String, com.bragi.Dota2PlayerPreviousMapState> values) {
      for (java.util.Map.Entry<java.lang.String, com.bragi.Dota2PlayerPreviousMapState> e : values.entrySet()) {
        if (e.getKey() == null || e.getValue() == null) {
          throw new NullPointerException();
        }
      }
      internalGetMutablePlayers().ensureBuilderMap()
          .putAll(values);
      bitField0_ |= 0x00000100;
      return this;
    }
    /**
     * <code>map&lt;string, .bragi.Dota2PlayerPreviousMapState&gt; players = 9 [json_name = "players"];</code>
     */
    public com.bragi.Dota2PlayerPreviousMapState.Builder putPlayersBuilderIfAbsent(
        java.lang.String key) {
      java.util.Map<java.lang.String, com.bragi.Dota2PlayerPreviousMapStateOrBuilder> builderMap = internalGetMutablePlayers().ensureBuilderMap();
      com.bragi.Dota2PlayerPreviousMapStateOrBuilder entry = builderMap.get(key);
      if (entry == null) {
        entry = com.bragi.Dota2PlayerPreviousMapState.newBuilder();
        builderMap.put(key, entry);
      }
      if (entry instanceof com.bragi.Dota2PlayerPreviousMapState) {
        entry = ((com.bragi.Dota2PlayerPreviousMapState) entry).toBuilder();
        builderMap.put(key, entry);
      }
      return (com.bragi.Dota2PlayerPreviousMapState.Builder) entry;
    }

    // @@protoc_insertion_point(builder_scope:bragi.Dota2TeamPreviousMapState)
  }

  // @@protoc_insertion_point(class_scope:bragi.Dota2TeamPreviousMapState)
  private static final com.bragi.Dota2TeamPreviousMapState DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.bragi.Dota2TeamPreviousMapState();
  }

  public static com.bragi.Dota2TeamPreviousMapState getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Dota2TeamPreviousMapState>
      PARSER = new com.google.protobuf.AbstractParser<Dota2TeamPreviousMapState>() {
    @java.lang.Override
    public Dota2TeamPreviousMapState parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Dota2TeamPreviousMapState> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Dota2TeamPreviousMapState> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.bragi.Dota2TeamPreviousMapState getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

