// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bragi/bragi_service.proto
// Protobuf Java Version: 4.29.3

package com.bragi;

/**
 * <pre>
 * At the beginning, when the stream is established, an initial (Game)MatchMessage with a (Game)MatchSnapshot payload
 * (eg. CS2MatchSnapshot) is received (just only once during the stream lifecycle, to recover (Game)MatchSnapshot you
 * need to reconnect to server). Cache this (Game)MatchSnapshot into memory. Then only AnnouncementUpdate or (Game)MatchMessage
 * with (Game)MatchUpdate payload (eg. CS2MatchUpdate) can be received. Those updates are supposed to be applied on cached
 * (Game)MatchSnapshot. If AnnouncementUpdate is received then append its "payload" property value to the array of "announcements"
 * in cached (Game)MatchSnapshot. If update (e.g. CS2MatchUpdate) payload is received then apply this update on "match_state"
 * property in cached (Game)MatchSnapshot. For both update cases do not forget also to update "sequence" and "timestamp"
 * properties in the cached (Game)MatchSnapshot with values from the received (Game)MatchMessage.
 * </pre>
 *
 * Protobuf type {@code bragi.MatchMessage}
 */
public final class MatchMessage extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:bragi.MatchMessage)
    MatchMessageOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      MatchMessage.class.getName());
  }
  // Use MatchMessage.newBuilder() to construct.
  private MatchMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private MatchMessage() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.bragi.BragiServiceProto.internal_static_bragi_MatchMessage_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.bragi.BragiServiceProto.internal_static_bragi_MatchMessage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.bragi.MatchMessage.class, com.bragi.MatchMessage.Builder.class);
  }

  private int messageCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object message_;
  public enum MessageCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    ANNOUNCEMENT(1),
    CS2(2),
    CS2_DUELS(3),
    DOTA2(4),
    RUSH_SOCCER(5),
    LOL(6),
    RUSH_BASKETBALL(7),
    VALORANT(8),
    MESSAGE_NOT_SET(0);
    private final int value;
    private MessageCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MessageCase valueOf(int value) {
      return forNumber(value);
    }

    public static MessageCase forNumber(int value) {
      switch (value) {
        case 1: return ANNOUNCEMENT;
        case 2: return CS2;
        case 3: return CS2_DUELS;
        case 4: return DOTA2;
        case 5: return RUSH_SOCCER;
        case 6: return LOL;
        case 7: return RUSH_BASKETBALL;
        case 8: return VALORANT;
        case 0: return MESSAGE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public MessageCase
  getMessageCase() {
    return MessageCase.forNumber(
        messageCase_);
  }

  public static final int ANNOUNCEMENT_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Append announcement's payload to property announcements array in (Game)MatchSnapshot.
   * </pre>
   *
   * <code>.bragi.AnnouncementUpdate announcement = 1 [json_name = "announcement"];</code>
   * @return Whether the announcement field is set.
   */
  @java.lang.Override
  public boolean hasAnnouncement() {
    return messageCase_ == 1;
  }
  /**
   * <pre>
   * Append announcement's payload to property announcements array in (Game)MatchSnapshot.
   * </pre>
   *
   * <code>.bragi.AnnouncementUpdate announcement = 1 [json_name = "announcement"];</code>
   * @return The announcement.
   */
  @java.lang.Override
  public com.bragi.AnnouncementUpdate getAnnouncement() {
    if (messageCase_ == 1) {
       return (com.bragi.AnnouncementUpdate) message_;
    }
    return com.bragi.AnnouncementUpdate.getDefaultInstance();
  }
  /**
   * <pre>
   * Append announcement's payload to property announcements array in (Game)MatchSnapshot.
   * </pre>
   *
   * <code>.bragi.AnnouncementUpdate announcement = 1 [json_name = "announcement"];</code>
   */
  @java.lang.Override
  public com.bragi.AnnouncementUpdateOrBuilder getAnnouncementOrBuilder() {
    if (messageCase_ == 1) {
       return (com.bragi.AnnouncementUpdate) message_;
    }
    return com.bragi.AnnouncementUpdate.getDefaultInstance();
  }

  public static final int CS2_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 sport.
   * </pre>
   *
   * <code>.bragi.CS2MatchMessage cs2 = 2 [json_name = "cs2"];</code>
   * @return Whether the cs2 field is set.
   */
  @java.lang.Override
  public boolean hasCs2() {
    return messageCase_ == 2;
  }
  /**
   * <pre>
   * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 sport.
   * </pre>
   *
   * <code>.bragi.CS2MatchMessage cs2 = 2 [json_name = "cs2"];</code>
   * @return The cs2.
   */
  @java.lang.Override
  public com.bragi.CS2MatchMessage getCs2() {
    if (messageCase_ == 2) {
       return (com.bragi.CS2MatchMessage) message_;
    }
    return com.bragi.CS2MatchMessage.getDefaultInstance();
  }
  /**
   * <pre>
   * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 sport.
   * </pre>
   *
   * <code>.bragi.CS2MatchMessage cs2 = 2 [json_name = "cs2"];</code>
   */
  @java.lang.Override
  public com.bragi.CS2MatchMessageOrBuilder getCs2OrBuilder() {
    if (messageCase_ == 2) {
       return (com.bragi.CS2MatchMessage) message_;
    }
    return com.bragi.CS2MatchMessage.getDefaultInstance();
  }

  public static final int CS2_DUELS_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 Duels sport.
   * </pre>
   *
   * <code>.bragi.CS2MatchMessage cs2_duels = 3 [json_name = "cs2Duels"];</code>
   * @return Whether the cs2Duels field is set.
   */
  @java.lang.Override
  public boolean hasCs2Duels() {
    return messageCase_ == 3;
  }
  /**
   * <pre>
   * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 Duels sport.
   * </pre>
   *
   * <code>.bragi.CS2MatchMessage cs2_duels = 3 [json_name = "cs2Duels"];</code>
   * @return The cs2Duels.
   */
  @java.lang.Override
  public com.bragi.CS2MatchMessage getCs2Duels() {
    if (messageCase_ == 3) {
       return (com.bragi.CS2MatchMessage) message_;
    }
    return com.bragi.CS2MatchMessage.getDefaultInstance();
  }
  /**
   * <pre>
   * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 Duels sport.
   * </pre>
   *
   * <code>.bragi.CS2MatchMessage cs2_duels = 3 [json_name = "cs2Duels"];</code>
   */
  @java.lang.Override
  public com.bragi.CS2MatchMessageOrBuilder getCs2DuelsOrBuilder() {
    if (messageCase_ == 3) {
       return (com.bragi.CS2MatchMessage) message_;
    }
    return com.bragi.CS2MatchMessage.getDefaultInstance();
  }

  public static final int DOTA2_FIELD_NUMBER = 4;
  /**
   * <pre>
   * Message which wraps Dota2MatchSnapshot or Dota2MatchUpdate message with given match_urn and sequence for Dota2 sport.
   * </pre>
   *
   * <code>.bragi.Dota2MatchMessage dota2 = 4 [json_name = "dota2"];</code>
   * @return Whether the dota2 field is set.
   */
  @java.lang.Override
  public boolean hasDota2() {
    return messageCase_ == 4;
  }
  /**
   * <pre>
   * Message which wraps Dota2MatchSnapshot or Dota2MatchUpdate message with given match_urn and sequence for Dota2 sport.
   * </pre>
   *
   * <code>.bragi.Dota2MatchMessage dota2 = 4 [json_name = "dota2"];</code>
   * @return The dota2.
   */
  @java.lang.Override
  public com.bragi.Dota2MatchMessage getDota2() {
    if (messageCase_ == 4) {
       return (com.bragi.Dota2MatchMessage) message_;
    }
    return com.bragi.Dota2MatchMessage.getDefaultInstance();
  }
  /**
   * <pre>
   * Message which wraps Dota2MatchSnapshot or Dota2MatchUpdate message with given match_urn and sequence for Dota2 sport.
   * </pre>
   *
   * <code>.bragi.Dota2MatchMessage dota2 = 4 [json_name = "dota2"];</code>
   */
  @java.lang.Override
  public com.bragi.Dota2MatchMessageOrBuilder getDota2OrBuilder() {
    if (messageCase_ == 4) {
       return (com.bragi.Dota2MatchMessage) message_;
    }
    return com.bragi.Dota2MatchMessage.getDefaultInstance();
  }

  public static final int RUSH_SOCCER_FIELD_NUMBER = 5;
  /**
   * <pre>
   * Message which wraps RushSoccerMatchSnapshot or RushSoccerMatchUpdate message with given match_urn and sequence for RushSoccer sport.
   * </pre>
   *
   * <code>.bragi.RushSoccerMatchMessage rush_soccer = 5 [json_name = "rushSoccer"];</code>
   * @return Whether the rushSoccer field is set.
   */
  @java.lang.Override
  public boolean hasRushSoccer() {
    return messageCase_ == 5;
  }
  /**
   * <pre>
   * Message which wraps RushSoccerMatchSnapshot or RushSoccerMatchUpdate message with given match_urn and sequence for RushSoccer sport.
   * </pre>
   *
   * <code>.bragi.RushSoccerMatchMessage rush_soccer = 5 [json_name = "rushSoccer"];</code>
   * @return The rushSoccer.
   */
  @java.lang.Override
  public com.bragi.RushSoccerMatchMessage getRushSoccer() {
    if (messageCase_ == 5) {
       return (com.bragi.RushSoccerMatchMessage) message_;
    }
    return com.bragi.RushSoccerMatchMessage.getDefaultInstance();
  }
  /**
   * <pre>
   * Message which wraps RushSoccerMatchSnapshot or RushSoccerMatchUpdate message with given match_urn and sequence for RushSoccer sport.
   * </pre>
   *
   * <code>.bragi.RushSoccerMatchMessage rush_soccer = 5 [json_name = "rushSoccer"];</code>
   */
  @java.lang.Override
  public com.bragi.RushSoccerMatchMessageOrBuilder getRushSoccerOrBuilder() {
    if (messageCase_ == 5) {
       return (com.bragi.RushSoccerMatchMessage) message_;
    }
    return com.bragi.RushSoccerMatchMessage.getDefaultInstance();
  }

  public static final int LOL_FIELD_NUMBER = 6;
  /**
   * <pre>
   * Message which wraps LolMatchSnapshot or LolMatchUpdate message with given match_urn and sequence for Lol sport.
   * </pre>
   *
   * <code>.bragi.LolMatchMessage lol = 6 [json_name = "lol"];</code>
   * @return Whether the lol field is set.
   */
  @java.lang.Override
  public boolean hasLol() {
    return messageCase_ == 6;
  }
  /**
   * <pre>
   * Message which wraps LolMatchSnapshot or LolMatchUpdate message with given match_urn and sequence for Lol sport.
   * </pre>
   *
   * <code>.bragi.LolMatchMessage lol = 6 [json_name = "lol"];</code>
   * @return The lol.
   */
  @java.lang.Override
  public com.bragi.LolMatchMessage getLol() {
    if (messageCase_ == 6) {
       return (com.bragi.LolMatchMessage) message_;
    }
    return com.bragi.LolMatchMessage.getDefaultInstance();
  }
  /**
   * <pre>
   * Message which wraps LolMatchSnapshot or LolMatchUpdate message with given match_urn and sequence for Lol sport.
   * </pre>
   *
   * <code>.bragi.LolMatchMessage lol = 6 [json_name = "lol"];</code>
   */
  @java.lang.Override
  public com.bragi.LolMatchMessageOrBuilder getLolOrBuilder() {
    if (messageCase_ == 6) {
       return (com.bragi.LolMatchMessage) message_;
    }
    return com.bragi.LolMatchMessage.getDefaultInstance();
  }

  public static final int RUSH_BASKETBALL_FIELD_NUMBER = 7;
  /**
   * <pre>
   * Message which wraps RushBasketballMatchSnapshot or RushBasketballMatchUpdate message with given match_urn and sequence for RushBasketball sport.
   * </pre>
   *
   * <code>.bragi.RushBasketballMatchMessage rush_basketball = 7 [json_name = "rushBasketball"];</code>
   * @return Whether the rushBasketball field is set.
   */
  @java.lang.Override
  public boolean hasRushBasketball() {
    return messageCase_ == 7;
  }
  /**
   * <pre>
   * Message which wraps RushBasketballMatchSnapshot or RushBasketballMatchUpdate message with given match_urn and sequence for RushBasketball sport.
   * </pre>
   *
   * <code>.bragi.RushBasketballMatchMessage rush_basketball = 7 [json_name = "rushBasketball"];</code>
   * @return The rushBasketball.
   */
  @java.lang.Override
  public com.bragi.RushBasketballMatchMessage getRushBasketball() {
    if (messageCase_ == 7) {
       return (com.bragi.RushBasketballMatchMessage) message_;
    }
    return com.bragi.RushBasketballMatchMessage.getDefaultInstance();
  }
  /**
   * <pre>
   * Message which wraps RushBasketballMatchSnapshot or RushBasketballMatchUpdate message with given match_urn and sequence for RushBasketball sport.
   * </pre>
   *
   * <code>.bragi.RushBasketballMatchMessage rush_basketball = 7 [json_name = "rushBasketball"];</code>
   */
  @java.lang.Override
  public com.bragi.RushBasketballMatchMessageOrBuilder getRushBasketballOrBuilder() {
    if (messageCase_ == 7) {
       return (com.bragi.RushBasketballMatchMessage) message_;
    }
    return com.bragi.RushBasketballMatchMessage.getDefaultInstance();
  }

  public static final int VALORANT_FIELD_NUMBER = 8;
  /**
   * <pre>
   * Message which wraps ValorantMatchSnapshot or ValorantMatchUpdate message with given match_urn and sequence for Valorant sport.
   * </pre>
   *
   * <code>.bragi.ValorantMatchMessage valorant = 8 [json_name = "valorant"];</code>
   * @return Whether the valorant field is set.
   */
  @java.lang.Override
  public boolean hasValorant() {
    return messageCase_ == 8;
  }
  /**
   * <pre>
   * Message which wraps ValorantMatchSnapshot or ValorantMatchUpdate message with given match_urn and sequence for Valorant sport.
   * </pre>
   *
   * <code>.bragi.ValorantMatchMessage valorant = 8 [json_name = "valorant"];</code>
   * @return The valorant.
   */
  @java.lang.Override
  public com.bragi.ValorantMatchMessage getValorant() {
    if (messageCase_ == 8) {
       return (com.bragi.ValorantMatchMessage) message_;
    }
    return com.bragi.ValorantMatchMessage.getDefaultInstance();
  }
  /**
   * <pre>
   * Message which wraps ValorantMatchSnapshot or ValorantMatchUpdate message with given match_urn and sequence for Valorant sport.
   * </pre>
   *
   * <code>.bragi.ValorantMatchMessage valorant = 8 [json_name = "valorant"];</code>
   */
  @java.lang.Override
  public com.bragi.ValorantMatchMessageOrBuilder getValorantOrBuilder() {
    if (messageCase_ == 8) {
       return (com.bragi.ValorantMatchMessage) message_;
    }
    return com.bragi.ValorantMatchMessage.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (messageCase_ == 1) {
      output.writeMessage(1, (com.bragi.AnnouncementUpdate) message_);
    }
    if (messageCase_ == 2) {
      output.writeMessage(2, (com.bragi.CS2MatchMessage) message_);
    }
    if (messageCase_ == 3) {
      output.writeMessage(3, (com.bragi.CS2MatchMessage) message_);
    }
    if (messageCase_ == 4) {
      output.writeMessage(4, (com.bragi.Dota2MatchMessage) message_);
    }
    if (messageCase_ == 5) {
      output.writeMessage(5, (com.bragi.RushSoccerMatchMessage) message_);
    }
    if (messageCase_ == 6) {
      output.writeMessage(6, (com.bragi.LolMatchMessage) message_);
    }
    if (messageCase_ == 7) {
      output.writeMessage(7, (com.bragi.RushBasketballMatchMessage) message_);
    }
    if (messageCase_ == 8) {
      output.writeMessage(8, (com.bragi.ValorantMatchMessage) message_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (messageCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.bragi.AnnouncementUpdate) message_);
    }
    if (messageCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.bragi.CS2MatchMessage) message_);
    }
    if (messageCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.bragi.CS2MatchMessage) message_);
    }
    if (messageCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.bragi.Dota2MatchMessage) message_);
    }
    if (messageCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (com.bragi.RushSoccerMatchMessage) message_);
    }
    if (messageCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (com.bragi.LolMatchMessage) message_);
    }
    if (messageCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, (com.bragi.RushBasketballMatchMessage) message_);
    }
    if (messageCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, (com.bragi.ValorantMatchMessage) message_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.bragi.MatchMessage)) {
      return super.equals(obj);
    }
    com.bragi.MatchMessage other = (com.bragi.MatchMessage) obj;

    if (!getMessageCase().equals(other.getMessageCase())) return false;
    switch (messageCase_) {
      case 1:
        if (!getAnnouncement()
            .equals(other.getAnnouncement())) return false;
        break;
      case 2:
        if (!getCs2()
            .equals(other.getCs2())) return false;
        break;
      case 3:
        if (!getCs2Duels()
            .equals(other.getCs2Duels())) return false;
        break;
      case 4:
        if (!getDota2()
            .equals(other.getDota2())) return false;
        break;
      case 5:
        if (!getRushSoccer()
            .equals(other.getRushSoccer())) return false;
        break;
      case 6:
        if (!getLol()
            .equals(other.getLol())) return false;
        break;
      case 7:
        if (!getRushBasketball()
            .equals(other.getRushBasketball())) return false;
        break;
      case 8:
        if (!getValorant()
            .equals(other.getValorant())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (messageCase_) {
      case 1:
        hash = (37 * hash) + ANNOUNCEMENT_FIELD_NUMBER;
        hash = (53 * hash) + getAnnouncement().hashCode();
        break;
      case 2:
        hash = (37 * hash) + CS2_FIELD_NUMBER;
        hash = (53 * hash) + getCs2().hashCode();
        break;
      case 3:
        hash = (37 * hash) + CS2_DUELS_FIELD_NUMBER;
        hash = (53 * hash) + getCs2Duels().hashCode();
        break;
      case 4:
        hash = (37 * hash) + DOTA2_FIELD_NUMBER;
        hash = (53 * hash) + getDota2().hashCode();
        break;
      case 5:
        hash = (37 * hash) + RUSH_SOCCER_FIELD_NUMBER;
        hash = (53 * hash) + getRushSoccer().hashCode();
        break;
      case 6:
        hash = (37 * hash) + LOL_FIELD_NUMBER;
        hash = (53 * hash) + getLol().hashCode();
        break;
      case 7:
        hash = (37 * hash) + RUSH_BASKETBALL_FIELD_NUMBER;
        hash = (53 * hash) + getRushBasketball().hashCode();
        break;
      case 8:
        hash = (37 * hash) + VALORANT_FIELD_NUMBER;
        hash = (53 * hash) + getValorant().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.bragi.MatchMessage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.MatchMessage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.MatchMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.MatchMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.MatchMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.MatchMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.MatchMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bragi.MatchMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.bragi.MatchMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.bragi.MatchMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.bragi.MatchMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bragi.MatchMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.bragi.MatchMessage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * At the beginning, when the stream is established, an initial (Game)MatchMessage with a (Game)MatchSnapshot payload
   * (eg. CS2MatchSnapshot) is received (just only once during the stream lifecycle, to recover (Game)MatchSnapshot you
   * need to reconnect to server). Cache this (Game)MatchSnapshot into memory. Then only AnnouncementUpdate or (Game)MatchMessage
   * with (Game)MatchUpdate payload (eg. CS2MatchUpdate) can be received. Those updates are supposed to be applied on cached
   * (Game)MatchSnapshot. If AnnouncementUpdate is received then append its "payload" property value to the array of "announcements"
   * in cached (Game)MatchSnapshot. If update (e.g. CS2MatchUpdate) payload is received then apply this update on "match_state"
   * property in cached (Game)MatchSnapshot. For both update cases do not forget also to update "sequence" and "timestamp"
   * properties in the cached (Game)MatchSnapshot with values from the received (Game)MatchMessage.
   * </pre>
   *
   * Protobuf type {@code bragi.MatchMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bragi.MatchMessage)
      com.bragi.MatchMessageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bragi.BragiServiceProto.internal_static_bragi_MatchMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bragi.BragiServiceProto.internal_static_bragi_MatchMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bragi.MatchMessage.class, com.bragi.MatchMessage.Builder.class);
    }

    // Construct using com.bragi.MatchMessage.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (announcementBuilder_ != null) {
        announcementBuilder_.clear();
      }
      if (cs2Builder_ != null) {
        cs2Builder_.clear();
      }
      if (cs2DuelsBuilder_ != null) {
        cs2DuelsBuilder_.clear();
      }
      if (dota2Builder_ != null) {
        dota2Builder_.clear();
      }
      if (rushSoccerBuilder_ != null) {
        rushSoccerBuilder_.clear();
      }
      if (lolBuilder_ != null) {
        lolBuilder_.clear();
      }
      if (rushBasketballBuilder_ != null) {
        rushBasketballBuilder_.clear();
      }
      if (valorantBuilder_ != null) {
        valorantBuilder_.clear();
      }
      messageCase_ = 0;
      message_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.bragi.BragiServiceProto.internal_static_bragi_MatchMessage_descriptor;
    }

    @java.lang.Override
    public com.bragi.MatchMessage getDefaultInstanceForType() {
      return com.bragi.MatchMessage.getDefaultInstance();
    }

    @java.lang.Override
    public com.bragi.MatchMessage build() {
      com.bragi.MatchMessage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.bragi.MatchMessage buildPartial() {
      com.bragi.MatchMessage result = new com.bragi.MatchMessage(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.bragi.MatchMessage result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(com.bragi.MatchMessage result) {
      result.messageCase_ = messageCase_;
      result.message_ = this.message_;
      if (messageCase_ == 1 &&
          announcementBuilder_ != null) {
        result.message_ = announcementBuilder_.build();
      }
      if (messageCase_ == 2 &&
          cs2Builder_ != null) {
        result.message_ = cs2Builder_.build();
      }
      if (messageCase_ == 3 &&
          cs2DuelsBuilder_ != null) {
        result.message_ = cs2DuelsBuilder_.build();
      }
      if (messageCase_ == 4 &&
          dota2Builder_ != null) {
        result.message_ = dota2Builder_.build();
      }
      if (messageCase_ == 5 &&
          rushSoccerBuilder_ != null) {
        result.message_ = rushSoccerBuilder_.build();
      }
      if (messageCase_ == 6 &&
          lolBuilder_ != null) {
        result.message_ = lolBuilder_.build();
      }
      if (messageCase_ == 7 &&
          rushBasketballBuilder_ != null) {
        result.message_ = rushBasketballBuilder_.build();
      }
      if (messageCase_ == 8 &&
          valorantBuilder_ != null) {
        result.message_ = valorantBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.bragi.MatchMessage) {
        return mergeFrom((com.bragi.MatchMessage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.bragi.MatchMessage other) {
      if (other == com.bragi.MatchMessage.getDefaultInstance()) return this;
      switch (other.getMessageCase()) {
        case ANNOUNCEMENT: {
          mergeAnnouncement(other.getAnnouncement());
          break;
        }
        case CS2: {
          mergeCs2(other.getCs2());
          break;
        }
        case CS2_DUELS: {
          mergeCs2Duels(other.getCs2Duels());
          break;
        }
        case DOTA2: {
          mergeDota2(other.getDota2());
          break;
        }
        case RUSH_SOCCER: {
          mergeRushSoccer(other.getRushSoccer());
          break;
        }
        case LOL: {
          mergeLol(other.getLol());
          break;
        }
        case RUSH_BASKETBALL: {
          mergeRushBasketball(other.getRushBasketball());
          break;
        }
        case VALORANT: {
          mergeValorant(other.getValorant());
          break;
        }
        case MESSAGE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getAnnouncementFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getCs2FieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getCs2DuelsFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 3;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getDota2FieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getRushSoccerFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 5;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getLolFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 6;
              break;
            } // case 50
            case 58: {
              input.readMessage(
                  getRushBasketballFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 7;
              break;
            } // case 58
            case 66: {
              input.readMessage(
                  getValorantFieldBuilder().getBuilder(),
                  extensionRegistry);
              messageCase_ = 8;
              break;
            } // case 66
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int messageCase_ = 0;
    private java.lang.Object message_;
    public MessageCase
        getMessageCase() {
      return MessageCase.forNumber(
          messageCase_);
    }

    public Builder clearMessage() {
      messageCase_ = 0;
      message_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.AnnouncementUpdate, com.bragi.AnnouncementUpdate.Builder, com.bragi.AnnouncementUpdateOrBuilder> announcementBuilder_;
    /**
     * <pre>
     * Append announcement's payload to property announcements array in (Game)MatchSnapshot.
     * </pre>
     *
     * <code>.bragi.AnnouncementUpdate announcement = 1 [json_name = "announcement"];</code>
     * @return Whether the announcement field is set.
     */
    @java.lang.Override
    public boolean hasAnnouncement() {
      return messageCase_ == 1;
    }
    /**
     * <pre>
     * Append announcement's payload to property announcements array in (Game)MatchSnapshot.
     * </pre>
     *
     * <code>.bragi.AnnouncementUpdate announcement = 1 [json_name = "announcement"];</code>
     * @return The announcement.
     */
    @java.lang.Override
    public com.bragi.AnnouncementUpdate getAnnouncement() {
      if (announcementBuilder_ == null) {
        if (messageCase_ == 1) {
          return (com.bragi.AnnouncementUpdate) message_;
        }
        return com.bragi.AnnouncementUpdate.getDefaultInstance();
      } else {
        if (messageCase_ == 1) {
          return announcementBuilder_.getMessage();
        }
        return com.bragi.AnnouncementUpdate.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Append announcement's payload to property announcements array in (Game)MatchSnapshot.
     * </pre>
     *
     * <code>.bragi.AnnouncementUpdate announcement = 1 [json_name = "announcement"];</code>
     */
    public Builder setAnnouncement(com.bragi.AnnouncementUpdate value) {
      if (announcementBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        announcementBuilder_.setMessage(value);
      }
      messageCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Append announcement's payload to property announcements array in (Game)MatchSnapshot.
     * </pre>
     *
     * <code>.bragi.AnnouncementUpdate announcement = 1 [json_name = "announcement"];</code>
     */
    public Builder setAnnouncement(
        com.bragi.AnnouncementUpdate.Builder builderForValue) {
      if (announcementBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        announcementBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Append announcement's payload to property announcements array in (Game)MatchSnapshot.
     * </pre>
     *
     * <code>.bragi.AnnouncementUpdate announcement = 1 [json_name = "announcement"];</code>
     */
    public Builder mergeAnnouncement(com.bragi.AnnouncementUpdate value) {
      if (announcementBuilder_ == null) {
        if (messageCase_ == 1 &&
            message_ != com.bragi.AnnouncementUpdate.getDefaultInstance()) {
          message_ = com.bragi.AnnouncementUpdate.newBuilder((com.bragi.AnnouncementUpdate) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 1) {
          announcementBuilder_.mergeFrom(value);
        } else {
          announcementBuilder_.setMessage(value);
        }
      }
      messageCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Append announcement's payload to property announcements array in (Game)MatchSnapshot.
     * </pre>
     *
     * <code>.bragi.AnnouncementUpdate announcement = 1 [json_name = "announcement"];</code>
     */
    public Builder clearAnnouncement() {
      if (announcementBuilder_ == null) {
        if (messageCase_ == 1) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 1) {
          messageCase_ = 0;
          message_ = null;
        }
        announcementBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Append announcement's payload to property announcements array in (Game)MatchSnapshot.
     * </pre>
     *
     * <code>.bragi.AnnouncementUpdate announcement = 1 [json_name = "announcement"];</code>
     */
    public com.bragi.AnnouncementUpdate.Builder getAnnouncementBuilder() {
      return getAnnouncementFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Append announcement's payload to property announcements array in (Game)MatchSnapshot.
     * </pre>
     *
     * <code>.bragi.AnnouncementUpdate announcement = 1 [json_name = "announcement"];</code>
     */
    @java.lang.Override
    public com.bragi.AnnouncementUpdateOrBuilder getAnnouncementOrBuilder() {
      if ((messageCase_ == 1) && (announcementBuilder_ != null)) {
        return announcementBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 1) {
          return (com.bragi.AnnouncementUpdate) message_;
        }
        return com.bragi.AnnouncementUpdate.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Append announcement's payload to property announcements array in (Game)MatchSnapshot.
     * </pre>
     *
     * <code>.bragi.AnnouncementUpdate announcement = 1 [json_name = "announcement"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.AnnouncementUpdate, com.bragi.AnnouncementUpdate.Builder, com.bragi.AnnouncementUpdateOrBuilder> 
        getAnnouncementFieldBuilder() {
      if (announcementBuilder_ == null) {
        if (!(messageCase_ == 1)) {
          message_ = com.bragi.AnnouncementUpdate.getDefaultInstance();
        }
        announcementBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.AnnouncementUpdate, com.bragi.AnnouncementUpdate.Builder, com.bragi.AnnouncementUpdateOrBuilder>(
                (com.bragi.AnnouncementUpdate) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 1;
      onChanged();
      return announcementBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.CS2MatchMessage, com.bragi.CS2MatchMessage.Builder, com.bragi.CS2MatchMessageOrBuilder> cs2Builder_;
    /**
     * <pre>
     * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 sport.
     * </pre>
     *
     * <code>.bragi.CS2MatchMessage cs2 = 2 [json_name = "cs2"];</code>
     * @return Whether the cs2 field is set.
     */
    @java.lang.Override
    public boolean hasCs2() {
      return messageCase_ == 2;
    }
    /**
     * <pre>
     * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 sport.
     * </pre>
     *
     * <code>.bragi.CS2MatchMessage cs2 = 2 [json_name = "cs2"];</code>
     * @return The cs2.
     */
    @java.lang.Override
    public com.bragi.CS2MatchMessage getCs2() {
      if (cs2Builder_ == null) {
        if (messageCase_ == 2) {
          return (com.bragi.CS2MatchMessage) message_;
        }
        return com.bragi.CS2MatchMessage.getDefaultInstance();
      } else {
        if (messageCase_ == 2) {
          return cs2Builder_.getMessage();
        }
        return com.bragi.CS2MatchMessage.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 sport.
     * </pre>
     *
     * <code>.bragi.CS2MatchMessage cs2 = 2 [json_name = "cs2"];</code>
     */
    public Builder setCs2(com.bragi.CS2MatchMessage value) {
      if (cs2Builder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        cs2Builder_.setMessage(value);
      }
      messageCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 sport.
     * </pre>
     *
     * <code>.bragi.CS2MatchMessage cs2 = 2 [json_name = "cs2"];</code>
     */
    public Builder setCs2(
        com.bragi.CS2MatchMessage.Builder builderForValue) {
      if (cs2Builder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        cs2Builder_.setMessage(builderForValue.build());
      }
      messageCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 sport.
     * </pre>
     *
     * <code>.bragi.CS2MatchMessage cs2 = 2 [json_name = "cs2"];</code>
     */
    public Builder mergeCs2(com.bragi.CS2MatchMessage value) {
      if (cs2Builder_ == null) {
        if (messageCase_ == 2 &&
            message_ != com.bragi.CS2MatchMessage.getDefaultInstance()) {
          message_ = com.bragi.CS2MatchMessage.newBuilder((com.bragi.CS2MatchMessage) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 2) {
          cs2Builder_.mergeFrom(value);
        } else {
          cs2Builder_.setMessage(value);
        }
      }
      messageCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 sport.
     * </pre>
     *
     * <code>.bragi.CS2MatchMessage cs2 = 2 [json_name = "cs2"];</code>
     */
    public Builder clearCs2() {
      if (cs2Builder_ == null) {
        if (messageCase_ == 2) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 2) {
          messageCase_ = 0;
          message_ = null;
        }
        cs2Builder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 sport.
     * </pre>
     *
     * <code>.bragi.CS2MatchMessage cs2 = 2 [json_name = "cs2"];</code>
     */
    public com.bragi.CS2MatchMessage.Builder getCs2Builder() {
      return getCs2FieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 sport.
     * </pre>
     *
     * <code>.bragi.CS2MatchMessage cs2 = 2 [json_name = "cs2"];</code>
     */
    @java.lang.Override
    public com.bragi.CS2MatchMessageOrBuilder getCs2OrBuilder() {
      if ((messageCase_ == 2) && (cs2Builder_ != null)) {
        return cs2Builder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 2) {
          return (com.bragi.CS2MatchMessage) message_;
        }
        return com.bragi.CS2MatchMessage.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 sport.
     * </pre>
     *
     * <code>.bragi.CS2MatchMessage cs2 = 2 [json_name = "cs2"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.CS2MatchMessage, com.bragi.CS2MatchMessage.Builder, com.bragi.CS2MatchMessageOrBuilder> 
        getCs2FieldBuilder() {
      if (cs2Builder_ == null) {
        if (!(messageCase_ == 2)) {
          message_ = com.bragi.CS2MatchMessage.getDefaultInstance();
        }
        cs2Builder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.CS2MatchMessage, com.bragi.CS2MatchMessage.Builder, com.bragi.CS2MatchMessageOrBuilder>(
                (com.bragi.CS2MatchMessage) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 2;
      onChanged();
      return cs2Builder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.CS2MatchMessage, com.bragi.CS2MatchMessage.Builder, com.bragi.CS2MatchMessageOrBuilder> cs2DuelsBuilder_;
    /**
     * <pre>
     * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 Duels sport.
     * </pre>
     *
     * <code>.bragi.CS2MatchMessage cs2_duels = 3 [json_name = "cs2Duels"];</code>
     * @return Whether the cs2Duels field is set.
     */
    @java.lang.Override
    public boolean hasCs2Duels() {
      return messageCase_ == 3;
    }
    /**
     * <pre>
     * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 Duels sport.
     * </pre>
     *
     * <code>.bragi.CS2MatchMessage cs2_duels = 3 [json_name = "cs2Duels"];</code>
     * @return The cs2Duels.
     */
    @java.lang.Override
    public com.bragi.CS2MatchMessage getCs2Duels() {
      if (cs2DuelsBuilder_ == null) {
        if (messageCase_ == 3) {
          return (com.bragi.CS2MatchMessage) message_;
        }
        return com.bragi.CS2MatchMessage.getDefaultInstance();
      } else {
        if (messageCase_ == 3) {
          return cs2DuelsBuilder_.getMessage();
        }
        return com.bragi.CS2MatchMessage.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 Duels sport.
     * </pre>
     *
     * <code>.bragi.CS2MatchMessage cs2_duels = 3 [json_name = "cs2Duels"];</code>
     */
    public Builder setCs2Duels(com.bragi.CS2MatchMessage value) {
      if (cs2DuelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        cs2DuelsBuilder_.setMessage(value);
      }
      messageCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 Duels sport.
     * </pre>
     *
     * <code>.bragi.CS2MatchMessage cs2_duels = 3 [json_name = "cs2Duels"];</code>
     */
    public Builder setCs2Duels(
        com.bragi.CS2MatchMessage.Builder builderForValue) {
      if (cs2DuelsBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        cs2DuelsBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 Duels sport.
     * </pre>
     *
     * <code>.bragi.CS2MatchMessage cs2_duels = 3 [json_name = "cs2Duels"];</code>
     */
    public Builder mergeCs2Duels(com.bragi.CS2MatchMessage value) {
      if (cs2DuelsBuilder_ == null) {
        if (messageCase_ == 3 &&
            message_ != com.bragi.CS2MatchMessage.getDefaultInstance()) {
          message_ = com.bragi.CS2MatchMessage.newBuilder((com.bragi.CS2MatchMessage) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 3) {
          cs2DuelsBuilder_.mergeFrom(value);
        } else {
          cs2DuelsBuilder_.setMessage(value);
        }
      }
      messageCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 Duels sport.
     * </pre>
     *
     * <code>.bragi.CS2MatchMessage cs2_duels = 3 [json_name = "cs2Duels"];</code>
     */
    public Builder clearCs2Duels() {
      if (cs2DuelsBuilder_ == null) {
        if (messageCase_ == 3) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 3) {
          messageCase_ = 0;
          message_ = null;
        }
        cs2DuelsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 Duels sport.
     * </pre>
     *
     * <code>.bragi.CS2MatchMessage cs2_duels = 3 [json_name = "cs2Duels"];</code>
     */
    public com.bragi.CS2MatchMessage.Builder getCs2DuelsBuilder() {
      return getCs2DuelsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 Duels sport.
     * </pre>
     *
     * <code>.bragi.CS2MatchMessage cs2_duels = 3 [json_name = "cs2Duels"];</code>
     */
    @java.lang.Override
    public com.bragi.CS2MatchMessageOrBuilder getCs2DuelsOrBuilder() {
      if ((messageCase_ == 3) && (cs2DuelsBuilder_ != null)) {
        return cs2DuelsBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 3) {
          return (com.bragi.CS2MatchMessage) message_;
        }
        return com.bragi.CS2MatchMessage.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Message which wraps CS2MatchSnapshot or CS2MatchUpdate message with given match_urn and sequence for CS2 Duels sport.
     * </pre>
     *
     * <code>.bragi.CS2MatchMessage cs2_duels = 3 [json_name = "cs2Duels"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.CS2MatchMessage, com.bragi.CS2MatchMessage.Builder, com.bragi.CS2MatchMessageOrBuilder> 
        getCs2DuelsFieldBuilder() {
      if (cs2DuelsBuilder_ == null) {
        if (!(messageCase_ == 3)) {
          message_ = com.bragi.CS2MatchMessage.getDefaultInstance();
        }
        cs2DuelsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.CS2MatchMessage, com.bragi.CS2MatchMessage.Builder, com.bragi.CS2MatchMessageOrBuilder>(
                (com.bragi.CS2MatchMessage) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 3;
      onChanged();
      return cs2DuelsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Dota2MatchMessage, com.bragi.Dota2MatchMessage.Builder, com.bragi.Dota2MatchMessageOrBuilder> dota2Builder_;
    /**
     * <pre>
     * Message which wraps Dota2MatchSnapshot or Dota2MatchUpdate message with given match_urn and sequence for Dota2 sport.
     * </pre>
     *
     * <code>.bragi.Dota2MatchMessage dota2 = 4 [json_name = "dota2"];</code>
     * @return Whether the dota2 field is set.
     */
    @java.lang.Override
    public boolean hasDota2() {
      return messageCase_ == 4;
    }
    /**
     * <pre>
     * Message which wraps Dota2MatchSnapshot or Dota2MatchUpdate message with given match_urn and sequence for Dota2 sport.
     * </pre>
     *
     * <code>.bragi.Dota2MatchMessage dota2 = 4 [json_name = "dota2"];</code>
     * @return The dota2.
     */
    @java.lang.Override
    public com.bragi.Dota2MatchMessage getDota2() {
      if (dota2Builder_ == null) {
        if (messageCase_ == 4) {
          return (com.bragi.Dota2MatchMessage) message_;
        }
        return com.bragi.Dota2MatchMessage.getDefaultInstance();
      } else {
        if (messageCase_ == 4) {
          return dota2Builder_.getMessage();
        }
        return com.bragi.Dota2MatchMessage.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Message which wraps Dota2MatchSnapshot or Dota2MatchUpdate message with given match_urn and sequence for Dota2 sport.
     * </pre>
     *
     * <code>.bragi.Dota2MatchMessage dota2 = 4 [json_name = "dota2"];</code>
     */
    public Builder setDota2(com.bragi.Dota2MatchMessage value) {
      if (dota2Builder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        dota2Builder_.setMessage(value);
      }
      messageCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Message which wraps Dota2MatchSnapshot or Dota2MatchUpdate message with given match_urn and sequence for Dota2 sport.
     * </pre>
     *
     * <code>.bragi.Dota2MatchMessage dota2 = 4 [json_name = "dota2"];</code>
     */
    public Builder setDota2(
        com.bragi.Dota2MatchMessage.Builder builderForValue) {
      if (dota2Builder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        dota2Builder_.setMessage(builderForValue.build());
      }
      messageCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Message which wraps Dota2MatchSnapshot or Dota2MatchUpdate message with given match_urn and sequence for Dota2 sport.
     * </pre>
     *
     * <code>.bragi.Dota2MatchMessage dota2 = 4 [json_name = "dota2"];</code>
     */
    public Builder mergeDota2(com.bragi.Dota2MatchMessage value) {
      if (dota2Builder_ == null) {
        if (messageCase_ == 4 &&
            message_ != com.bragi.Dota2MatchMessage.getDefaultInstance()) {
          message_ = com.bragi.Dota2MatchMessage.newBuilder((com.bragi.Dota2MatchMessage) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 4) {
          dota2Builder_.mergeFrom(value);
        } else {
          dota2Builder_.setMessage(value);
        }
      }
      messageCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Message which wraps Dota2MatchSnapshot or Dota2MatchUpdate message with given match_urn and sequence for Dota2 sport.
     * </pre>
     *
     * <code>.bragi.Dota2MatchMessage dota2 = 4 [json_name = "dota2"];</code>
     */
    public Builder clearDota2() {
      if (dota2Builder_ == null) {
        if (messageCase_ == 4) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 4) {
          messageCase_ = 0;
          message_ = null;
        }
        dota2Builder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Message which wraps Dota2MatchSnapshot or Dota2MatchUpdate message with given match_urn and sequence for Dota2 sport.
     * </pre>
     *
     * <code>.bragi.Dota2MatchMessage dota2 = 4 [json_name = "dota2"];</code>
     */
    public com.bragi.Dota2MatchMessage.Builder getDota2Builder() {
      return getDota2FieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Message which wraps Dota2MatchSnapshot or Dota2MatchUpdate message with given match_urn and sequence for Dota2 sport.
     * </pre>
     *
     * <code>.bragi.Dota2MatchMessage dota2 = 4 [json_name = "dota2"];</code>
     */
    @java.lang.Override
    public com.bragi.Dota2MatchMessageOrBuilder getDota2OrBuilder() {
      if ((messageCase_ == 4) && (dota2Builder_ != null)) {
        return dota2Builder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 4) {
          return (com.bragi.Dota2MatchMessage) message_;
        }
        return com.bragi.Dota2MatchMessage.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Message which wraps Dota2MatchSnapshot or Dota2MatchUpdate message with given match_urn and sequence for Dota2 sport.
     * </pre>
     *
     * <code>.bragi.Dota2MatchMessage dota2 = 4 [json_name = "dota2"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.Dota2MatchMessage, com.bragi.Dota2MatchMessage.Builder, com.bragi.Dota2MatchMessageOrBuilder> 
        getDota2FieldBuilder() {
      if (dota2Builder_ == null) {
        if (!(messageCase_ == 4)) {
          message_ = com.bragi.Dota2MatchMessage.getDefaultInstance();
        }
        dota2Builder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.Dota2MatchMessage, com.bragi.Dota2MatchMessage.Builder, com.bragi.Dota2MatchMessageOrBuilder>(
                (com.bragi.Dota2MatchMessage) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 4;
      onChanged();
      return dota2Builder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.RushSoccerMatchMessage, com.bragi.RushSoccerMatchMessage.Builder, com.bragi.RushSoccerMatchMessageOrBuilder> rushSoccerBuilder_;
    /**
     * <pre>
     * Message which wraps RushSoccerMatchSnapshot or RushSoccerMatchUpdate message with given match_urn and sequence for RushSoccer sport.
     * </pre>
     *
     * <code>.bragi.RushSoccerMatchMessage rush_soccer = 5 [json_name = "rushSoccer"];</code>
     * @return Whether the rushSoccer field is set.
     */
    @java.lang.Override
    public boolean hasRushSoccer() {
      return messageCase_ == 5;
    }
    /**
     * <pre>
     * Message which wraps RushSoccerMatchSnapshot or RushSoccerMatchUpdate message with given match_urn and sequence for RushSoccer sport.
     * </pre>
     *
     * <code>.bragi.RushSoccerMatchMessage rush_soccer = 5 [json_name = "rushSoccer"];</code>
     * @return The rushSoccer.
     */
    @java.lang.Override
    public com.bragi.RushSoccerMatchMessage getRushSoccer() {
      if (rushSoccerBuilder_ == null) {
        if (messageCase_ == 5) {
          return (com.bragi.RushSoccerMatchMessage) message_;
        }
        return com.bragi.RushSoccerMatchMessage.getDefaultInstance();
      } else {
        if (messageCase_ == 5) {
          return rushSoccerBuilder_.getMessage();
        }
        return com.bragi.RushSoccerMatchMessage.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Message which wraps RushSoccerMatchSnapshot or RushSoccerMatchUpdate message with given match_urn and sequence for RushSoccer sport.
     * </pre>
     *
     * <code>.bragi.RushSoccerMatchMessage rush_soccer = 5 [json_name = "rushSoccer"];</code>
     */
    public Builder setRushSoccer(com.bragi.RushSoccerMatchMessage value) {
      if (rushSoccerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        rushSoccerBuilder_.setMessage(value);
      }
      messageCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Message which wraps RushSoccerMatchSnapshot or RushSoccerMatchUpdate message with given match_urn and sequence for RushSoccer sport.
     * </pre>
     *
     * <code>.bragi.RushSoccerMatchMessage rush_soccer = 5 [json_name = "rushSoccer"];</code>
     */
    public Builder setRushSoccer(
        com.bragi.RushSoccerMatchMessage.Builder builderForValue) {
      if (rushSoccerBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        rushSoccerBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Message which wraps RushSoccerMatchSnapshot or RushSoccerMatchUpdate message with given match_urn and sequence for RushSoccer sport.
     * </pre>
     *
     * <code>.bragi.RushSoccerMatchMessage rush_soccer = 5 [json_name = "rushSoccer"];</code>
     */
    public Builder mergeRushSoccer(com.bragi.RushSoccerMatchMessage value) {
      if (rushSoccerBuilder_ == null) {
        if (messageCase_ == 5 &&
            message_ != com.bragi.RushSoccerMatchMessage.getDefaultInstance()) {
          message_ = com.bragi.RushSoccerMatchMessage.newBuilder((com.bragi.RushSoccerMatchMessage) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 5) {
          rushSoccerBuilder_.mergeFrom(value);
        } else {
          rushSoccerBuilder_.setMessage(value);
        }
      }
      messageCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Message which wraps RushSoccerMatchSnapshot or RushSoccerMatchUpdate message with given match_urn and sequence for RushSoccer sport.
     * </pre>
     *
     * <code>.bragi.RushSoccerMatchMessage rush_soccer = 5 [json_name = "rushSoccer"];</code>
     */
    public Builder clearRushSoccer() {
      if (rushSoccerBuilder_ == null) {
        if (messageCase_ == 5) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 5) {
          messageCase_ = 0;
          message_ = null;
        }
        rushSoccerBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Message which wraps RushSoccerMatchSnapshot or RushSoccerMatchUpdate message with given match_urn and sequence for RushSoccer sport.
     * </pre>
     *
     * <code>.bragi.RushSoccerMatchMessage rush_soccer = 5 [json_name = "rushSoccer"];</code>
     */
    public com.bragi.RushSoccerMatchMessage.Builder getRushSoccerBuilder() {
      return getRushSoccerFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Message which wraps RushSoccerMatchSnapshot or RushSoccerMatchUpdate message with given match_urn and sequence for RushSoccer sport.
     * </pre>
     *
     * <code>.bragi.RushSoccerMatchMessage rush_soccer = 5 [json_name = "rushSoccer"];</code>
     */
    @java.lang.Override
    public com.bragi.RushSoccerMatchMessageOrBuilder getRushSoccerOrBuilder() {
      if ((messageCase_ == 5) && (rushSoccerBuilder_ != null)) {
        return rushSoccerBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 5) {
          return (com.bragi.RushSoccerMatchMessage) message_;
        }
        return com.bragi.RushSoccerMatchMessage.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Message which wraps RushSoccerMatchSnapshot or RushSoccerMatchUpdate message with given match_urn and sequence for RushSoccer sport.
     * </pre>
     *
     * <code>.bragi.RushSoccerMatchMessage rush_soccer = 5 [json_name = "rushSoccer"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.RushSoccerMatchMessage, com.bragi.RushSoccerMatchMessage.Builder, com.bragi.RushSoccerMatchMessageOrBuilder> 
        getRushSoccerFieldBuilder() {
      if (rushSoccerBuilder_ == null) {
        if (!(messageCase_ == 5)) {
          message_ = com.bragi.RushSoccerMatchMessage.getDefaultInstance();
        }
        rushSoccerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.RushSoccerMatchMessage, com.bragi.RushSoccerMatchMessage.Builder, com.bragi.RushSoccerMatchMessageOrBuilder>(
                (com.bragi.RushSoccerMatchMessage) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 5;
      onChanged();
      return rushSoccerBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.LolMatchMessage, com.bragi.LolMatchMessage.Builder, com.bragi.LolMatchMessageOrBuilder> lolBuilder_;
    /**
     * <pre>
     * Message which wraps LolMatchSnapshot or LolMatchUpdate message with given match_urn and sequence for Lol sport.
     * </pre>
     *
     * <code>.bragi.LolMatchMessage lol = 6 [json_name = "lol"];</code>
     * @return Whether the lol field is set.
     */
    @java.lang.Override
    public boolean hasLol() {
      return messageCase_ == 6;
    }
    /**
     * <pre>
     * Message which wraps LolMatchSnapshot or LolMatchUpdate message with given match_urn and sequence for Lol sport.
     * </pre>
     *
     * <code>.bragi.LolMatchMessage lol = 6 [json_name = "lol"];</code>
     * @return The lol.
     */
    @java.lang.Override
    public com.bragi.LolMatchMessage getLol() {
      if (lolBuilder_ == null) {
        if (messageCase_ == 6) {
          return (com.bragi.LolMatchMessage) message_;
        }
        return com.bragi.LolMatchMessage.getDefaultInstance();
      } else {
        if (messageCase_ == 6) {
          return lolBuilder_.getMessage();
        }
        return com.bragi.LolMatchMessage.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Message which wraps LolMatchSnapshot or LolMatchUpdate message with given match_urn and sequence for Lol sport.
     * </pre>
     *
     * <code>.bragi.LolMatchMessage lol = 6 [json_name = "lol"];</code>
     */
    public Builder setLol(com.bragi.LolMatchMessage value) {
      if (lolBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        lolBuilder_.setMessage(value);
      }
      messageCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Message which wraps LolMatchSnapshot or LolMatchUpdate message with given match_urn and sequence for Lol sport.
     * </pre>
     *
     * <code>.bragi.LolMatchMessage lol = 6 [json_name = "lol"];</code>
     */
    public Builder setLol(
        com.bragi.LolMatchMessage.Builder builderForValue) {
      if (lolBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        lolBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Message which wraps LolMatchSnapshot or LolMatchUpdate message with given match_urn and sequence for Lol sport.
     * </pre>
     *
     * <code>.bragi.LolMatchMessage lol = 6 [json_name = "lol"];</code>
     */
    public Builder mergeLol(com.bragi.LolMatchMessage value) {
      if (lolBuilder_ == null) {
        if (messageCase_ == 6 &&
            message_ != com.bragi.LolMatchMessage.getDefaultInstance()) {
          message_ = com.bragi.LolMatchMessage.newBuilder((com.bragi.LolMatchMessage) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 6) {
          lolBuilder_.mergeFrom(value);
        } else {
          lolBuilder_.setMessage(value);
        }
      }
      messageCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Message which wraps LolMatchSnapshot or LolMatchUpdate message with given match_urn and sequence for Lol sport.
     * </pre>
     *
     * <code>.bragi.LolMatchMessage lol = 6 [json_name = "lol"];</code>
     */
    public Builder clearLol() {
      if (lolBuilder_ == null) {
        if (messageCase_ == 6) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 6) {
          messageCase_ = 0;
          message_ = null;
        }
        lolBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Message which wraps LolMatchSnapshot or LolMatchUpdate message with given match_urn and sequence for Lol sport.
     * </pre>
     *
     * <code>.bragi.LolMatchMessage lol = 6 [json_name = "lol"];</code>
     */
    public com.bragi.LolMatchMessage.Builder getLolBuilder() {
      return getLolFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Message which wraps LolMatchSnapshot or LolMatchUpdate message with given match_urn and sequence for Lol sport.
     * </pre>
     *
     * <code>.bragi.LolMatchMessage lol = 6 [json_name = "lol"];</code>
     */
    @java.lang.Override
    public com.bragi.LolMatchMessageOrBuilder getLolOrBuilder() {
      if ((messageCase_ == 6) && (lolBuilder_ != null)) {
        return lolBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 6) {
          return (com.bragi.LolMatchMessage) message_;
        }
        return com.bragi.LolMatchMessage.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Message which wraps LolMatchSnapshot or LolMatchUpdate message with given match_urn and sequence for Lol sport.
     * </pre>
     *
     * <code>.bragi.LolMatchMessage lol = 6 [json_name = "lol"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.LolMatchMessage, com.bragi.LolMatchMessage.Builder, com.bragi.LolMatchMessageOrBuilder> 
        getLolFieldBuilder() {
      if (lolBuilder_ == null) {
        if (!(messageCase_ == 6)) {
          message_ = com.bragi.LolMatchMessage.getDefaultInstance();
        }
        lolBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.LolMatchMessage, com.bragi.LolMatchMessage.Builder, com.bragi.LolMatchMessageOrBuilder>(
                (com.bragi.LolMatchMessage) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 6;
      onChanged();
      return lolBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.RushBasketballMatchMessage, com.bragi.RushBasketballMatchMessage.Builder, com.bragi.RushBasketballMatchMessageOrBuilder> rushBasketballBuilder_;
    /**
     * <pre>
     * Message which wraps RushBasketballMatchSnapshot or RushBasketballMatchUpdate message with given match_urn and sequence for RushBasketball sport.
     * </pre>
     *
     * <code>.bragi.RushBasketballMatchMessage rush_basketball = 7 [json_name = "rushBasketball"];</code>
     * @return Whether the rushBasketball field is set.
     */
    @java.lang.Override
    public boolean hasRushBasketball() {
      return messageCase_ == 7;
    }
    /**
     * <pre>
     * Message which wraps RushBasketballMatchSnapshot or RushBasketballMatchUpdate message with given match_urn and sequence for RushBasketball sport.
     * </pre>
     *
     * <code>.bragi.RushBasketballMatchMessage rush_basketball = 7 [json_name = "rushBasketball"];</code>
     * @return The rushBasketball.
     */
    @java.lang.Override
    public com.bragi.RushBasketballMatchMessage getRushBasketball() {
      if (rushBasketballBuilder_ == null) {
        if (messageCase_ == 7) {
          return (com.bragi.RushBasketballMatchMessage) message_;
        }
        return com.bragi.RushBasketballMatchMessage.getDefaultInstance();
      } else {
        if (messageCase_ == 7) {
          return rushBasketballBuilder_.getMessage();
        }
        return com.bragi.RushBasketballMatchMessage.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Message which wraps RushBasketballMatchSnapshot or RushBasketballMatchUpdate message with given match_urn and sequence for RushBasketball sport.
     * </pre>
     *
     * <code>.bragi.RushBasketballMatchMessage rush_basketball = 7 [json_name = "rushBasketball"];</code>
     */
    public Builder setRushBasketball(com.bragi.RushBasketballMatchMessage value) {
      if (rushBasketballBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        rushBasketballBuilder_.setMessage(value);
      }
      messageCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * Message which wraps RushBasketballMatchSnapshot or RushBasketballMatchUpdate message with given match_urn and sequence for RushBasketball sport.
     * </pre>
     *
     * <code>.bragi.RushBasketballMatchMessage rush_basketball = 7 [json_name = "rushBasketball"];</code>
     */
    public Builder setRushBasketball(
        com.bragi.RushBasketballMatchMessage.Builder builderForValue) {
      if (rushBasketballBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        rushBasketballBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * Message which wraps RushBasketballMatchSnapshot or RushBasketballMatchUpdate message with given match_urn and sequence for RushBasketball sport.
     * </pre>
     *
     * <code>.bragi.RushBasketballMatchMessage rush_basketball = 7 [json_name = "rushBasketball"];</code>
     */
    public Builder mergeRushBasketball(com.bragi.RushBasketballMatchMessage value) {
      if (rushBasketballBuilder_ == null) {
        if (messageCase_ == 7 &&
            message_ != com.bragi.RushBasketballMatchMessage.getDefaultInstance()) {
          message_ = com.bragi.RushBasketballMatchMessage.newBuilder((com.bragi.RushBasketballMatchMessage) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 7) {
          rushBasketballBuilder_.mergeFrom(value);
        } else {
          rushBasketballBuilder_.setMessage(value);
        }
      }
      messageCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * Message which wraps RushBasketballMatchSnapshot or RushBasketballMatchUpdate message with given match_urn and sequence for RushBasketball sport.
     * </pre>
     *
     * <code>.bragi.RushBasketballMatchMessage rush_basketball = 7 [json_name = "rushBasketball"];</code>
     */
    public Builder clearRushBasketball() {
      if (rushBasketballBuilder_ == null) {
        if (messageCase_ == 7) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 7) {
          messageCase_ = 0;
          message_ = null;
        }
        rushBasketballBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Message which wraps RushBasketballMatchSnapshot or RushBasketballMatchUpdate message with given match_urn and sequence for RushBasketball sport.
     * </pre>
     *
     * <code>.bragi.RushBasketballMatchMessage rush_basketball = 7 [json_name = "rushBasketball"];</code>
     */
    public com.bragi.RushBasketballMatchMessage.Builder getRushBasketballBuilder() {
      return getRushBasketballFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Message which wraps RushBasketballMatchSnapshot or RushBasketballMatchUpdate message with given match_urn and sequence for RushBasketball sport.
     * </pre>
     *
     * <code>.bragi.RushBasketballMatchMessage rush_basketball = 7 [json_name = "rushBasketball"];</code>
     */
    @java.lang.Override
    public com.bragi.RushBasketballMatchMessageOrBuilder getRushBasketballOrBuilder() {
      if ((messageCase_ == 7) && (rushBasketballBuilder_ != null)) {
        return rushBasketballBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 7) {
          return (com.bragi.RushBasketballMatchMessage) message_;
        }
        return com.bragi.RushBasketballMatchMessage.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Message which wraps RushBasketballMatchSnapshot or RushBasketballMatchUpdate message with given match_urn and sequence for RushBasketball sport.
     * </pre>
     *
     * <code>.bragi.RushBasketballMatchMessage rush_basketball = 7 [json_name = "rushBasketball"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.RushBasketballMatchMessage, com.bragi.RushBasketballMatchMessage.Builder, com.bragi.RushBasketballMatchMessageOrBuilder> 
        getRushBasketballFieldBuilder() {
      if (rushBasketballBuilder_ == null) {
        if (!(messageCase_ == 7)) {
          message_ = com.bragi.RushBasketballMatchMessage.getDefaultInstance();
        }
        rushBasketballBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.RushBasketballMatchMessage, com.bragi.RushBasketballMatchMessage.Builder, com.bragi.RushBasketballMatchMessageOrBuilder>(
                (com.bragi.RushBasketballMatchMessage) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 7;
      onChanged();
      return rushBasketballBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.ValorantMatchMessage, com.bragi.ValorantMatchMessage.Builder, com.bragi.ValorantMatchMessageOrBuilder> valorantBuilder_;
    /**
     * <pre>
     * Message which wraps ValorantMatchSnapshot or ValorantMatchUpdate message with given match_urn and sequence for Valorant sport.
     * </pre>
     *
     * <code>.bragi.ValorantMatchMessage valorant = 8 [json_name = "valorant"];</code>
     * @return Whether the valorant field is set.
     */
    @java.lang.Override
    public boolean hasValorant() {
      return messageCase_ == 8;
    }
    /**
     * <pre>
     * Message which wraps ValorantMatchSnapshot or ValorantMatchUpdate message with given match_urn and sequence for Valorant sport.
     * </pre>
     *
     * <code>.bragi.ValorantMatchMessage valorant = 8 [json_name = "valorant"];</code>
     * @return The valorant.
     */
    @java.lang.Override
    public com.bragi.ValorantMatchMessage getValorant() {
      if (valorantBuilder_ == null) {
        if (messageCase_ == 8) {
          return (com.bragi.ValorantMatchMessage) message_;
        }
        return com.bragi.ValorantMatchMessage.getDefaultInstance();
      } else {
        if (messageCase_ == 8) {
          return valorantBuilder_.getMessage();
        }
        return com.bragi.ValorantMatchMessage.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Message which wraps ValorantMatchSnapshot or ValorantMatchUpdate message with given match_urn and sequence for Valorant sport.
     * </pre>
     *
     * <code>.bragi.ValorantMatchMessage valorant = 8 [json_name = "valorant"];</code>
     */
    public Builder setValorant(com.bragi.ValorantMatchMessage value) {
      if (valorantBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        onChanged();
      } else {
        valorantBuilder_.setMessage(value);
      }
      messageCase_ = 8;
      return this;
    }
    /**
     * <pre>
     * Message which wraps ValorantMatchSnapshot or ValorantMatchUpdate message with given match_urn and sequence for Valorant sport.
     * </pre>
     *
     * <code>.bragi.ValorantMatchMessage valorant = 8 [json_name = "valorant"];</code>
     */
    public Builder setValorant(
        com.bragi.ValorantMatchMessage.Builder builderForValue) {
      if (valorantBuilder_ == null) {
        message_ = builderForValue.build();
        onChanged();
      } else {
        valorantBuilder_.setMessage(builderForValue.build());
      }
      messageCase_ = 8;
      return this;
    }
    /**
     * <pre>
     * Message which wraps ValorantMatchSnapshot or ValorantMatchUpdate message with given match_urn and sequence for Valorant sport.
     * </pre>
     *
     * <code>.bragi.ValorantMatchMessage valorant = 8 [json_name = "valorant"];</code>
     */
    public Builder mergeValorant(com.bragi.ValorantMatchMessage value) {
      if (valorantBuilder_ == null) {
        if (messageCase_ == 8 &&
            message_ != com.bragi.ValorantMatchMessage.getDefaultInstance()) {
          message_ = com.bragi.ValorantMatchMessage.newBuilder((com.bragi.ValorantMatchMessage) message_)
              .mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        onChanged();
      } else {
        if (messageCase_ == 8) {
          valorantBuilder_.mergeFrom(value);
        } else {
          valorantBuilder_.setMessage(value);
        }
      }
      messageCase_ = 8;
      return this;
    }
    /**
     * <pre>
     * Message which wraps ValorantMatchSnapshot or ValorantMatchUpdate message with given match_urn and sequence for Valorant sport.
     * </pre>
     *
     * <code>.bragi.ValorantMatchMessage valorant = 8 [json_name = "valorant"];</code>
     */
    public Builder clearValorant() {
      if (valorantBuilder_ == null) {
        if (messageCase_ == 8) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
      } else {
        if (messageCase_ == 8) {
          messageCase_ = 0;
          message_ = null;
        }
        valorantBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Message which wraps ValorantMatchSnapshot or ValorantMatchUpdate message with given match_urn and sequence for Valorant sport.
     * </pre>
     *
     * <code>.bragi.ValorantMatchMessage valorant = 8 [json_name = "valorant"];</code>
     */
    public com.bragi.ValorantMatchMessage.Builder getValorantBuilder() {
      return getValorantFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Message which wraps ValorantMatchSnapshot or ValorantMatchUpdate message with given match_urn and sequence for Valorant sport.
     * </pre>
     *
     * <code>.bragi.ValorantMatchMessage valorant = 8 [json_name = "valorant"];</code>
     */
    @java.lang.Override
    public com.bragi.ValorantMatchMessageOrBuilder getValorantOrBuilder() {
      if ((messageCase_ == 8) && (valorantBuilder_ != null)) {
        return valorantBuilder_.getMessageOrBuilder();
      } else {
        if (messageCase_ == 8) {
          return (com.bragi.ValorantMatchMessage) message_;
        }
        return com.bragi.ValorantMatchMessage.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Message which wraps ValorantMatchSnapshot or ValorantMatchUpdate message with given match_urn and sequence for Valorant sport.
     * </pre>
     *
     * <code>.bragi.ValorantMatchMessage valorant = 8 [json_name = "valorant"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.ValorantMatchMessage, com.bragi.ValorantMatchMessage.Builder, com.bragi.ValorantMatchMessageOrBuilder> 
        getValorantFieldBuilder() {
      if (valorantBuilder_ == null) {
        if (!(messageCase_ == 8)) {
          message_ = com.bragi.ValorantMatchMessage.getDefaultInstance();
        }
        valorantBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.ValorantMatchMessage, com.bragi.ValorantMatchMessage.Builder, com.bragi.ValorantMatchMessageOrBuilder>(
                (com.bragi.ValorantMatchMessage) message_,
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      messageCase_ = 8;
      onChanged();
      return valorantBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:bragi.MatchMessage)
  }

  // @@protoc_insertion_point(class_scope:bragi.MatchMessage)
  private static final com.bragi.MatchMessage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.bragi.MatchMessage();
  }

  public static com.bragi.MatchMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MatchMessage>
      PARSER = new com.google.protobuf.AbstractParser<MatchMessage>() {
    @java.lang.Override
    public MatchMessage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MatchMessage> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MatchMessage> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.bragi.MatchMessage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

