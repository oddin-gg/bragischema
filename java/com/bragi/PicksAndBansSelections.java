// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bragi/dota2.proto
// Protobuf Java Version: 4.29.3

package com.bragi;

/**
 * Protobuf type {@code bragi.PicksAndBansSelections}
 */
public final class PicksAndBansSelections extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:bragi.PicksAndBansSelections)
    PicksAndBansSelectionsOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      PicksAndBansSelections.class.getName());
  }
  // Use PicksAndBansSelections.newBuilder() to construct.
  private PicksAndBansSelections(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private PicksAndBansSelections() {
    picksAndBans_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.bragi.Dota2Proto.internal_static_bragi_PicksAndBansSelections_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.bragi.Dota2Proto.internal_static_bragi_PicksAndBansSelections_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.bragi.PicksAndBansSelections.class, com.bragi.PicksAndBansSelections.Builder.class);
  }

  /**
   * Protobuf enum {@code bragi.PicksAndBansSelections.TeamType}
   */
  public enum TeamType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TEAM_TYPE_UNSPECIFIED = 0;</code>
     */
    TEAM_TYPE_UNSPECIFIED(0),
    /**
     * <code>TEAM_TYPE_RADIANT = 1;</code>
     */
    TEAM_TYPE_RADIANT(1),
    /**
     * <code>TEAM_TYPE_DIRE = 2;</code>
     */
    TEAM_TYPE_DIRE(2),
    UNRECOGNIZED(-1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        TeamType.class.getName());
    }
    /**
     * <code>TEAM_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int TEAM_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <code>TEAM_TYPE_RADIANT = 1;</code>
     */
    public static final int TEAM_TYPE_RADIANT_VALUE = 1;
    /**
     * <code>TEAM_TYPE_DIRE = 2;</code>
     */
    public static final int TEAM_TYPE_DIRE_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TeamType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TeamType forNumber(int value) {
      switch (value) {
        case 0: return TEAM_TYPE_UNSPECIFIED;
        case 1: return TEAM_TYPE_RADIANT;
        case 2: return TEAM_TYPE_DIRE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TeamType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TeamType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TeamType>() {
            public TeamType findValueByNumber(int number) {
              return TeamType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.bragi.PicksAndBansSelections.getDescriptor().getEnumTypes().get(0);
    }

    private static final TeamType[] VALUES = values();

    public static TeamType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TeamType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:bragi.PicksAndBansSelections.TeamType)
  }

  public interface CurrentHeroSelectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bragi.PicksAndBansSelections.CurrentHeroSelection)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.bragi.PicksAndBansSelections.TeamType active_team = 1 [json_name = "activeTeam"];</code>
     * @return The enum numeric value on the wire for activeTeam.
     */
    int getActiveTeamValue();
    /**
     * <code>.bragi.PicksAndBansSelections.TeamType active_team = 1 [json_name = "activeTeam"];</code>
     * @return The activeTeam.
     */
    com.bragi.PicksAndBansSelections.TeamType getActiveTeam();

    /**
     * <code>bool pick = 2 [json_name = "pick"];</code>
     * @return The pick.
     */
    boolean getPick();

    /**
     * <code>int32 active_team_time_remaining = 3 [json_name = "activeTeamTimeRemaining"];</code>
     * @return The activeTeamTimeRemaining.
     */
    int getActiveTeamTimeRemaining();

    /**
     * <code>int32 radiant_bonus_time = 4 [json_name = "radiantBonusTime"];</code>
     * @return The radiantBonusTime.
     */
    int getRadiantBonusTime();

    /**
     * <code>int32 dire_bonus_time = 5 [json_name = "direBonusTime"];</code>
     * @return The direBonusTime.
     */
    int getDireBonusTime();
  }
  /**
   * Protobuf type {@code bragi.PicksAndBansSelections.CurrentHeroSelection}
   */
  public static final class CurrentHeroSelection extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:bragi.PicksAndBansSelections.CurrentHeroSelection)
      CurrentHeroSelectionOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        CurrentHeroSelection.class.getName());
    }
    // Use CurrentHeroSelection.newBuilder() to construct.
    private CurrentHeroSelection(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CurrentHeroSelection() {
      activeTeam_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bragi.Dota2Proto.internal_static_bragi_PicksAndBansSelections_CurrentHeroSelection_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bragi.Dota2Proto.internal_static_bragi_PicksAndBansSelections_CurrentHeroSelection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bragi.PicksAndBansSelections.CurrentHeroSelection.class, com.bragi.PicksAndBansSelections.CurrentHeroSelection.Builder.class);
    }

    public static final int ACTIVE_TEAM_FIELD_NUMBER = 1;
    private int activeTeam_ = 0;
    /**
     * <code>.bragi.PicksAndBansSelections.TeamType active_team = 1 [json_name = "activeTeam"];</code>
     * @return The enum numeric value on the wire for activeTeam.
     */
    @java.lang.Override public int getActiveTeamValue() {
      return activeTeam_;
    }
    /**
     * <code>.bragi.PicksAndBansSelections.TeamType active_team = 1 [json_name = "activeTeam"];</code>
     * @return The activeTeam.
     */
    @java.lang.Override public com.bragi.PicksAndBansSelections.TeamType getActiveTeam() {
      com.bragi.PicksAndBansSelections.TeamType result = com.bragi.PicksAndBansSelections.TeamType.forNumber(activeTeam_);
      return result == null ? com.bragi.PicksAndBansSelections.TeamType.UNRECOGNIZED : result;
    }

    public static final int PICK_FIELD_NUMBER = 2;
    private boolean pick_ = false;
    /**
     * <code>bool pick = 2 [json_name = "pick"];</code>
     * @return The pick.
     */
    @java.lang.Override
    public boolean getPick() {
      return pick_;
    }

    public static final int ACTIVE_TEAM_TIME_REMAINING_FIELD_NUMBER = 3;
    private int activeTeamTimeRemaining_ = 0;
    /**
     * <code>int32 active_team_time_remaining = 3 [json_name = "activeTeamTimeRemaining"];</code>
     * @return The activeTeamTimeRemaining.
     */
    @java.lang.Override
    public int getActiveTeamTimeRemaining() {
      return activeTeamTimeRemaining_;
    }

    public static final int RADIANT_BONUS_TIME_FIELD_NUMBER = 4;
    private int radiantBonusTime_ = 0;
    /**
     * <code>int32 radiant_bonus_time = 4 [json_name = "radiantBonusTime"];</code>
     * @return The radiantBonusTime.
     */
    @java.lang.Override
    public int getRadiantBonusTime() {
      return radiantBonusTime_;
    }

    public static final int DIRE_BONUS_TIME_FIELD_NUMBER = 5;
    private int direBonusTime_ = 0;
    /**
     * <code>int32 dire_bonus_time = 5 [json_name = "direBonusTime"];</code>
     * @return The direBonusTime.
     */
    @java.lang.Override
    public int getDireBonusTime() {
      return direBonusTime_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (activeTeam_ != com.bragi.PicksAndBansSelections.TeamType.TEAM_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, activeTeam_);
      }
      if (pick_ != false) {
        output.writeBool(2, pick_);
      }
      if (activeTeamTimeRemaining_ != 0) {
        output.writeInt32(3, activeTeamTimeRemaining_);
      }
      if (radiantBonusTime_ != 0) {
        output.writeInt32(4, radiantBonusTime_);
      }
      if (direBonusTime_ != 0) {
        output.writeInt32(5, direBonusTime_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (activeTeam_ != com.bragi.PicksAndBansSelections.TeamType.TEAM_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, activeTeam_);
      }
      if (pick_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, pick_);
      }
      if (activeTeamTimeRemaining_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, activeTeamTimeRemaining_);
      }
      if (radiantBonusTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, radiantBonusTime_);
      }
      if (direBonusTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, direBonusTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bragi.PicksAndBansSelections.CurrentHeroSelection)) {
        return super.equals(obj);
      }
      com.bragi.PicksAndBansSelections.CurrentHeroSelection other = (com.bragi.PicksAndBansSelections.CurrentHeroSelection) obj;

      if (activeTeam_ != other.activeTeam_) return false;
      if (getPick()
          != other.getPick()) return false;
      if (getActiveTeamTimeRemaining()
          != other.getActiveTeamTimeRemaining()) return false;
      if (getRadiantBonusTime()
          != other.getRadiantBonusTime()) return false;
      if (getDireBonusTime()
          != other.getDireBonusTime()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ACTIVE_TEAM_FIELD_NUMBER;
      hash = (53 * hash) + activeTeam_;
      hash = (37 * hash) + PICK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPick());
      hash = (37 * hash) + ACTIVE_TEAM_TIME_REMAINING_FIELD_NUMBER;
      hash = (53 * hash) + getActiveTeamTimeRemaining();
      hash = (37 * hash) + RADIANT_BONUS_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getRadiantBonusTime();
      hash = (37 * hash) + DIRE_BONUS_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getDireBonusTime();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bragi.PicksAndBansSelections.CurrentHeroSelection parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bragi.PicksAndBansSelections.CurrentHeroSelection parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bragi.PicksAndBansSelections.CurrentHeroSelection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bragi.PicksAndBansSelections.CurrentHeroSelection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bragi.PicksAndBansSelections.CurrentHeroSelection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bragi.PicksAndBansSelections.CurrentHeroSelection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bragi.PicksAndBansSelections.CurrentHeroSelection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.bragi.PicksAndBansSelections.CurrentHeroSelection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.bragi.PicksAndBansSelections.CurrentHeroSelection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.bragi.PicksAndBansSelections.CurrentHeroSelection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bragi.PicksAndBansSelections.CurrentHeroSelection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.bragi.PicksAndBansSelections.CurrentHeroSelection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bragi.PicksAndBansSelections.CurrentHeroSelection prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code bragi.PicksAndBansSelections.CurrentHeroSelection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bragi.PicksAndBansSelections.CurrentHeroSelection)
        com.bragi.PicksAndBansSelections.CurrentHeroSelectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bragi.Dota2Proto.internal_static_bragi_PicksAndBansSelections_CurrentHeroSelection_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bragi.Dota2Proto.internal_static_bragi_PicksAndBansSelections_CurrentHeroSelection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bragi.PicksAndBansSelections.CurrentHeroSelection.class, com.bragi.PicksAndBansSelections.CurrentHeroSelection.Builder.class);
      }

      // Construct using com.bragi.PicksAndBansSelections.CurrentHeroSelection.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        activeTeam_ = 0;
        pick_ = false;
        activeTeamTimeRemaining_ = 0;
        radiantBonusTime_ = 0;
        direBonusTime_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bragi.Dota2Proto.internal_static_bragi_PicksAndBansSelections_CurrentHeroSelection_descriptor;
      }

      @java.lang.Override
      public com.bragi.PicksAndBansSelections.CurrentHeroSelection getDefaultInstanceForType() {
        return com.bragi.PicksAndBansSelections.CurrentHeroSelection.getDefaultInstance();
      }

      @java.lang.Override
      public com.bragi.PicksAndBansSelections.CurrentHeroSelection build() {
        com.bragi.PicksAndBansSelections.CurrentHeroSelection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.bragi.PicksAndBansSelections.CurrentHeroSelection buildPartial() {
        com.bragi.PicksAndBansSelections.CurrentHeroSelection result = new com.bragi.PicksAndBansSelections.CurrentHeroSelection(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.bragi.PicksAndBansSelections.CurrentHeroSelection result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.activeTeam_ = activeTeam_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.pick_ = pick_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.activeTeamTimeRemaining_ = activeTeamTimeRemaining_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.radiantBonusTime_ = radiantBonusTime_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.direBonusTime_ = direBonusTime_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bragi.PicksAndBansSelections.CurrentHeroSelection) {
          return mergeFrom((com.bragi.PicksAndBansSelections.CurrentHeroSelection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bragi.PicksAndBansSelections.CurrentHeroSelection other) {
        if (other == com.bragi.PicksAndBansSelections.CurrentHeroSelection.getDefaultInstance()) return this;
        if (other.activeTeam_ != 0) {
          setActiveTeamValue(other.getActiveTeamValue());
        }
        if (other.getPick() != false) {
          setPick(other.getPick());
        }
        if (other.getActiveTeamTimeRemaining() != 0) {
          setActiveTeamTimeRemaining(other.getActiveTeamTimeRemaining());
        }
        if (other.getRadiantBonusTime() != 0) {
          setRadiantBonusTime(other.getRadiantBonusTime());
        }
        if (other.getDireBonusTime() != 0) {
          setDireBonusTime(other.getDireBonusTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                activeTeam_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                pick_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                activeTeamTimeRemaining_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                radiantBonusTime_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                direBonusTime_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int activeTeam_ = 0;
      /**
       * <code>.bragi.PicksAndBansSelections.TeamType active_team = 1 [json_name = "activeTeam"];</code>
       * @return The enum numeric value on the wire for activeTeam.
       */
      @java.lang.Override public int getActiveTeamValue() {
        return activeTeam_;
      }
      /**
       * <code>.bragi.PicksAndBansSelections.TeamType active_team = 1 [json_name = "activeTeam"];</code>
       * @param value The enum numeric value on the wire for activeTeam to set.
       * @return This builder for chaining.
       */
      public Builder setActiveTeamValue(int value) {
        activeTeam_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.bragi.PicksAndBansSelections.TeamType active_team = 1 [json_name = "activeTeam"];</code>
       * @return The activeTeam.
       */
      @java.lang.Override
      public com.bragi.PicksAndBansSelections.TeamType getActiveTeam() {
        com.bragi.PicksAndBansSelections.TeamType result = com.bragi.PicksAndBansSelections.TeamType.forNumber(activeTeam_);
        return result == null ? com.bragi.PicksAndBansSelections.TeamType.UNRECOGNIZED : result;
      }
      /**
       * <code>.bragi.PicksAndBansSelections.TeamType active_team = 1 [json_name = "activeTeam"];</code>
       * @param value The activeTeam to set.
       * @return This builder for chaining.
       */
      public Builder setActiveTeam(com.bragi.PicksAndBansSelections.TeamType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        activeTeam_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.bragi.PicksAndBansSelections.TeamType active_team = 1 [json_name = "activeTeam"];</code>
       * @return This builder for chaining.
       */
      public Builder clearActiveTeam() {
        bitField0_ = (bitField0_ & ~0x00000001);
        activeTeam_ = 0;
        onChanged();
        return this;
      }

      private boolean pick_ ;
      /**
       * <code>bool pick = 2 [json_name = "pick"];</code>
       * @return The pick.
       */
      @java.lang.Override
      public boolean getPick() {
        return pick_;
      }
      /**
       * <code>bool pick = 2 [json_name = "pick"];</code>
       * @param value The pick to set.
       * @return This builder for chaining.
       */
      public Builder setPick(boolean value) {

        pick_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>bool pick = 2 [json_name = "pick"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPick() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pick_ = false;
        onChanged();
        return this;
      }

      private int activeTeamTimeRemaining_ ;
      /**
       * <code>int32 active_team_time_remaining = 3 [json_name = "activeTeamTimeRemaining"];</code>
       * @return The activeTeamTimeRemaining.
       */
      @java.lang.Override
      public int getActiveTeamTimeRemaining() {
        return activeTeamTimeRemaining_;
      }
      /**
       * <code>int32 active_team_time_remaining = 3 [json_name = "activeTeamTimeRemaining"];</code>
       * @param value The activeTeamTimeRemaining to set.
       * @return This builder for chaining.
       */
      public Builder setActiveTeamTimeRemaining(int value) {

        activeTeamTimeRemaining_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int32 active_team_time_remaining = 3 [json_name = "activeTeamTimeRemaining"];</code>
       * @return This builder for chaining.
       */
      public Builder clearActiveTeamTimeRemaining() {
        bitField0_ = (bitField0_ & ~0x00000004);
        activeTeamTimeRemaining_ = 0;
        onChanged();
        return this;
      }

      private int radiantBonusTime_ ;
      /**
       * <code>int32 radiant_bonus_time = 4 [json_name = "radiantBonusTime"];</code>
       * @return The radiantBonusTime.
       */
      @java.lang.Override
      public int getRadiantBonusTime() {
        return radiantBonusTime_;
      }
      /**
       * <code>int32 radiant_bonus_time = 4 [json_name = "radiantBonusTime"];</code>
       * @param value The radiantBonusTime to set.
       * @return This builder for chaining.
       */
      public Builder setRadiantBonusTime(int value) {

        radiantBonusTime_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int32 radiant_bonus_time = 4 [json_name = "radiantBonusTime"];</code>
       * @return This builder for chaining.
       */
      public Builder clearRadiantBonusTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        radiantBonusTime_ = 0;
        onChanged();
        return this;
      }

      private int direBonusTime_ ;
      /**
       * <code>int32 dire_bonus_time = 5 [json_name = "direBonusTime"];</code>
       * @return The direBonusTime.
       */
      @java.lang.Override
      public int getDireBonusTime() {
        return direBonusTime_;
      }
      /**
       * <code>int32 dire_bonus_time = 5 [json_name = "direBonusTime"];</code>
       * @param value The direBonusTime to set.
       * @return This builder for chaining.
       */
      public Builder setDireBonusTime(int value) {

        direBonusTime_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>int32 dire_bonus_time = 5 [json_name = "direBonusTime"];</code>
       * @return This builder for chaining.
       */
      public Builder clearDireBonusTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        direBonusTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:bragi.PicksAndBansSelections.CurrentHeroSelection)
    }

    // @@protoc_insertion_point(class_scope:bragi.PicksAndBansSelections.CurrentHeroSelection)
    private static final com.bragi.PicksAndBansSelections.CurrentHeroSelection DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bragi.PicksAndBansSelections.CurrentHeroSelection();
    }

    public static com.bragi.PicksAndBansSelections.CurrentHeroSelection getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CurrentHeroSelection>
        PARSER = new com.google.protobuf.AbstractParser<CurrentHeroSelection>() {
      @java.lang.Override
      public CurrentHeroSelection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CurrentHeroSelection> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CurrentHeroSelection> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.bragi.PicksAndBansSelections.CurrentHeroSelection getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PickOrBanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bragi.PicksAndBansSelections.PickOrBan)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.bragi.PicksAndBansSelections.TeamType team = 1 [json_name = "team"];</code>
     * @return The enum numeric value on the wire for team.
     */
    int getTeamValue();
    /**
     * <code>.bragi.PicksAndBansSelections.TeamType team = 1 [json_name = "team"];</code>
     * @return The team.
     */
    com.bragi.PicksAndBansSelections.TeamType getTeam();

    /**
     * <code>bool pick = 2 [json_name = "pick"];</code>
     * @return The pick.
     */
    boolean getPick();

    /**
     * <code>uint32 hero_steam_id = 3 [json_name = "heroSteamId"];</code>
     * @return The heroSteamId.
     */
    int getHeroSteamId();

    /**
     * <code>string hero_key = 4 [json_name = "heroKey"];</code>
     * @return The heroKey.
     */
    java.lang.String getHeroKey();
    /**
     * <code>string hero_key = 4 [json_name = "heroKey"];</code>
     * @return The bytes for heroKey.
     */
    com.google.protobuf.ByteString
        getHeroKeyBytes();
  }
  /**
   * Protobuf type {@code bragi.PicksAndBansSelections.PickOrBan}
   */
  public static final class PickOrBan extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:bragi.PicksAndBansSelections.PickOrBan)
      PickOrBanOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        PickOrBan.class.getName());
    }
    // Use PickOrBan.newBuilder() to construct.
    private PickOrBan(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PickOrBan() {
      team_ = 0;
      heroKey_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bragi.Dota2Proto.internal_static_bragi_PicksAndBansSelections_PickOrBan_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bragi.Dota2Proto.internal_static_bragi_PicksAndBansSelections_PickOrBan_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bragi.PicksAndBansSelections.PickOrBan.class, com.bragi.PicksAndBansSelections.PickOrBan.Builder.class);
    }

    public static final int TEAM_FIELD_NUMBER = 1;
    private int team_ = 0;
    /**
     * <code>.bragi.PicksAndBansSelections.TeamType team = 1 [json_name = "team"];</code>
     * @return The enum numeric value on the wire for team.
     */
    @java.lang.Override public int getTeamValue() {
      return team_;
    }
    /**
     * <code>.bragi.PicksAndBansSelections.TeamType team = 1 [json_name = "team"];</code>
     * @return The team.
     */
    @java.lang.Override public com.bragi.PicksAndBansSelections.TeamType getTeam() {
      com.bragi.PicksAndBansSelections.TeamType result = com.bragi.PicksAndBansSelections.TeamType.forNumber(team_);
      return result == null ? com.bragi.PicksAndBansSelections.TeamType.UNRECOGNIZED : result;
    }

    public static final int PICK_FIELD_NUMBER = 2;
    private boolean pick_ = false;
    /**
     * <code>bool pick = 2 [json_name = "pick"];</code>
     * @return The pick.
     */
    @java.lang.Override
    public boolean getPick() {
      return pick_;
    }

    public static final int HERO_STEAM_ID_FIELD_NUMBER = 3;
    private int heroSteamId_ = 0;
    /**
     * <code>uint32 hero_steam_id = 3 [json_name = "heroSteamId"];</code>
     * @return The heroSteamId.
     */
    @java.lang.Override
    public int getHeroSteamId() {
      return heroSteamId_;
    }

    public static final int HERO_KEY_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object heroKey_ = "";
    /**
     * <code>string hero_key = 4 [json_name = "heroKey"];</code>
     * @return The heroKey.
     */
    @java.lang.Override
    public java.lang.String getHeroKey() {
      java.lang.Object ref = heroKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        heroKey_ = s;
        return s;
      }
    }
    /**
     * <code>string hero_key = 4 [json_name = "heroKey"];</code>
     * @return The bytes for heroKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getHeroKeyBytes() {
      java.lang.Object ref = heroKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        heroKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (team_ != com.bragi.PicksAndBansSelections.TeamType.TEAM_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, team_);
      }
      if (pick_ != false) {
        output.writeBool(2, pick_);
      }
      if (heroSteamId_ != 0) {
        output.writeUInt32(3, heroSteamId_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(heroKey_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, heroKey_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (team_ != com.bragi.PicksAndBansSelections.TeamType.TEAM_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, team_);
      }
      if (pick_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, pick_);
      }
      if (heroSteamId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, heroSteamId_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(heroKey_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, heroKey_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bragi.PicksAndBansSelections.PickOrBan)) {
        return super.equals(obj);
      }
      com.bragi.PicksAndBansSelections.PickOrBan other = (com.bragi.PicksAndBansSelections.PickOrBan) obj;

      if (team_ != other.team_) return false;
      if (getPick()
          != other.getPick()) return false;
      if (getHeroSteamId()
          != other.getHeroSteamId()) return false;
      if (!getHeroKey()
          .equals(other.getHeroKey())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TEAM_FIELD_NUMBER;
      hash = (53 * hash) + team_;
      hash = (37 * hash) + PICK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPick());
      hash = (37 * hash) + HERO_STEAM_ID_FIELD_NUMBER;
      hash = (53 * hash) + getHeroSteamId();
      hash = (37 * hash) + HERO_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getHeroKey().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bragi.PicksAndBansSelections.PickOrBan parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bragi.PicksAndBansSelections.PickOrBan parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bragi.PicksAndBansSelections.PickOrBan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bragi.PicksAndBansSelections.PickOrBan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bragi.PicksAndBansSelections.PickOrBan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bragi.PicksAndBansSelections.PickOrBan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bragi.PicksAndBansSelections.PickOrBan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.bragi.PicksAndBansSelections.PickOrBan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.bragi.PicksAndBansSelections.PickOrBan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.bragi.PicksAndBansSelections.PickOrBan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bragi.PicksAndBansSelections.PickOrBan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.bragi.PicksAndBansSelections.PickOrBan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bragi.PicksAndBansSelections.PickOrBan prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code bragi.PicksAndBansSelections.PickOrBan}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bragi.PicksAndBansSelections.PickOrBan)
        com.bragi.PicksAndBansSelections.PickOrBanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bragi.Dota2Proto.internal_static_bragi_PicksAndBansSelections_PickOrBan_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bragi.Dota2Proto.internal_static_bragi_PicksAndBansSelections_PickOrBan_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bragi.PicksAndBansSelections.PickOrBan.class, com.bragi.PicksAndBansSelections.PickOrBan.Builder.class);
      }

      // Construct using com.bragi.PicksAndBansSelections.PickOrBan.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        team_ = 0;
        pick_ = false;
        heroSteamId_ = 0;
        heroKey_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bragi.Dota2Proto.internal_static_bragi_PicksAndBansSelections_PickOrBan_descriptor;
      }

      @java.lang.Override
      public com.bragi.PicksAndBansSelections.PickOrBan getDefaultInstanceForType() {
        return com.bragi.PicksAndBansSelections.PickOrBan.getDefaultInstance();
      }

      @java.lang.Override
      public com.bragi.PicksAndBansSelections.PickOrBan build() {
        com.bragi.PicksAndBansSelections.PickOrBan result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.bragi.PicksAndBansSelections.PickOrBan buildPartial() {
        com.bragi.PicksAndBansSelections.PickOrBan result = new com.bragi.PicksAndBansSelections.PickOrBan(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.bragi.PicksAndBansSelections.PickOrBan result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.team_ = team_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.pick_ = pick_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.heroSteamId_ = heroSteamId_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.heroKey_ = heroKey_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bragi.PicksAndBansSelections.PickOrBan) {
          return mergeFrom((com.bragi.PicksAndBansSelections.PickOrBan)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bragi.PicksAndBansSelections.PickOrBan other) {
        if (other == com.bragi.PicksAndBansSelections.PickOrBan.getDefaultInstance()) return this;
        if (other.team_ != 0) {
          setTeamValue(other.getTeamValue());
        }
        if (other.getPick() != false) {
          setPick(other.getPick());
        }
        if (other.getHeroSteamId() != 0) {
          setHeroSteamId(other.getHeroSteamId());
        }
        if (!other.getHeroKey().isEmpty()) {
          heroKey_ = other.heroKey_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                team_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                pick_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                heroSteamId_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 34: {
                heroKey_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int team_ = 0;
      /**
       * <code>.bragi.PicksAndBansSelections.TeamType team = 1 [json_name = "team"];</code>
       * @return The enum numeric value on the wire for team.
       */
      @java.lang.Override public int getTeamValue() {
        return team_;
      }
      /**
       * <code>.bragi.PicksAndBansSelections.TeamType team = 1 [json_name = "team"];</code>
       * @param value The enum numeric value on the wire for team to set.
       * @return This builder for chaining.
       */
      public Builder setTeamValue(int value) {
        team_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.bragi.PicksAndBansSelections.TeamType team = 1 [json_name = "team"];</code>
       * @return The team.
       */
      @java.lang.Override
      public com.bragi.PicksAndBansSelections.TeamType getTeam() {
        com.bragi.PicksAndBansSelections.TeamType result = com.bragi.PicksAndBansSelections.TeamType.forNumber(team_);
        return result == null ? com.bragi.PicksAndBansSelections.TeamType.UNRECOGNIZED : result;
      }
      /**
       * <code>.bragi.PicksAndBansSelections.TeamType team = 1 [json_name = "team"];</code>
       * @param value The team to set.
       * @return This builder for chaining.
       */
      public Builder setTeam(com.bragi.PicksAndBansSelections.TeamType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        team_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.bragi.PicksAndBansSelections.TeamType team = 1 [json_name = "team"];</code>
       * @return This builder for chaining.
       */
      public Builder clearTeam() {
        bitField0_ = (bitField0_ & ~0x00000001);
        team_ = 0;
        onChanged();
        return this;
      }

      private boolean pick_ ;
      /**
       * <code>bool pick = 2 [json_name = "pick"];</code>
       * @return The pick.
       */
      @java.lang.Override
      public boolean getPick() {
        return pick_;
      }
      /**
       * <code>bool pick = 2 [json_name = "pick"];</code>
       * @param value The pick to set.
       * @return This builder for chaining.
       */
      public Builder setPick(boolean value) {

        pick_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>bool pick = 2 [json_name = "pick"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPick() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pick_ = false;
        onChanged();
        return this;
      }

      private int heroSteamId_ ;
      /**
       * <code>uint32 hero_steam_id = 3 [json_name = "heroSteamId"];</code>
       * @return The heroSteamId.
       */
      @java.lang.Override
      public int getHeroSteamId() {
        return heroSteamId_;
      }
      /**
       * <code>uint32 hero_steam_id = 3 [json_name = "heroSteamId"];</code>
       * @param value The heroSteamId to set.
       * @return This builder for chaining.
       */
      public Builder setHeroSteamId(int value) {

        heroSteamId_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 hero_steam_id = 3 [json_name = "heroSteamId"];</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroSteamId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        heroSteamId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object heroKey_ = "";
      /**
       * <code>string hero_key = 4 [json_name = "heroKey"];</code>
       * @return The heroKey.
       */
      public java.lang.String getHeroKey() {
        java.lang.Object ref = heroKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          heroKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string hero_key = 4 [json_name = "heroKey"];</code>
       * @return The bytes for heroKey.
       */
      public com.google.protobuf.ByteString
          getHeroKeyBytes() {
        java.lang.Object ref = heroKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          heroKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string hero_key = 4 [json_name = "heroKey"];</code>
       * @param value The heroKey to set.
       * @return This builder for chaining.
       */
      public Builder setHeroKey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        heroKey_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>string hero_key = 4 [json_name = "heroKey"];</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroKey() {
        heroKey_ = getDefaultInstance().getHeroKey();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>string hero_key = 4 [json_name = "heroKey"];</code>
       * @param value The bytes for heroKey to set.
       * @return This builder for chaining.
       */
      public Builder setHeroKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        heroKey_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:bragi.PicksAndBansSelections.PickOrBan)
    }

    // @@protoc_insertion_point(class_scope:bragi.PicksAndBansSelections.PickOrBan)
    private static final com.bragi.PicksAndBansSelections.PickOrBan DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bragi.PicksAndBansSelections.PickOrBan();
    }

    public static com.bragi.PicksAndBansSelections.PickOrBan getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PickOrBan>
        PARSER = new com.google.protobuf.AbstractParser<PickOrBan>() {
      @java.lang.Override
      public PickOrBan parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PickOrBan> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PickOrBan> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.bragi.PicksAndBansSelections.PickOrBan getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int CURRENT_HERO_SELECTION_FIELD_NUMBER = 1;
  private com.bragi.PicksAndBansSelections.CurrentHeroSelection currentHeroSelection_;
  /**
   * <code>.bragi.PicksAndBansSelections.CurrentHeroSelection current_hero_selection = 1 [json_name = "currentHeroSelection"];</code>
   * @return Whether the currentHeroSelection field is set.
   */
  @java.lang.Override
  public boolean hasCurrentHeroSelection() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.bragi.PicksAndBansSelections.CurrentHeroSelection current_hero_selection = 1 [json_name = "currentHeroSelection"];</code>
   * @return The currentHeroSelection.
   */
  @java.lang.Override
  public com.bragi.PicksAndBansSelections.CurrentHeroSelection getCurrentHeroSelection() {
    return currentHeroSelection_ == null ? com.bragi.PicksAndBansSelections.CurrentHeroSelection.getDefaultInstance() : currentHeroSelection_;
  }
  /**
   * <code>.bragi.PicksAndBansSelections.CurrentHeroSelection current_hero_selection = 1 [json_name = "currentHeroSelection"];</code>
   */
  @java.lang.Override
  public com.bragi.PicksAndBansSelections.CurrentHeroSelectionOrBuilder getCurrentHeroSelectionOrBuilder() {
    return currentHeroSelection_ == null ? com.bragi.PicksAndBansSelections.CurrentHeroSelection.getDefaultInstance() : currentHeroSelection_;
  }

  public static final int PICKS_AND_BANS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.bragi.PicksAndBansSelections.PickOrBan> picksAndBans_;
  /**
   * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
   */
  @java.lang.Override
  public java.util.List<com.bragi.PicksAndBansSelections.PickOrBan> getPicksAndBansList() {
    return picksAndBans_;
  }
  /**
   * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.bragi.PicksAndBansSelections.PickOrBanOrBuilder> 
      getPicksAndBansOrBuilderList() {
    return picksAndBans_;
  }
  /**
   * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
   */
  @java.lang.Override
  public int getPicksAndBansCount() {
    return picksAndBans_.size();
  }
  /**
   * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
   */
  @java.lang.Override
  public com.bragi.PicksAndBansSelections.PickOrBan getPicksAndBans(int index) {
    return picksAndBans_.get(index);
  }
  /**
   * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
   */
  @java.lang.Override
  public com.bragi.PicksAndBansSelections.PickOrBanOrBuilder getPicksAndBansOrBuilder(
      int index) {
    return picksAndBans_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getCurrentHeroSelection());
    }
    for (int i = 0; i < picksAndBans_.size(); i++) {
      output.writeMessage(2, picksAndBans_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getCurrentHeroSelection());
    }
    for (int i = 0; i < picksAndBans_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, picksAndBans_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.bragi.PicksAndBansSelections)) {
      return super.equals(obj);
    }
    com.bragi.PicksAndBansSelections other = (com.bragi.PicksAndBansSelections) obj;

    if (hasCurrentHeroSelection() != other.hasCurrentHeroSelection()) return false;
    if (hasCurrentHeroSelection()) {
      if (!getCurrentHeroSelection()
          .equals(other.getCurrentHeroSelection())) return false;
    }
    if (!getPicksAndBansList()
        .equals(other.getPicksAndBansList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasCurrentHeroSelection()) {
      hash = (37 * hash) + CURRENT_HERO_SELECTION_FIELD_NUMBER;
      hash = (53 * hash) + getCurrentHeroSelection().hashCode();
    }
    if (getPicksAndBansCount() > 0) {
      hash = (37 * hash) + PICKS_AND_BANS_FIELD_NUMBER;
      hash = (53 * hash) + getPicksAndBansList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.bragi.PicksAndBansSelections parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.PicksAndBansSelections parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.PicksAndBansSelections parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.PicksAndBansSelections parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.PicksAndBansSelections parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.PicksAndBansSelections parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.PicksAndBansSelections parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bragi.PicksAndBansSelections parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.bragi.PicksAndBansSelections parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.bragi.PicksAndBansSelections parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.bragi.PicksAndBansSelections parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bragi.PicksAndBansSelections parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.bragi.PicksAndBansSelections prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code bragi.PicksAndBansSelections}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bragi.PicksAndBansSelections)
      com.bragi.PicksAndBansSelectionsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bragi.Dota2Proto.internal_static_bragi_PicksAndBansSelections_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bragi.Dota2Proto.internal_static_bragi_PicksAndBansSelections_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bragi.PicksAndBansSelections.class, com.bragi.PicksAndBansSelections.Builder.class);
    }

    // Construct using com.bragi.PicksAndBansSelections.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getCurrentHeroSelectionFieldBuilder();
        getPicksAndBansFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      currentHeroSelection_ = null;
      if (currentHeroSelectionBuilder_ != null) {
        currentHeroSelectionBuilder_.dispose();
        currentHeroSelectionBuilder_ = null;
      }
      if (picksAndBansBuilder_ == null) {
        picksAndBans_ = java.util.Collections.emptyList();
      } else {
        picksAndBans_ = null;
        picksAndBansBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.bragi.Dota2Proto.internal_static_bragi_PicksAndBansSelections_descriptor;
    }

    @java.lang.Override
    public com.bragi.PicksAndBansSelections getDefaultInstanceForType() {
      return com.bragi.PicksAndBansSelections.getDefaultInstance();
    }

    @java.lang.Override
    public com.bragi.PicksAndBansSelections build() {
      com.bragi.PicksAndBansSelections result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.bragi.PicksAndBansSelections buildPartial() {
      com.bragi.PicksAndBansSelections result = new com.bragi.PicksAndBansSelections(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.bragi.PicksAndBansSelections result) {
      if (picksAndBansBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          picksAndBans_ = java.util.Collections.unmodifiableList(picksAndBans_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.picksAndBans_ = picksAndBans_;
      } else {
        result.picksAndBans_ = picksAndBansBuilder_.build();
      }
    }

    private void buildPartial0(com.bragi.PicksAndBansSelections result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.currentHeroSelection_ = currentHeroSelectionBuilder_ == null
            ? currentHeroSelection_
            : currentHeroSelectionBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.bragi.PicksAndBansSelections) {
        return mergeFrom((com.bragi.PicksAndBansSelections)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.bragi.PicksAndBansSelections other) {
      if (other == com.bragi.PicksAndBansSelections.getDefaultInstance()) return this;
      if (other.hasCurrentHeroSelection()) {
        mergeCurrentHeroSelection(other.getCurrentHeroSelection());
      }
      if (picksAndBansBuilder_ == null) {
        if (!other.picksAndBans_.isEmpty()) {
          if (picksAndBans_.isEmpty()) {
            picksAndBans_ = other.picksAndBans_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePicksAndBansIsMutable();
            picksAndBans_.addAll(other.picksAndBans_);
          }
          onChanged();
        }
      } else {
        if (!other.picksAndBans_.isEmpty()) {
          if (picksAndBansBuilder_.isEmpty()) {
            picksAndBansBuilder_.dispose();
            picksAndBansBuilder_ = null;
            picksAndBans_ = other.picksAndBans_;
            bitField0_ = (bitField0_ & ~0x00000002);
            picksAndBansBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getPicksAndBansFieldBuilder() : null;
          } else {
            picksAndBansBuilder_.addAllMessages(other.picksAndBans_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getCurrentHeroSelectionFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.bragi.PicksAndBansSelections.PickOrBan m =
                  input.readMessage(
                      com.bragi.PicksAndBansSelections.PickOrBan.parser(),
                      extensionRegistry);
              if (picksAndBansBuilder_ == null) {
                ensurePicksAndBansIsMutable();
                picksAndBans_.add(m);
              } else {
                picksAndBansBuilder_.addMessage(m);
              }
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.bragi.PicksAndBansSelections.CurrentHeroSelection currentHeroSelection_;
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.PicksAndBansSelections.CurrentHeroSelection, com.bragi.PicksAndBansSelections.CurrentHeroSelection.Builder, com.bragi.PicksAndBansSelections.CurrentHeroSelectionOrBuilder> currentHeroSelectionBuilder_;
    /**
     * <code>.bragi.PicksAndBansSelections.CurrentHeroSelection current_hero_selection = 1 [json_name = "currentHeroSelection"];</code>
     * @return Whether the currentHeroSelection field is set.
     */
    public boolean hasCurrentHeroSelection() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.bragi.PicksAndBansSelections.CurrentHeroSelection current_hero_selection = 1 [json_name = "currentHeroSelection"];</code>
     * @return The currentHeroSelection.
     */
    public com.bragi.PicksAndBansSelections.CurrentHeroSelection getCurrentHeroSelection() {
      if (currentHeroSelectionBuilder_ == null) {
        return currentHeroSelection_ == null ? com.bragi.PicksAndBansSelections.CurrentHeroSelection.getDefaultInstance() : currentHeroSelection_;
      } else {
        return currentHeroSelectionBuilder_.getMessage();
      }
    }
    /**
     * <code>.bragi.PicksAndBansSelections.CurrentHeroSelection current_hero_selection = 1 [json_name = "currentHeroSelection"];</code>
     */
    public Builder setCurrentHeroSelection(com.bragi.PicksAndBansSelections.CurrentHeroSelection value) {
      if (currentHeroSelectionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        currentHeroSelection_ = value;
      } else {
        currentHeroSelectionBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.bragi.PicksAndBansSelections.CurrentHeroSelection current_hero_selection = 1 [json_name = "currentHeroSelection"];</code>
     */
    public Builder setCurrentHeroSelection(
        com.bragi.PicksAndBansSelections.CurrentHeroSelection.Builder builderForValue) {
      if (currentHeroSelectionBuilder_ == null) {
        currentHeroSelection_ = builderForValue.build();
      } else {
        currentHeroSelectionBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.bragi.PicksAndBansSelections.CurrentHeroSelection current_hero_selection = 1 [json_name = "currentHeroSelection"];</code>
     */
    public Builder mergeCurrentHeroSelection(com.bragi.PicksAndBansSelections.CurrentHeroSelection value) {
      if (currentHeroSelectionBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          currentHeroSelection_ != null &&
          currentHeroSelection_ != com.bragi.PicksAndBansSelections.CurrentHeroSelection.getDefaultInstance()) {
          getCurrentHeroSelectionBuilder().mergeFrom(value);
        } else {
          currentHeroSelection_ = value;
        }
      } else {
        currentHeroSelectionBuilder_.mergeFrom(value);
      }
      if (currentHeroSelection_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.bragi.PicksAndBansSelections.CurrentHeroSelection current_hero_selection = 1 [json_name = "currentHeroSelection"];</code>
     */
    public Builder clearCurrentHeroSelection() {
      bitField0_ = (bitField0_ & ~0x00000001);
      currentHeroSelection_ = null;
      if (currentHeroSelectionBuilder_ != null) {
        currentHeroSelectionBuilder_.dispose();
        currentHeroSelectionBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.bragi.PicksAndBansSelections.CurrentHeroSelection current_hero_selection = 1 [json_name = "currentHeroSelection"];</code>
     */
    public com.bragi.PicksAndBansSelections.CurrentHeroSelection.Builder getCurrentHeroSelectionBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getCurrentHeroSelectionFieldBuilder().getBuilder();
    }
    /**
     * <code>.bragi.PicksAndBansSelections.CurrentHeroSelection current_hero_selection = 1 [json_name = "currentHeroSelection"];</code>
     */
    public com.bragi.PicksAndBansSelections.CurrentHeroSelectionOrBuilder getCurrentHeroSelectionOrBuilder() {
      if (currentHeroSelectionBuilder_ != null) {
        return currentHeroSelectionBuilder_.getMessageOrBuilder();
      } else {
        return currentHeroSelection_ == null ?
            com.bragi.PicksAndBansSelections.CurrentHeroSelection.getDefaultInstance() : currentHeroSelection_;
      }
    }
    /**
     * <code>.bragi.PicksAndBansSelections.CurrentHeroSelection current_hero_selection = 1 [json_name = "currentHeroSelection"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.PicksAndBansSelections.CurrentHeroSelection, com.bragi.PicksAndBansSelections.CurrentHeroSelection.Builder, com.bragi.PicksAndBansSelections.CurrentHeroSelectionOrBuilder> 
        getCurrentHeroSelectionFieldBuilder() {
      if (currentHeroSelectionBuilder_ == null) {
        currentHeroSelectionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.PicksAndBansSelections.CurrentHeroSelection, com.bragi.PicksAndBansSelections.CurrentHeroSelection.Builder, com.bragi.PicksAndBansSelections.CurrentHeroSelectionOrBuilder>(
                getCurrentHeroSelection(),
                getParentForChildren(),
                isClean());
        currentHeroSelection_ = null;
      }
      return currentHeroSelectionBuilder_;
    }

    private java.util.List<com.bragi.PicksAndBansSelections.PickOrBan> picksAndBans_ =
      java.util.Collections.emptyList();
    private void ensurePicksAndBansIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        picksAndBans_ = new java.util.ArrayList<com.bragi.PicksAndBansSelections.PickOrBan>(picksAndBans_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.bragi.PicksAndBansSelections.PickOrBan, com.bragi.PicksAndBansSelections.PickOrBan.Builder, com.bragi.PicksAndBansSelections.PickOrBanOrBuilder> picksAndBansBuilder_;

    /**
     * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
     */
    public java.util.List<com.bragi.PicksAndBansSelections.PickOrBan> getPicksAndBansList() {
      if (picksAndBansBuilder_ == null) {
        return java.util.Collections.unmodifiableList(picksAndBans_);
      } else {
        return picksAndBansBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
     */
    public int getPicksAndBansCount() {
      if (picksAndBansBuilder_ == null) {
        return picksAndBans_.size();
      } else {
        return picksAndBansBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
     */
    public com.bragi.PicksAndBansSelections.PickOrBan getPicksAndBans(int index) {
      if (picksAndBansBuilder_ == null) {
        return picksAndBans_.get(index);
      } else {
        return picksAndBansBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
     */
    public Builder setPicksAndBans(
        int index, com.bragi.PicksAndBansSelections.PickOrBan value) {
      if (picksAndBansBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePicksAndBansIsMutable();
        picksAndBans_.set(index, value);
        onChanged();
      } else {
        picksAndBansBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
     */
    public Builder setPicksAndBans(
        int index, com.bragi.PicksAndBansSelections.PickOrBan.Builder builderForValue) {
      if (picksAndBansBuilder_ == null) {
        ensurePicksAndBansIsMutable();
        picksAndBans_.set(index, builderForValue.build());
        onChanged();
      } else {
        picksAndBansBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
     */
    public Builder addPicksAndBans(com.bragi.PicksAndBansSelections.PickOrBan value) {
      if (picksAndBansBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePicksAndBansIsMutable();
        picksAndBans_.add(value);
        onChanged();
      } else {
        picksAndBansBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
     */
    public Builder addPicksAndBans(
        int index, com.bragi.PicksAndBansSelections.PickOrBan value) {
      if (picksAndBansBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePicksAndBansIsMutable();
        picksAndBans_.add(index, value);
        onChanged();
      } else {
        picksAndBansBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
     */
    public Builder addPicksAndBans(
        com.bragi.PicksAndBansSelections.PickOrBan.Builder builderForValue) {
      if (picksAndBansBuilder_ == null) {
        ensurePicksAndBansIsMutable();
        picksAndBans_.add(builderForValue.build());
        onChanged();
      } else {
        picksAndBansBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
     */
    public Builder addPicksAndBans(
        int index, com.bragi.PicksAndBansSelections.PickOrBan.Builder builderForValue) {
      if (picksAndBansBuilder_ == null) {
        ensurePicksAndBansIsMutable();
        picksAndBans_.add(index, builderForValue.build());
        onChanged();
      } else {
        picksAndBansBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
     */
    public Builder addAllPicksAndBans(
        java.lang.Iterable<? extends com.bragi.PicksAndBansSelections.PickOrBan> values) {
      if (picksAndBansBuilder_ == null) {
        ensurePicksAndBansIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, picksAndBans_);
        onChanged();
      } else {
        picksAndBansBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
     */
    public Builder clearPicksAndBans() {
      if (picksAndBansBuilder_ == null) {
        picksAndBans_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        picksAndBansBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
     */
    public Builder removePicksAndBans(int index) {
      if (picksAndBansBuilder_ == null) {
        ensurePicksAndBansIsMutable();
        picksAndBans_.remove(index);
        onChanged();
      } else {
        picksAndBansBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
     */
    public com.bragi.PicksAndBansSelections.PickOrBan.Builder getPicksAndBansBuilder(
        int index) {
      return getPicksAndBansFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
     */
    public com.bragi.PicksAndBansSelections.PickOrBanOrBuilder getPicksAndBansOrBuilder(
        int index) {
      if (picksAndBansBuilder_ == null) {
        return picksAndBans_.get(index);  } else {
        return picksAndBansBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
     */
    public java.util.List<? extends com.bragi.PicksAndBansSelections.PickOrBanOrBuilder> 
         getPicksAndBansOrBuilderList() {
      if (picksAndBansBuilder_ != null) {
        return picksAndBansBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(picksAndBans_);
      }
    }
    /**
     * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
     */
    public com.bragi.PicksAndBansSelections.PickOrBan.Builder addPicksAndBansBuilder() {
      return getPicksAndBansFieldBuilder().addBuilder(
          com.bragi.PicksAndBansSelections.PickOrBan.getDefaultInstance());
    }
    /**
     * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
     */
    public com.bragi.PicksAndBansSelections.PickOrBan.Builder addPicksAndBansBuilder(
        int index) {
      return getPicksAndBansFieldBuilder().addBuilder(
          index, com.bragi.PicksAndBansSelections.PickOrBan.getDefaultInstance());
    }
    /**
     * <code>repeated .bragi.PicksAndBansSelections.PickOrBan picks_and_bans = 2 [json_name = "picksAndBans"];</code>
     */
    public java.util.List<com.bragi.PicksAndBansSelections.PickOrBan.Builder> 
         getPicksAndBansBuilderList() {
      return getPicksAndBansFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.bragi.PicksAndBansSelections.PickOrBan, com.bragi.PicksAndBansSelections.PickOrBan.Builder, com.bragi.PicksAndBansSelections.PickOrBanOrBuilder> 
        getPicksAndBansFieldBuilder() {
      if (picksAndBansBuilder_ == null) {
        picksAndBansBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.bragi.PicksAndBansSelections.PickOrBan, com.bragi.PicksAndBansSelections.PickOrBan.Builder, com.bragi.PicksAndBansSelections.PickOrBanOrBuilder>(
                picksAndBans_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        picksAndBans_ = null;
      }
      return picksAndBansBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:bragi.PicksAndBansSelections)
  }

  // @@protoc_insertion_point(class_scope:bragi.PicksAndBansSelections)
  private static final com.bragi.PicksAndBansSelections DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.bragi.PicksAndBansSelections();
  }

  public static com.bragi.PicksAndBansSelections getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PicksAndBansSelections>
      PARSER = new com.google.protobuf.AbstractParser<PicksAndBansSelections>() {
    @java.lang.Override
    public PicksAndBansSelections parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PicksAndBansSelections> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PicksAndBansSelections> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.bragi.PicksAndBansSelections getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

