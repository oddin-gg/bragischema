// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bragi/rush_basketball.proto
// Protobuf Java Version: 4.29.3

package com.bragi;

/**
 * Protobuf type {@code bragi.RushBasketballTeamCurrentMapStatisticsState}
 */
public final class RushBasketballTeamCurrentMapStatisticsState extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:bragi.RushBasketballTeamCurrentMapStatisticsState)
    RushBasketballTeamCurrentMapStatisticsStateOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      RushBasketballTeamCurrentMapStatisticsState.class.getName());
  }
  // Use RushBasketballTeamCurrentMapStatisticsState.newBuilder() to construct.
  private RushBasketballTeamCurrentMapStatisticsState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private RushBasketballTeamCurrentMapStatisticsState() {
    periodPoints_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.bragi.RushBasketballProto.internal_static_bragi_RushBasketballTeamCurrentMapStatisticsState_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.bragi.RushBasketballProto.internal_static_bragi_RushBasketballTeamCurrentMapStatisticsState_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.bragi.RushBasketballTeamCurrentMapStatisticsState.class, com.bragi.RushBasketballTeamCurrentMapStatisticsState.Builder.class);
  }

  public static final int POINTS_TOTAL_FIELD_NUMBER = 1;
  private int pointsTotal_ = 0;
  /**
   * <pre>
   * Number of points.
   * </pre>
   *
   * <code>uint32 points_total = 1 [json_name = "pointsTotal"];</code>
   * @return The pointsTotal.
   */
  @java.lang.Override
  public int getPointsTotal() {
    return pointsTotal_;
  }

  public static final int POINTS_HT_FIELD_NUMBER = 2;
  private int pointsHt_ = 0;
  /**
   * <pre>
   * Number of goals in the first half (two quarter).
   * </pre>
   *
   * <code>uint32 points_ht = 2 [json_name = "pointsHt"];</code>
   * @return The pointsHt.
   */
  @java.lang.Override
  public int getPointsHt() {
    return pointsHt_;
  }

  public static final int PERIOD_POINTS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.bragi.RushBasketballPeriodPoints> periodPoints_;
  /**
   * <pre>
   * Number of all period points.
   * </pre>
   *
   * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
   */
  @java.lang.Override
  public java.util.List<com.bragi.RushBasketballPeriodPoints> getPeriodPointsList() {
    return periodPoints_;
  }
  /**
   * <pre>
   * Number of all period points.
   * </pre>
   *
   * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.bragi.RushBasketballPeriodPointsOrBuilder> 
      getPeriodPointsOrBuilderList() {
    return periodPoints_;
  }
  /**
   * <pre>
   * Number of all period points.
   * </pre>
   *
   * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
   */
  @java.lang.Override
  public int getPeriodPointsCount() {
    return periodPoints_.size();
  }
  /**
   * <pre>
   * Number of all period points.
   * </pre>
   *
   * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
   */
  @java.lang.Override
  public com.bragi.RushBasketballPeriodPoints getPeriodPoints(int index) {
    return periodPoints_.get(index);
  }
  /**
   * <pre>
   * Number of all period points.
   * </pre>
   *
   * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
   */
  @java.lang.Override
  public com.bragi.RushBasketballPeriodPointsOrBuilder getPeriodPointsOrBuilder(
      int index) {
    return periodPoints_.get(index);
  }

  public static final int THREE_POINTERS_FIELD_NUMBER = 4;
  private int threePointers_ = 0;
  /**
   * <pre>
   * Number of three pointers
   * </pre>
   *
   * <code>uint32 three_pointers = 4 [json_name = "threePointers"];</code>
   * @return The threePointers.
   */
  @java.lang.Override
  public int getThreePointers() {
    return threePointers_;
  }

  public static final int TWO_POINTERS_FIELD_NUMBER = 5;
  private int twoPointers_ = 0;
  /**
   * <pre>
   * Number of two pointers
   * </pre>
   *
   * <code>uint32 two_pointers = 5 [json_name = "twoPointers"];</code>
   * @return The twoPointers.
   */
  @java.lang.Override
  public int getTwoPointers() {
    return twoPointers_;
  }

  public static final int FREE_THROWS_SUCCESSFUL_FIELD_NUMBER = 6;
  private int freeThrowsSuccessful_ = 0;
  /**
   * <pre>
   * Number of successful free throws.
   * </pre>
   *
   * <code>uint32 free_throws_successful = 6 [json_name = "freeThrowsSuccessful"];</code>
   * @return The freeThrowsSuccessful.
   */
  @java.lang.Override
  public int getFreeThrowsSuccessful() {
    return freeThrowsSuccessful_;
  }

  public static final int FREE_THROWS_MISSED_FIELD_NUMBER = 7;
  private int freeThrowsMissed_ = 0;
  /**
   * <pre>
   * Number of missed free throws.
   * </pre>
   *
   * <code>uint32 free_throws_missed = 7 [json_name = "freeThrowsMissed"];</code>
   * @return The freeThrowsMissed.
   */
  @java.lang.Override
  public int getFreeThrowsMissed() {
    return freeThrowsMissed_;
  }

  public static final int FOULS_FIELD_NUMBER = 8;
  private int fouls_ = 0;
  /**
   * <pre>
   * Number of fouls.
   * </pre>
   *
   * <code>uint32 fouls = 8 [json_name = "fouls"];</code>
   * @return The fouls.
   */
  @java.lang.Override
  public int getFouls() {
    return fouls_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (pointsTotal_ != 0) {
      output.writeUInt32(1, pointsTotal_);
    }
    if (pointsHt_ != 0) {
      output.writeUInt32(2, pointsHt_);
    }
    for (int i = 0; i < periodPoints_.size(); i++) {
      output.writeMessage(3, periodPoints_.get(i));
    }
    if (threePointers_ != 0) {
      output.writeUInt32(4, threePointers_);
    }
    if (twoPointers_ != 0) {
      output.writeUInt32(5, twoPointers_);
    }
    if (freeThrowsSuccessful_ != 0) {
      output.writeUInt32(6, freeThrowsSuccessful_);
    }
    if (freeThrowsMissed_ != 0) {
      output.writeUInt32(7, freeThrowsMissed_);
    }
    if (fouls_ != 0) {
      output.writeUInt32(8, fouls_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (pointsTotal_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, pointsTotal_);
    }
    if (pointsHt_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, pointsHt_);
    }
    for (int i = 0; i < periodPoints_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, periodPoints_.get(i));
    }
    if (threePointers_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, threePointers_);
    }
    if (twoPointers_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, twoPointers_);
    }
    if (freeThrowsSuccessful_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(6, freeThrowsSuccessful_);
    }
    if (freeThrowsMissed_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(7, freeThrowsMissed_);
    }
    if (fouls_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(8, fouls_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.bragi.RushBasketballTeamCurrentMapStatisticsState)) {
      return super.equals(obj);
    }
    com.bragi.RushBasketballTeamCurrentMapStatisticsState other = (com.bragi.RushBasketballTeamCurrentMapStatisticsState) obj;

    if (getPointsTotal()
        != other.getPointsTotal()) return false;
    if (getPointsHt()
        != other.getPointsHt()) return false;
    if (!getPeriodPointsList()
        .equals(other.getPeriodPointsList())) return false;
    if (getThreePointers()
        != other.getThreePointers()) return false;
    if (getTwoPointers()
        != other.getTwoPointers()) return false;
    if (getFreeThrowsSuccessful()
        != other.getFreeThrowsSuccessful()) return false;
    if (getFreeThrowsMissed()
        != other.getFreeThrowsMissed()) return false;
    if (getFouls()
        != other.getFouls()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + POINTS_TOTAL_FIELD_NUMBER;
    hash = (53 * hash) + getPointsTotal();
    hash = (37 * hash) + POINTS_HT_FIELD_NUMBER;
    hash = (53 * hash) + getPointsHt();
    if (getPeriodPointsCount() > 0) {
      hash = (37 * hash) + PERIOD_POINTS_FIELD_NUMBER;
      hash = (53 * hash) + getPeriodPointsList().hashCode();
    }
    hash = (37 * hash) + THREE_POINTERS_FIELD_NUMBER;
    hash = (53 * hash) + getThreePointers();
    hash = (37 * hash) + TWO_POINTERS_FIELD_NUMBER;
    hash = (53 * hash) + getTwoPointers();
    hash = (37 * hash) + FREE_THROWS_SUCCESSFUL_FIELD_NUMBER;
    hash = (53 * hash) + getFreeThrowsSuccessful();
    hash = (37 * hash) + FREE_THROWS_MISSED_FIELD_NUMBER;
    hash = (53 * hash) + getFreeThrowsMissed();
    hash = (37 * hash) + FOULS_FIELD_NUMBER;
    hash = (53 * hash) + getFouls();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.bragi.RushBasketballTeamCurrentMapStatisticsState parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.RushBasketballTeamCurrentMapStatisticsState parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.RushBasketballTeamCurrentMapStatisticsState parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.RushBasketballTeamCurrentMapStatisticsState parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.RushBasketballTeamCurrentMapStatisticsState parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.RushBasketballTeamCurrentMapStatisticsState parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.RushBasketballTeamCurrentMapStatisticsState parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bragi.RushBasketballTeamCurrentMapStatisticsState parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.bragi.RushBasketballTeamCurrentMapStatisticsState parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.bragi.RushBasketballTeamCurrentMapStatisticsState parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.bragi.RushBasketballTeamCurrentMapStatisticsState parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bragi.RushBasketballTeamCurrentMapStatisticsState parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.bragi.RushBasketballTeamCurrentMapStatisticsState prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code bragi.RushBasketballTeamCurrentMapStatisticsState}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bragi.RushBasketballTeamCurrentMapStatisticsState)
      com.bragi.RushBasketballTeamCurrentMapStatisticsStateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bragi.RushBasketballProto.internal_static_bragi_RushBasketballTeamCurrentMapStatisticsState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bragi.RushBasketballProto.internal_static_bragi_RushBasketballTeamCurrentMapStatisticsState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bragi.RushBasketballTeamCurrentMapStatisticsState.class, com.bragi.RushBasketballTeamCurrentMapStatisticsState.Builder.class);
    }

    // Construct using com.bragi.RushBasketballTeamCurrentMapStatisticsState.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      pointsTotal_ = 0;
      pointsHt_ = 0;
      if (periodPointsBuilder_ == null) {
        periodPoints_ = java.util.Collections.emptyList();
      } else {
        periodPoints_ = null;
        periodPointsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      threePointers_ = 0;
      twoPointers_ = 0;
      freeThrowsSuccessful_ = 0;
      freeThrowsMissed_ = 0;
      fouls_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.bragi.RushBasketballProto.internal_static_bragi_RushBasketballTeamCurrentMapStatisticsState_descriptor;
    }

    @java.lang.Override
    public com.bragi.RushBasketballTeamCurrentMapStatisticsState getDefaultInstanceForType() {
      return com.bragi.RushBasketballTeamCurrentMapStatisticsState.getDefaultInstance();
    }

    @java.lang.Override
    public com.bragi.RushBasketballTeamCurrentMapStatisticsState build() {
      com.bragi.RushBasketballTeamCurrentMapStatisticsState result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.bragi.RushBasketballTeamCurrentMapStatisticsState buildPartial() {
      com.bragi.RushBasketballTeamCurrentMapStatisticsState result = new com.bragi.RushBasketballTeamCurrentMapStatisticsState(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.bragi.RushBasketballTeamCurrentMapStatisticsState result) {
      if (periodPointsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          periodPoints_ = java.util.Collections.unmodifiableList(periodPoints_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.periodPoints_ = periodPoints_;
      } else {
        result.periodPoints_ = periodPointsBuilder_.build();
      }
    }

    private void buildPartial0(com.bragi.RushBasketballTeamCurrentMapStatisticsState result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.pointsTotal_ = pointsTotal_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.pointsHt_ = pointsHt_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.threePointers_ = threePointers_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.twoPointers_ = twoPointers_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.freeThrowsSuccessful_ = freeThrowsSuccessful_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.freeThrowsMissed_ = freeThrowsMissed_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.fouls_ = fouls_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.bragi.RushBasketballTeamCurrentMapStatisticsState) {
        return mergeFrom((com.bragi.RushBasketballTeamCurrentMapStatisticsState)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.bragi.RushBasketballTeamCurrentMapStatisticsState other) {
      if (other == com.bragi.RushBasketballTeamCurrentMapStatisticsState.getDefaultInstance()) return this;
      if (other.getPointsTotal() != 0) {
        setPointsTotal(other.getPointsTotal());
      }
      if (other.getPointsHt() != 0) {
        setPointsHt(other.getPointsHt());
      }
      if (periodPointsBuilder_ == null) {
        if (!other.periodPoints_.isEmpty()) {
          if (periodPoints_.isEmpty()) {
            periodPoints_ = other.periodPoints_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensurePeriodPointsIsMutable();
            periodPoints_.addAll(other.periodPoints_);
          }
          onChanged();
        }
      } else {
        if (!other.periodPoints_.isEmpty()) {
          if (periodPointsBuilder_.isEmpty()) {
            periodPointsBuilder_.dispose();
            periodPointsBuilder_ = null;
            periodPoints_ = other.periodPoints_;
            bitField0_ = (bitField0_ & ~0x00000004);
            periodPointsBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getPeriodPointsFieldBuilder() : null;
          } else {
            periodPointsBuilder_.addAllMessages(other.periodPoints_);
          }
        }
      }
      if (other.getThreePointers() != 0) {
        setThreePointers(other.getThreePointers());
      }
      if (other.getTwoPointers() != 0) {
        setTwoPointers(other.getTwoPointers());
      }
      if (other.getFreeThrowsSuccessful() != 0) {
        setFreeThrowsSuccessful(other.getFreeThrowsSuccessful());
      }
      if (other.getFreeThrowsMissed() != 0) {
        setFreeThrowsMissed(other.getFreeThrowsMissed());
      }
      if (other.getFouls() != 0) {
        setFouls(other.getFouls());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              pointsTotal_ = input.readUInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              pointsHt_ = input.readUInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              com.bragi.RushBasketballPeriodPoints m =
                  input.readMessage(
                      com.bragi.RushBasketballPeriodPoints.parser(),
                      extensionRegistry);
              if (periodPointsBuilder_ == null) {
                ensurePeriodPointsIsMutable();
                periodPoints_.add(m);
              } else {
                periodPointsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 32: {
              threePointers_ = input.readUInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              twoPointers_ = input.readUInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              freeThrowsSuccessful_ = input.readUInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              freeThrowsMissed_ = input.readUInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              fouls_ = input.readUInt32();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int pointsTotal_ ;
    /**
     * <pre>
     * Number of points.
     * </pre>
     *
     * <code>uint32 points_total = 1 [json_name = "pointsTotal"];</code>
     * @return The pointsTotal.
     */
    @java.lang.Override
    public int getPointsTotal() {
      return pointsTotal_;
    }
    /**
     * <pre>
     * Number of points.
     * </pre>
     *
     * <code>uint32 points_total = 1 [json_name = "pointsTotal"];</code>
     * @param value The pointsTotal to set.
     * @return This builder for chaining.
     */
    public Builder setPointsTotal(int value) {

      pointsTotal_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of points.
     * </pre>
     *
     * <code>uint32 points_total = 1 [json_name = "pointsTotal"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPointsTotal() {
      bitField0_ = (bitField0_ & ~0x00000001);
      pointsTotal_ = 0;
      onChanged();
      return this;
    }

    private int pointsHt_ ;
    /**
     * <pre>
     * Number of goals in the first half (two quarter).
     * </pre>
     *
     * <code>uint32 points_ht = 2 [json_name = "pointsHt"];</code>
     * @return The pointsHt.
     */
    @java.lang.Override
    public int getPointsHt() {
      return pointsHt_;
    }
    /**
     * <pre>
     * Number of goals in the first half (two quarter).
     * </pre>
     *
     * <code>uint32 points_ht = 2 [json_name = "pointsHt"];</code>
     * @param value The pointsHt to set.
     * @return This builder for chaining.
     */
    public Builder setPointsHt(int value) {

      pointsHt_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of goals in the first half (two quarter).
     * </pre>
     *
     * <code>uint32 points_ht = 2 [json_name = "pointsHt"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPointsHt() {
      bitField0_ = (bitField0_ & ~0x00000002);
      pointsHt_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.bragi.RushBasketballPeriodPoints> periodPoints_ =
      java.util.Collections.emptyList();
    private void ensurePeriodPointsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        periodPoints_ = new java.util.ArrayList<com.bragi.RushBasketballPeriodPoints>(periodPoints_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.bragi.RushBasketballPeriodPoints, com.bragi.RushBasketballPeriodPoints.Builder, com.bragi.RushBasketballPeriodPointsOrBuilder> periodPointsBuilder_;

    /**
     * <pre>
     * Number of all period points.
     * </pre>
     *
     * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
     */
    public java.util.List<com.bragi.RushBasketballPeriodPoints> getPeriodPointsList() {
      if (periodPointsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(periodPoints_);
      } else {
        return periodPointsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Number of all period points.
     * </pre>
     *
     * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
     */
    public int getPeriodPointsCount() {
      if (periodPointsBuilder_ == null) {
        return periodPoints_.size();
      } else {
        return periodPointsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Number of all period points.
     * </pre>
     *
     * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
     */
    public com.bragi.RushBasketballPeriodPoints getPeriodPoints(int index) {
      if (periodPointsBuilder_ == null) {
        return periodPoints_.get(index);
      } else {
        return periodPointsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Number of all period points.
     * </pre>
     *
     * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
     */
    public Builder setPeriodPoints(
        int index, com.bragi.RushBasketballPeriodPoints value) {
      if (periodPointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePeriodPointsIsMutable();
        periodPoints_.set(index, value);
        onChanged();
      } else {
        periodPointsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Number of all period points.
     * </pre>
     *
     * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
     */
    public Builder setPeriodPoints(
        int index, com.bragi.RushBasketballPeriodPoints.Builder builderForValue) {
      if (periodPointsBuilder_ == null) {
        ensurePeriodPointsIsMutable();
        periodPoints_.set(index, builderForValue.build());
        onChanged();
      } else {
        periodPointsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Number of all period points.
     * </pre>
     *
     * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
     */
    public Builder addPeriodPoints(com.bragi.RushBasketballPeriodPoints value) {
      if (periodPointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePeriodPointsIsMutable();
        periodPoints_.add(value);
        onChanged();
      } else {
        periodPointsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Number of all period points.
     * </pre>
     *
     * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
     */
    public Builder addPeriodPoints(
        int index, com.bragi.RushBasketballPeriodPoints value) {
      if (periodPointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePeriodPointsIsMutable();
        periodPoints_.add(index, value);
        onChanged();
      } else {
        periodPointsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Number of all period points.
     * </pre>
     *
     * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
     */
    public Builder addPeriodPoints(
        com.bragi.RushBasketballPeriodPoints.Builder builderForValue) {
      if (periodPointsBuilder_ == null) {
        ensurePeriodPointsIsMutable();
        periodPoints_.add(builderForValue.build());
        onChanged();
      } else {
        periodPointsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Number of all period points.
     * </pre>
     *
     * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
     */
    public Builder addPeriodPoints(
        int index, com.bragi.RushBasketballPeriodPoints.Builder builderForValue) {
      if (periodPointsBuilder_ == null) {
        ensurePeriodPointsIsMutable();
        periodPoints_.add(index, builderForValue.build());
        onChanged();
      } else {
        periodPointsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Number of all period points.
     * </pre>
     *
     * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
     */
    public Builder addAllPeriodPoints(
        java.lang.Iterable<? extends com.bragi.RushBasketballPeriodPoints> values) {
      if (periodPointsBuilder_ == null) {
        ensurePeriodPointsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, periodPoints_);
        onChanged();
      } else {
        periodPointsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Number of all period points.
     * </pre>
     *
     * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
     */
    public Builder clearPeriodPoints() {
      if (periodPointsBuilder_ == null) {
        periodPoints_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        periodPointsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Number of all period points.
     * </pre>
     *
     * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
     */
    public Builder removePeriodPoints(int index) {
      if (periodPointsBuilder_ == null) {
        ensurePeriodPointsIsMutable();
        periodPoints_.remove(index);
        onChanged();
      } else {
        periodPointsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Number of all period points.
     * </pre>
     *
     * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
     */
    public com.bragi.RushBasketballPeriodPoints.Builder getPeriodPointsBuilder(
        int index) {
      return getPeriodPointsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Number of all period points.
     * </pre>
     *
     * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
     */
    public com.bragi.RushBasketballPeriodPointsOrBuilder getPeriodPointsOrBuilder(
        int index) {
      if (periodPointsBuilder_ == null) {
        return periodPoints_.get(index);  } else {
        return periodPointsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Number of all period points.
     * </pre>
     *
     * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
     */
    public java.util.List<? extends com.bragi.RushBasketballPeriodPointsOrBuilder> 
         getPeriodPointsOrBuilderList() {
      if (periodPointsBuilder_ != null) {
        return periodPointsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(periodPoints_);
      }
    }
    /**
     * <pre>
     * Number of all period points.
     * </pre>
     *
     * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
     */
    public com.bragi.RushBasketballPeriodPoints.Builder addPeriodPointsBuilder() {
      return getPeriodPointsFieldBuilder().addBuilder(
          com.bragi.RushBasketballPeriodPoints.getDefaultInstance());
    }
    /**
     * <pre>
     * Number of all period points.
     * </pre>
     *
     * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
     */
    public com.bragi.RushBasketballPeriodPoints.Builder addPeriodPointsBuilder(
        int index) {
      return getPeriodPointsFieldBuilder().addBuilder(
          index, com.bragi.RushBasketballPeriodPoints.getDefaultInstance());
    }
    /**
     * <pre>
     * Number of all period points.
     * </pre>
     *
     * <code>repeated .bragi.RushBasketballPeriodPoints period_points = 3 [json_name = "periodPoints"];</code>
     */
    public java.util.List<com.bragi.RushBasketballPeriodPoints.Builder> 
         getPeriodPointsBuilderList() {
      return getPeriodPointsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.bragi.RushBasketballPeriodPoints, com.bragi.RushBasketballPeriodPoints.Builder, com.bragi.RushBasketballPeriodPointsOrBuilder> 
        getPeriodPointsFieldBuilder() {
      if (periodPointsBuilder_ == null) {
        periodPointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.bragi.RushBasketballPeriodPoints, com.bragi.RushBasketballPeriodPoints.Builder, com.bragi.RushBasketballPeriodPointsOrBuilder>(
                periodPoints_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        periodPoints_ = null;
      }
      return periodPointsBuilder_;
    }

    private int threePointers_ ;
    /**
     * <pre>
     * Number of three pointers
     * </pre>
     *
     * <code>uint32 three_pointers = 4 [json_name = "threePointers"];</code>
     * @return The threePointers.
     */
    @java.lang.Override
    public int getThreePointers() {
      return threePointers_;
    }
    /**
     * <pre>
     * Number of three pointers
     * </pre>
     *
     * <code>uint32 three_pointers = 4 [json_name = "threePointers"];</code>
     * @param value The threePointers to set.
     * @return This builder for chaining.
     */
    public Builder setThreePointers(int value) {

      threePointers_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of three pointers
     * </pre>
     *
     * <code>uint32 three_pointers = 4 [json_name = "threePointers"];</code>
     * @return This builder for chaining.
     */
    public Builder clearThreePointers() {
      bitField0_ = (bitField0_ & ~0x00000008);
      threePointers_ = 0;
      onChanged();
      return this;
    }

    private int twoPointers_ ;
    /**
     * <pre>
     * Number of two pointers
     * </pre>
     *
     * <code>uint32 two_pointers = 5 [json_name = "twoPointers"];</code>
     * @return The twoPointers.
     */
    @java.lang.Override
    public int getTwoPointers() {
      return twoPointers_;
    }
    /**
     * <pre>
     * Number of two pointers
     * </pre>
     *
     * <code>uint32 two_pointers = 5 [json_name = "twoPointers"];</code>
     * @param value The twoPointers to set.
     * @return This builder for chaining.
     */
    public Builder setTwoPointers(int value) {

      twoPointers_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of two pointers
     * </pre>
     *
     * <code>uint32 two_pointers = 5 [json_name = "twoPointers"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTwoPointers() {
      bitField0_ = (bitField0_ & ~0x00000010);
      twoPointers_ = 0;
      onChanged();
      return this;
    }

    private int freeThrowsSuccessful_ ;
    /**
     * <pre>
     * Number of successful free throws.
     * </pre>
     *
     * <code>uint32 free_throws_successful = 6 [json_name = "freeThrowsSuccessful"];</code>
     * @return The freeThrowsSuccessful.
     */
    @java.lang.Override
    public int getFreeThrowsSuccessful() {
      return freeThrowsSuccessful_;
    }
    /**
     * <pre>
     * Number of successful free throws.
     * </pre>
     *
     * <code>uint32 free_throws_successful = 6 [json_name = "freeThrowsSuccessful"];</code>
     * @param value The freeThrowsSuccessful to set.
     * @return This builder for chaining.
     */
    public Builder setFreeThrowsSuccessful(int value) {

      freeThrowsSuccessful_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of successful free throws.
     * </pre>
     *
     * <code>uint32 free_throws_successful = 6 [json_name = "freeThrowsSuccessful"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFreeThrowsSuccessful() {
      bitField0_ = (bitField0_ & ~0x00000020);
      freeThrowsSuccessful_ = 0;
      onChanged();
      return this;
    }

    private int freeThrowsMissed_ ;
    /**
     * <pre>
     * Number of missed free throws.
     * </pre>
     *
     * <code>uint32 free_throws_missed = 7 [json_name = "freeThrowsMissed"];</code>
     * @return The freeThrowsMissed.
     */
    @java.lang.Override
    public int getFreeThrowsMissed() {
      return freeThrowsMissed_;
    }
    /**
     * <pre>
     * Number of missed free throws.
     * </pre>
     *
     * <code>uint32 free_throws_missed = 7 [json_name = "freeThrowsMissed"];</code>
     * @param value The freeThrowsMissed to set.
     * @return This builder for chaining.
     */
    public Builder setFreeThrowsMissed(int value) {

      freeThrowsMissed_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of missed free throws.
     * </pre>
     *
     * <code>uint32 free_throws_missed = 7 [json_name = "freeThrowsMissed"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFreeThrowsMissed() {
      bitField0_ = (bitField0_ & ~0x00000040);
      freeThrowsMissed_ = 0;
      onChanged();
      return this;
    }

    private int fouls_ ;
    /**
     * <pre>
     * Number of fouls.
     * </pre>
     *
     * <code>uint32 fouls = 8 [json_name = "fouls"];</code>
     * @return The fouls.
     */
    @java.lang.Override
    public int getFouls() {
      return fouls_;
    }
    /**
     * <pre>
     * Number of fouls.
     * </pre>
     *
     * <code>uint32 fouls = 8 [json_name = "fouls"];</code>
     * @param value The fouls to set.
     * @return This builder for chaining.
     */
    public Builder setFouls(int value) {

      fouls_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of fouls.
     * </pre>
     *
     * <code>uint32 fouls = 8 [json_name = "fouls"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFouls() {
      bitField0_ = (bitField0_ & ~0x00000080);
      fouls_ = 0;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:bragi.RushBasketballTeamCurrentMapStatisticsState)
  }

  // @@protoc_insertion_point(class_scope:bragi.RushBasketballTeamCurrentMapStatisticsState)
  private static final com.bragi.RushBasketballTeamCurrentMapStatisticsState DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.bragi.RushBasketballTeamCurrentMapStatisticsState();
  }

  public static com.bragi.RushBasketballTeamCurrentMapStatisticsState getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RushBasketballTeamCurrentMapStatisticsState>
      PARSER = new com.google.protobuf.AbstractParser<RushBasketballTeamCurrentMapStatisticsState>() {
    @java.lang.Override
    public RushBasketballTeamCurrentMapStatisticsState parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<RushBasketballTeamCurrentMapStatisticsState> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RushBasketballTeamCurrentMapStatisticsState> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.bragi.RushBasketballTeamCurrentMapStatisticsState getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

