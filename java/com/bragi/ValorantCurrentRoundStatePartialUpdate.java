// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bragi/valorant.proto
// Protobuf Java Version: 4.29.3

package com.bragi;

/**
 * Protobuf type {@code bragi.ValorantCurrentRoundStatePartialUpdate}
 */
public final class ValorantCurrentRoundStatePartialUpdate extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:bragi.ValorantCurrentRoundStatePartialUpdate)
    ValorantCurrentRoundStatePartialUpdateOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      ValorantCurrentRoundStatePartialUpdate.class.getName());
  }
  // Use ValorantCurrentRoundStatePartialUpdate.newBuilder() to construct.
  private ValorantCurrentRoundStatePartialUpdate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ValorantCurrentRoundStatePartialUpdate() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.bragi.ValorantProto.internal_static_bragi_ValorantCurrentRoundStatePartialUpdate_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.bragi.ValorantProto.internal_static_bragi_ValorantCurrentRoundStatePartialUpdate_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.bragi.ValorantCurrentRoundStatePartialUpdate.class, com.bragi.ValorantCurrentRoundStatePartialUpdate.Builder.class);
  }

  private int updateCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object update_;
  public enum UpdateCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    ROUND_INFO(1),
    TIME(2),
    SPIKE(3),
    TEAM_CURRENT_ROUND_STATE(4),
    TEAM_CURRENT_ROUND_PARTIAL_UPDATE(5),
    UPDATE_NOT_SET(0);
    private final int value;
    private UpdateCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UpdateCase valueOf(int value) {
      return forNumber(value);
    }

    public static UpdateCase forNumber(int value) {
      switch (value) {
        case 1: return ROUND_INFO;
        case 2: return TIME;
        case 3: return SPIKE;
        case 4: return TEAM_CURRENT_ROUND_STATE;
        case 5: return TEAM_CURRENT_ROUND_PARTIAL_UPDATE;
        case 0: return UPDATE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public UpdateCase
  getUpdateCase() {
    return UpdateCase.forNumber(
        updateCase_);
  }

  public static final int ROUND_INFO_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Replaces "round_info" property in ValorantCurrentRoundState.
   * </pre>
   *
   * <code>.bragi.ValorantRoundInfoState round_info = 1 [json_name = "roundInfo"];</code>
   * @return Whether the roundInfo field is set.
   */
  @java.lang.Override
  public boolean hasRoundInfo() {
    return updateCase_ == 1;
  }
  /**
   * <pre>
   * Replaces "round_info" property in ValorantCurrentRoundState.
   * </pre>
   *
   * <code>.bragi.ValorantRoundInfoState round_info = 1 [json_name = "roundInfo"];</code>
   * @return The roundInfo.
   */
  @java.lang.Override
  public com.bragi.ValorantRoundInfoState getRoundInfo() {
    if (updateCase_ == 1) {
       return (com.bragi.ValorantRoundInfoState) update_;
    }
    return com.bragi.ValorantRoundInfoState.getDefaultInstance();
  }
  /**
   * <pre>
   * Replaces "round_info" property in ValorantCurrentRoundState.
   * </pre>
   *
   * <code>.bragi.ValorantRoundInfoState round_info = 1 [json_name = "roundInfo"];</code>
   */
  @java.lang.Override
  public com.bragi.ValorantRoundInfoStateOrBuilder getRoundInfoOrBuilder() {
    if (updateCase_ == 1) {
       return (com.bragi.ValorantRoundInfoState) update_;
    }
    return com.bragi.ValorantRoundInfoState.getDefaultInstance();
  }

  public static final int TIME_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Replaces "time" property in ValorantCurrentRoundState.
   * </pre>
   *
   * <code>.bragi.ValorantCurrentRoundTimeState time = 2 [json_name = "time"];</code>
   * @return Whether the time field is set.
   */
  @java.lang.Override
  public boolean hasTime() {
    return updateCase_ == 2;
  }
  /**
   * <pre>
   * Replaces "time" property in ValorantCurrentRoundState.
   * </pre>
   *
   * <code>.bragi.ValorantCurrentRoundTimeState time = 2 [json_name = "time"];</code>
   * @return The time.
   */
  @java.lang.Override
  public com.bragi.ValorantCurrentRoundTimeState getTime() {
    if (updateCase_ == 2) {
       return (com.bragi.ValorantCurrentRoundTimeState) update_;
    }
    return com.bragi.ValorantCurrentRoundTimeState.getDefaultInstance();
  }
  /**
   * <pre>
   * Replaces "time" property in ValorantCurrentRoundState.
   * </pre>
   *
   * <code>.bragi.ValorantCurrentRoundTimeState time = 2 [json_name = "time"];</code>
   */
  @java.lang.Override
  public com.bragi.ValorantCurrentRoundTimeStateOrBuilder getTimeOrBuilder() {
    if (updateCase_ == 2) {
       return (com.bragi.ValorantCurrentRoundTimeState) update_;
    }
    return com.bragi.ValorantCurrentRoundTimeState.getDefaultInstance();
  }

  public static final int SPIKE_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Replaces "spike" property in ValorantCurrentRoundState.
   * </pre>
   *
   * <code>.bragi.ValorantCurrentRoundTeamSpikeState spike = 3 [json_name = "spike"];</code>
   * @return Whether the spike field is set.
   */
  @java.lang.Override
  public boolean hasSpike() {
    return updateCase_ == 3;
  }
  /**
   * <pre>
   * Replaces "spike" property in ValorantCurrentRoundState.
   * </pre>
   *
   * <code>.bragi.ValorantCurrentRoundTeamSpikeState spike = 3 [json_name = "spike"];</code>
   * @return The spike.
   */
  @java.lang.Override
  public com.bragi.ValorantCurrentRoundTeamSpikeState getSpike() {
    if (updateCase_ == 3) {
       return (com.bragi.ValorantCurrentRoundTeamSpikeState) update_;
    }
    return com.bragi.ValorantCurrentRoundTeamSpikeState.getDefaultInstance();
  }
  /**
   * <pre>
   * Replaces "spike" property in ValorantCurrentRoundState.
   * </pre>
   *
   * <code>.bragi.ValorantCurrentRoundTeamSpikeState spike = 3 [json_name = "spike"];</code>
   */
  @java.lang.Override
  public com.bragi.ValorantCurrentRoundTeamSpikeStateOrBuilder getSpikeOrBuilder() {
    if (updateCase_ == 3) {
       return (com.bragi.ValorantCurrentRoundTeamSpikeState) update_;
    }
    return com.bragi.ValorantCurrentRoundTeamSpikeState.getDefaultInstance();
  }

  public static final int TEAM_CURRENT_ROUND_STATE_FIELD_NUMBER = 4;
  /**
   * <pre>
   * Replaces whole value under given key in teams hash map property in ValorantCurrentRoundState.
   * </pre>
   *
   * <code>.bragi.ValorantTeamCurrentRoundState team_current_round_state = 4 [json_name = "teamCurrentRoundState"];</code>
   * @return Whether the teamCurrentRoundState field is set.
   */
  @java.lang.Override
  public boolean hasTeamCurrentRoundState() {
    return updateCase_ == 4;
  }
  /**
   * <pre>
   * Replaces whole value under given key in teams hash map property in ValorantCurrentRoundState.
   * </pre>
   *
   * <code>.bragi.ValorantTeamCurrentRoundState team_current_round_state = 4 [json_name = "teamCurrentRoundState"];</code>
   * @return The teamCurrentRoundState.
   */
  @java.lang.Override
  public com.bragi.ValorantTeamCurrentRoundState getTeamCurrentRoundState() {
    if (updateCase_ == 4) {
       return (com.bragi.ValorantTeamCurrentRoundState) update_;
    }
    return com.bragi.ValorantTeamCurrentRoundState.getDefaultInstance();
  }
  /**
   * <pre>
   * Replaces whole value under given key in teams hash map property in ValorantCurrentRoundState.
   * </pre>
   *
   * <code>.bragi.ValorantTeamCurrentRoundState team_current_round_state = 4 [json_name = "teamCurrentRoundState"];</code>
   */
  @java.lang.Override
  public com.bragi.ValorantTeamCurrentRoundStateOrBuilder getTeamCurrentRoundStateOrBuilder() {
    if (updateCase_ == 4) {
       return (com.bragi.ValorantTeamCurrentRoundState) update_;
    }
    return com.bragi.ValorantTeamCurrentRoundState.getDefaultInstance();
  }

  public static final int TEAM_CURRENT_ROUND_PARTIAL_UPDATE_FIELD_NUMBER = 5;
  /**
   * <pre>
   * Apply partial update on value under given key in teams hash map property in ValorantCurrentRoundState.
   * </pre>
   *
   * <code>.bragi.ValorantTeamCurrentRoundStatePartialUpdate team_current_round_partial_update = 5 [json_name = "teamCurrentRoundPartialUpdate"];</code>
   * @return Whether the teamCurrentRoundPartialUpdate field is set.
   */
  @java.lang.Override
  public boolean hasTeamCurrentRoundPartialUpdate() {
    return updateCase_ == 5;
  }
  /**
   * <pre>
   * Apply partial update on value under given key in teams hash map property in ValorantCurrentRoundState.
   * </pre>
   *
   * <code>.bragi.ValorantTeamCurrentRoundStatePartialUpdate team_current_round_partial_update = 5 [json_name = "teamCurrentRoundPartialUpdate"];</code>
   * @return The teamCurrentRoundPartialUpdate.
   */
  @java.lang.Override
  public com.bragi.ValorantTeamCurrentRoundStatePartialUpdate getTeamCurrentRoundPartialUpdate() {
    if (updateCase_ == 5) {
       return (com.bragi.ValorantTeamCurrentRoundStatePartialUpdate) update_;
    }
    return com.bragi.ValorantTeamCurrentRoundStatePartialUpdate.getDefaultInstance();
  }
  /**
   * <pre>
   * Apply partial update on value under given key in teams hash map property in ValorantCurrentRoundState.
   * </pre>
   *
   * <code>.bragi.ValorantTeamCurrentRoundStatePartialUpdate team_current_round_partial_update = 5 [json_name = "teamCurrentRoundPartialUpdate"];</code>
   */
  @java.lang.Override
  public com.bragi.ValorantTeamCurrentRoundStatePartialUpdateOrBuilder getTeamCurrentRoundPartialUpdateOrBuilder() {
    if (updateCase_ == 5) {
       return (com.bragi.ValorantTeamCurrentRoundStatePartialUpdate) update_;
    }
    return com.bragi.ValorantTeamCurrentRoundStatePartialUpdate.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (updateCase_ == 1) {
      output.writeMessage(1, (com.bragi.ValorantRoundInfoState) update_);
    }
    if (updateCase_ == 2) {
      output.writeMessage(2, (com.bragi.ValorantCurrentRoundTimeState) update_);
    }
    if (updateCase_ == 3) {
      output.writeMessage(3, (com.bragi.ValorantCurrentRoundTeamSpikeState) update_);
    }
    if (updateCase_ == 4) {
      output.writeMessage(4, (com.bragi.ValorantTeamCurrentRoundState) update_);
    }
    if (updateCase_ == 5) {
      output.writeMessage(5, (com.bragi.ValorantTeamCurrentRoundStatePartialUpdate) update_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (updateCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.bragi.ValorantRoundInfoState) update_);
    }
    if (updateCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.bragi.ValorantCurrentRoundTimeState) update_);
    }
    if (updateCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.bragi.ValorantCurrentRoundTeamSpikeState) update_);
    }
    if (updateCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.bragi.ValorantTeamCurrentRoundState) update_);
    }
    if (updateCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (com.bragi.ValorantTeamCurrentRoundStatePartialUpdate) update_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.bragi.ValorantCurrentRoundStatePartialUpdate)) {
      return super.equals(obj);
    }
    com.bragi.ValorantCurrentRoundStatePartialUpdate other = (com.bragi.ValorantCurrentRoundStatePartialUpdate) obj;

    if (!getUpdateCase().equals(other.getUpdateCase())) return false;
    switch (updateCase_) {
      case 1:
        if (!getRoundInfo()
            .equals(other.getRoundInfo())) return false;
        break;
      case 2:
        if (!getTime()
            .equals(other.getTime())) return false;
        break;
      case 3:
        if (!getSpike()
            .equals(other.getSpike())) return false;
        break;
      case 4:
        if (!getTeamCurrentRoundState()
            .equals(other.getTeamCurrentRoundState())) return false;
        break;
      case 5:
        if (!getTeamCurrentRoundPartialUpdate()
            .equals(other.getTeamCurrentRoundPartialUpdate())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (updateCase_) {
      case 1:
        hash = (37 * hash) + ROUND_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getRoundInfo().hashCode();
        break;
      case 2:
        hash = (37 * hash) + TIME_FIELD_NUMBER;
        hash = (53 * hash) + getTime().hashCode();
        break;
      case 3:
        hash = (37 * hash) + SPIKE_FIELD_NUMBER;
        hash = (53 * hash) + getSpike().hashCode();
        break;
      case 4:
        hash = (37 * hash) + TEAM_CURRENT_ROUND_STATE_FIELD_NUMBER;
        hash = (53 * hash) + getTeamCurrentRoundState().hashCode();
        break;
      case 5:
        hash = (37 * hash) + TEAM_CURRENT_ROUND_PARTIAL_UPDATE_FIELD_NUMBER;
        hash = (53 * hash) + getTeamCurrentRoundPartialUpdate().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.bragi.ValorantCurrentRoundStatePartialUpdate parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.ValorantCurrentRoundStatePartialUpdate parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.ValorantCurrentRoundStatePartialUpdate parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.ValorantCurrentRoundStatePartialUpdate parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.ValorantCurrentRoundStatePartialUpdate parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bragi.ValorantCurrentRoundStatePartialUpdate parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bragi.ValorantCurrentRoundStatePartialUpdate parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bragi.ValorantCurrentRoundStatePartialUpdate parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.bragi.ValorantCurrentRoundStatePartialUpdate parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.bragi.ValorantCurrentRoundStatePartialUpdate parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.bragi.ValorantCurrentRoundStatePartialUpdate parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bragi.ValorantCurrentRoundStatePartialUpdate parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.bragi.ValorantCurrentRoundStatePartialUpdate prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code bragi.ValorantCurrentRoundStatePartialUpdate}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bragi.ValorantCurrentRoundStatePartialUpdate)
      com.bragi.ValorantCurrentRoundStatePartialUpdateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bragi.ValorantProto.internal_static_bragi_ValorantCurrentRoundStatePartialUpdate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bragi.ValorantProto.internal_static_bragi_ValorantCurrentRoundStatePartialUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bragi.ValorantCurrentRoundStatePartialUpdate.class, com.bragi.ValorantCurrentRoundStatePartialUpdate.Builder.class);
    }

    // Construct using com.bragi.ValorantCurrentRoundStatePartialUpdate.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (roundInfoBuilder_ != null) {
        roundInfoBuilder_.clear();
      }
      if (timeBuilder_ != null) {
        timeBuilder_.clear();
      }
      if (spikeBuilder_ != null) {
        spikeBuilder_.clear();
      }
      if (teamCurrentRoundStateBuilder_ != null) {
        teamCurrentRoundStateBuilder_.clear();
      }
      if (teamCurrentRoundPartialUpdateBuilder_ != null) {
        teamCurrentRoundPartialUpdateBuilder_.clear();
      }
      updateCase_ = 0;
      update_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.bragi.ValorantProto.internal_static_bragi_ValorantCurrentRoundStatePartialUpdate_descriptor;
    }

    @java.lang.Override
    public com.bragi.ValorantCurrentRoundStatePartialUpdate getDefaultInstanceForType() {
      return com.bragi.ValorantCurrentRoundStatePartialUpdate.getDefaultInstance();
    }

    @java.lang.Override
    public com.bragi.ValorantCurrentRoundStatePartialUpdate build() {
      com.bragi.ValorantCurrentRoundStatePartialUpdate result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.bragi.ValorantCurrentRoundStatePartialUpdate buildPartial() {
      com.bragi.ValorantCurrentRoundStatePartialUpdate result = new com.bragi.ValorantCurrentRoundStatePartialUpdate(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.bragi.ValorantCurrentRoundStatePartialUpdate result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(com.bragi.ValorantCurrentRoundStatePartialUpdate result) {
      result.updateCase_ = updateCase_;
      result.update_ = this.update_;
      if (updateCase_ == 1 &&
          roundInfoBuilder_ != null) {
        result.update_ = roundInfoBuilder_.build();
      }
      if (updateCase_ == 2 &&
          timeBuilder_ != null) {
        result.update_ = timeBuilder_.build();
      }
      if (updateCase_ == 3 &&
          spikeBuilder_ != null) {
        result.update_ = spikeBuilder_.build();
      }
      if (updateCase_ == 4 &&
          teamCurrentRoundStateBuilder_ != null) {
        result.update_ = teamCurrentRoundStateBuilder_.build();
      }
      if (updateCase_ == 5 &&
          teamCurrentRoundPartialUpdateBuilder_ != null) {
        result.update_ = teamCurrentRoundPartialUpdateBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.bragi.ValorantCurrentRoundStatePartialUpdate) {
        return mergeFrom((com.bragi.ValorantCurrentRoundStatePartialUpdate)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.bragi.ValorantCurrentRoundStatePartialUpdate other) {
      if (other == com.bragi.ValorantCurrentRoundStatePartialUpdate.getDefaultInstance()) return this;
      switch (other.getUpdateCase()) {
        case ROUND_INFO: {
          mergeRoundInfo(other.getRoundInfo());
          break;
        }
        case TIME: {
          mergeTime(other.getTime());
          break;
        }
        case SPIKE: {
          mergeSpike(other.getSpike());
          break;
        }
        case TEAM_CURRENT_ROUND_STATE: {
          mergeTeamCurrentRoundState(other.getTeamCurrentRoundState());
          break;
        }
        case TEAM_CURRENT_ROUND_PARTIAL_UPDATE: {
          mergeTeamCurrentRoundPartialUpdate(other.getTeamCurrentRoundPartialUpdate());
          break;
        }
        case UPDATE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getRoundInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              updateCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getTimeFieldBuilder().getBuilder(),
                  extensionRegistry);
              updateCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getSpikeFieldBuilder().getBuilder(),
                  extensionRegistry);
              updateCase_ = 3;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getTeamCurrentRoundStateFieldBuilder().getBuilder(),
                  extensionRegistry);
              updateCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getTeamCurrentRoundPartialUpdateFieldBuilder().getBuilder(),
                  extensionRegistry);
              updateCase_ = 5;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int updateCase_ = 0;
    private java.lang.Object update_;
    public UpdateCase
        getUpdateCase() {
      return UpdateCase.forNumber(
          updateCase_);
    }

    public Builder clearUpdate() {
      updateCase_ = 0;
      update_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.ValorantRoundInfoState, com.bragi.ValorantRoundInfoState.Builder, com.bragi.ValorantRoundInfoStateOrBuilder> roundInfoBuilder_;
    /**
     * <pre>
     * Replaces "round_info" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantRoundInfoState round_info = 1 [json_name = "roundInfo"];</code>
     * @return Whether the roundInfo field is set.
     */
    @java.lang.Override
    public boolean hasRoundInfo() {
      return updateCase_ == 1;
    }
    /**
     * <pre>
     * Replaces "round_info" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantRoundInfoState round_info = 1 [json_name = "roundInfo"];</code>
     * @return The roundInfo.
     */
    @java.lang.Override
    public com.bragi.ValorantRoundInfoState getRoundInfo() {
      if (roundInfoBuilder_ == null) {
        if (updateCase_ == 1) {
          return (com.bragi.ValorantRoundInfoState) update_;
        }
        return com.bragi.ValorantRoundInfoState.getDefaultInstance();
      } else {
        if (updateCase_ == 1) {
          return roundInfoBuilder_.getMessage();
        }
        return com.bragi.ValorantRoundInfoState.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Replaces "round_info" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantRoundInfoState round_info = 1 [json_name = "roundInfo"];</code>
     */
    public Builder setRoundInfo(com.bragi.ValorantRoundInfoState value) {
      if (roundInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        update_ = value;
        onChanged();
      } else {
        roundInfoBuilder_.setMessage(value);
      }
      updateCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Replaces "round_info" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantRoundInfoState round_info = 1 [json_name = "roundInfo"];</code>
     */
    public Builder setRoundInfo(
        com.bragi.ValorantRoundInfoState.Builder builderForValue) {
      if (roundInfoBuilder_ == null) {
        update_ = builderForValue.build();
        onChanged();
      } else {
        roundInfoBuilder_.setMessage(builderForValue.build());
      }
      updateCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Replaces "round_info" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantRoundInfoState round_info = 1 [json_name = "roundInfo"];</code>
     */
    public Builder mergeRoundInfo(com.bragi.ValorantRoundInfoState value) {
      if (roundInfoBuilder_ == null) {
        if (updateCase_ == 1 &&
            update_ != com.bragi.ValorantRoundInfoState.getDefaultInstance()) {
          update_ = com.bragi.ValorantRoundInfoState.newBuilder((com.bragi.ValorantRoundInfoState) update_)
              .mergeFrom(value).buildPartial();
        } else {
          update_ = value;
        }
        onChanged();
      } else {
        if (updateCase_ == 1) {
          roundInfoBuilder_.mergeFrom(value);
        } else {
          roundInfoBuilder_.setMessage(value);
        }
      }
      updateCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Replaces "round_info" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantRoundInfoState round_info = 1 [json_name = "roundInfo"];</code>
     */
    public Builder clearRoundInfo() {
      if (roundInfoBuilder_ == null) {
        if (updateCase_ == 1) {
          updateCase_ = 0;
          update_ = null;
          onChanged();
        }
      } else {
        if (updateCase_ == 1) {
          updateCase_ = 0;
          update_ = null;
        }
        roundInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Replaces "round_info" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantRoundInfoState round_info = 1 [json_name = "roundInfo"];</code>
     */
    public com.bragi.ValorantRoundInfoState.Builder getRoundInfoBuilder() {
      return getRoundInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Replaces "round_info" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantRoundInfoState round_info = 1 [json_name = "roundInfo"];</code>
     */
    @java.lang.Override
    public com.bragi.ValorantRoundInfoStateOrBuilder getRoundInfoOrBuilder() {
      if ((updateCase_ == 1) && (roundInfoBuilder_ != null)) {
        return roundInfoBuilder_.getMessageOrBuilder();
      } else {
        if (updateCase_ == 1) {
          return (com.bragi.ValorantRoundInfoState) update_;
        }
        return com.bragi.ValorantRoundInfoState.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Replaces "round_info" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantRoundInfoState round_info = 1 [json_name = "roundInfo"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.ValorantRoundInfoState, com.bragi.ValorantRoundInfoState.Builder, com.bragi.ValorantRoundInfoStateOrBuilder> 
        getRoundInfoFieldBuilder() {
      if (roundInfoBuilder_ == null) {
        if (!(updateCase_ == 1)) {
          update_ = com.bragi.ValorantRoundInfoState.getDefaultInstance();
        }
        roundInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.ValorantRoundInfoState, com.bragi.ValorantRoundInfoState.Builder, com.bragi.ValorantRoundInfoStateOrBuilder>(
                (com.bragi.ValorantRoundInfoState) update_,
                getParentForChildren(),
                isClean());
        update_ = null;
      }
      updateCase_ = 1;
      onChanged();
      return roundInfoBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.ValorantCurrentRoundTimeState, com.bragi.ValorantCurrentRoundTimeState.Builder, com.bragi.ValorantCurrentRoundTimeStateOrBuilder> timeBuilder_;
    /**
     * <pre>
     * Replaces "time" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantCurrentRoundTimeState time = 2 [json_name = "time"];</code>
     * @return Whether the time field is set.
     */
    @java.lang.Override
    public boolean hasTime() {
      return updateCase_ == 2;
    }
    /**
     * <pre>
     * Replaces "time" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantCurrentRoundTimeState time = 2 [json_name = "time"];</code>
     * @return The time.
     */
    @java.lang.Override
    public com.bragi.ValorantCurrentRoundTimeState getTime() {
      if (timeBuilder_ == null) {
        if (updateCase_ == 2) {
          return (com.bragi.ValorantCurrentRoundTimeState) update_;
        }
        return com.bragi.ValorantCurrentRoundTimeState.getDefaultInstance();
      } else {
        if (updateCase_ == 2) {
          return timeBuilder_.getMessage();
        }
        return com.bragi.ValorantCurrentRoundTimeState.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Replaces "time" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantCurrentRoundTimeState time = 2 [json_name = "time"];</code>
     */
    public Builder setTime(com.bragi.ValorantCurrentRoundTimeState value) {
      if (timeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        update_ = value;
        onChanged();
      } else {
        timeBuilder_.setMessage(value);
      }
      updateCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Replaces "time" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantCurrentRoundTimeState time = 2 [json_name = "time"];</code>
     */
    public Builder setTime(
        com.bragi.ValorantCurrentRoundTimeState.Builder builderForValue) {
      if (timeBuilder_ == null) {
        update_ = builderForValue.build();
        onChanged();
      } else {
        timeBuilder_.setMessage(builderForValue.build());
      }
      updateCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Replaces "time" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantCurrentRoundTimeState time = 2 [json_name = "time"];</code>
     */
    public Builder mergeTime(com.bragi.ValorantCurrentRoundTimeState value) {
      if (timeBuilder_ == null) {
        if (updateCase_ == 2 &&
            update_ != com.bragi.ValorantCurrentRoundTimeState.getDefaultInstance()) {
          update_ = com.bragi.ValorantCurrentRoundTimeState.newBuilder((com.bragi.ValorantCurrentRoundTimeState) update_)
              .mergeFrom(value).buildPartial();
        } else {
          update_ = value;
        }
        onChanged();
      } else {
        if (updateCase_ == 2) {
          timeBuilder_.mergeFrom(value);
        } else {
          timeBuilder_.setMessage(value);
        }
      }
      updateCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Replaces "time" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantCurrentRoundTimeState time = 2 [json_name = "time"];</code>
     */
    public Builder clearTime() {
      if (timeBuilder_ == null) {
        if (updateCase_ == 2) {
          updateCase_ = 0;
          update_ = null;
          onChanged();
        }
      } else {
        if (updateCase_ == 2) {
          updateCase_ = 0;
          update_ = null;
        }
        timeBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Replaces "time" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantCurrentRoundTimeState time = 2 [json_name = "time"];</code>
     */
    public com.bragi.ValorantCurrentRoundTimeState.Builder getTimeBuilder() {
      return getTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Replaces "time" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantCurrentRoundTimeState time = 2 [json_name = "time"];</code>
     */
    @java.lang.Override
    public com.bragi.ValorantCurrentRoundTimeStateOrBuilder getTimeOrBuilder() {
      if ((updateCase_ == 2) && (timeBuilder_ != null)) {
        return timeBuilder_.getMessageOrBuilder();
      } else {
        if (updateCase_ == 2) {
          return (com.bragi.ValorantCurrentRoundTimeState) update_;
        }
        return com.bragi.ValorantCurrentRoundTimeState.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Replaces "time" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantCurrentRoundTimeState time = 2 [json_name = "time"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.ValorantCurrentRoundTimeState, com.bragi.ValorantCurrentRoundTimeState.Builder, com.bragi.ValorantCurrentRoundTimeStateOrBuilder> 
        getTimeFieldBuilder() {
      if (timeBuilder_ == null) {
        if (!(updateCase_ == 2)) {
          update_ = com.bragi.ValorantCurrentRoundTimeState.getDefaultInstance();
        }
        timeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.ValorantCurrentRoundTimeState, com.bragi.ValorantCurrentRoundTimeState.Builder, com.bragi.ValorantCurrentRoundTimeStateOrBuilder>(
                (com.bragi.ValorantCurrentRoundTimeState) update_,
                getParentForChildren(),
                isClean());
        update_ = null;
      }
      updateCase_ = 2;
      onChanged();
      return timeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.ValorantCurrentRoundTeamSpikeState, com.bragi.ValorantCurrentRoundTeamSpikeState.Builder, com.bragi.ValorantCurrentRoundTeamSpikeStateOrBuilder> spikeBuilder_;
    /**
     * <pre>
     * Replaces "spike" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantCurrentRoundTeamSpikeState spike = 3 [json_name = "spike"];</code>
     * @return Whether the spike field is set.
     */
    @java.lang.Override
    public boolean hasSpike() {
      return updateCase_ == 3;
    }
    /**
     * <pre>
     * Replaces "spike" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantCurrentRoundTeamSpikeState spike = 3 [json_name = "spike"];</code>
     * @return The spike.
     */
    @java.lang.Override
    public com.bragi.ValorantCurrentRoundTeamSpikeState getSpike() {
      if (spikeBuilder_ == null) {
        if (updateCase_ == 3) {
          return (com.bragi.ValorantCurrentRoundTeamSpikeState) update_;
        }
        return com.bragi.ValorantCurrentRoundTeamSpikeState.getDefaultInstance();
      } else {
        if (updateCase_ == 3) {
          return spikeBuilder_.getMessage();
        }
        return com.bragi.ValorantCurrentRoundTeamSpikeState.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Replaces "spike" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantCurrentRoundTeamSpikeState spike = 3 [json_name = "spike"];</code>
     */
    public Builder setSpike(com.bragi.ValorantCurrentRoundTeamSpikeState value) {
      if (spikeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        update_ = value;
        onChanged();
      } else {
        spikeBuilder_.setMessage(value);
      }
      updateCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Replaces "spike" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantCurrentRoundTeamSpikeState spike = 3 [json_name = "spike"];</code>
     */
    public Builder setSpike(
        com.bragi.ValorantCurrentRoundTeamSpikeState.Builder builderForValue) {
      if (spikeBuilder_ == null) {
        update_ = builderForValue.build();
        onChanged();
      } else {
        spikeBuilder_.setMessage(builderForValue.build());
      }
      updateCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Replaces "spike" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantCurrentRoundTeamSpikeState spike = 3 [json_name = "spike"];</code>
     */
    public Builder mergeSpike(com.bragi.ValorantCurrentRoundTeamSpikeState value) {
      if (spikeBuilder_ == null) {
        if (updateCase_ == 3 &&
            update_ != com.bragi.ValorantCurrentRoundTeamSpikeState.getDefaultInstance()) {
          update_ = com.bragi.ValorantCurrentRoundTeamSpikeState.newBuilder((com.bragi.ValorantCurrentRoundTeamSpikeState) update_)
              .mergeFrom(value).buildPartial();
        } else {
          update_ = value;
        }
        onChanged();
      } else {
        if (updateCase_ == 3) {
          spikeBuilder_.mergeFrom(value);
        } else {
          spikeBuilder_.setMessage(value);
        }
      }
      updateCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Replaces "spike" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantCurrentRoundTeamSpikeState spike = 3 [json_name = "spike"];</code>
     */
    public Builder clearSpike() {
      if (spikeBuilder_ == null) {
        if (updateCase_ == 3) {
          updateCase_ = 0;
          update_ = null;
          onChanged();
        }
      } else {
        if (updateCase_ == 3) {
          updateCase_ = 0;
          update_ = null;
        }
        spikeBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Replaces "spike" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantCurrentRoundTeamSpikeState spike = 3 [json_name = "spike"];</code>
     */
    public com.bragi.ValorantCurrentRoundTeamSpikeState.Builder getSpikeBuilder() {
      return getSpikeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Replaces "spike" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantCurrentRoundTeamSpikeState spike = 3 [json_name = "spike"];</code>
     */
    @java.lang.Override
    public com.bragi.ValorantCurrentRoundTeamSpikeStateOrBuilder getSpikeOrBuilder() {
      if ((updateCase_ == 3) && (spikeBuilder_ != null)) {
        return spikeBuilder_.getMessageOrBuilder();
      } else {
        if (updateCase_ == 3) {
          return (com.bragi.ValorantCurrentRoundTeamSpikeState) update_;
        }
        return com.bragi.ValorantCurrentRoundTeamSpikeState.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Replaces "spike" property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantCurrentRoundTeamSpikeState spike = 3 [json_name = "spike"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.ValorantCurrentRoundTeamSpikeState, com.bragi.ValorantCurrentRoundTeamSpikeState.Builder, com.bragi.ValorantCurrentRoundTeamSpikeStateOrBuilder> 
        getSpikeFieldBuilder() {
      if (spikeBuilder_ == null) {
        if (!(updateCase_ == 3)) {
          update_ = com.bragi.ValorantCurrentRoundTeamSpikeState.getDefaultInstance();
        }
        spikeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.ValorantCurrentRoundTeamSpikeState, com.bragi.ValorantCurrentRoundTeamSpikeState.Builder, com.bragi.ValorantCurrentRoundTeamSpikeStateOrBuilder>(
                (com.bragi.ValorantCurrentRoundTeamSpikeState) update_,
                getParentForChildren(),
                isClean());
        update_ = null;
      }
      updateCase_ = 3;
      onChanged();
      return spikeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.ValorantTeamCurrentRoundState, com.bragi.ValorantTeamCurrentRoundState.Builder, com.bragi.ValorantTeamCurrentRoundStateOrBuilder> teamCurrentRoundStateBuilder_;
    /**
     * <pre>
     * Replaces whole value under given key in teams hash map property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantTeamCurrentRoundState team_current_round_state = 4 [json_name = "teamCurrentRoundState"];</code>
     * @return Whether the teamCurrentRoundState field is set.
     */
    @java.lang.Override
    public boolean hasTeamCurrentRoundState() {
      return updateCase_ == 4;
    }
    /**
     * <pre>
     * Replaces whole value under given key in teams hash map property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantTeamCurrentRoundState team_current_round_state = 4 [json_name = "teamCurrentRoundState"];</code>
     * @return The teamCurrentRoundState.
     */
    @java.lang.Override
    public com.bragi.ValorantTeamCurrentRoundState getTeamCurrentRoundState() {
      if (teamCurrentRoundStateBuilder_ == null) {
        if (updateCase_ == 4) {
          return (com.bragi.ValorantTeamCurrentRoundState) update_;
        }
        return com.bragi.ValorantTeamCurrentRoundState.getDefaultInstance();
      } else {
        if (updateCase_ == 4) {
          return teamCurrentRoundStateBuilder_.getMessage();
        }
        return com.bragi.ValorantTeamCurrentRoundState.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Replaces whole value under given key in teams hash map property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantTeamCurrentRoundState team_current_round_state = 4 [json_name = "teamCurrentRoundState"];</code>
     */
    public Builder setTeamCurrentRoundState(com.bragi.ValorantTeamCurrentRoundState value) {
      if (teamCurrentRoundStateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        update_ = value;
        onChanged();
      } else {
        teamCurrentRoundStateBuilder_.setMessage(value);
      }
      updateCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Replaces whole value under given key in teams hash map property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantTeamCurrentRoundState team_current_round_state = 4 [json_name = "teamCurrentRoundState"];</code>
     */
    public Builder setTeamCurrentRoundState(
        com.bragi.ValorantTeamCurrentRoundState.Builder builderForValue) {
      if (teamCurrentRoundStateBuilder_ == null) {
        update_ = builderForValue.build();
        onChanged();
      } else {
        teamCurrentRoundStateBuilder_.setMessage(builderForValue.build());
      }
      updateCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Replaces whole value under given key in teams hash map property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantTeamCurrentRoundState team_current_round_state = 4 [json_name = "teamCurrentRoundState"];</code>
     */
    public Builder mergeTeamCurrentRoundState(com.bragi.ValorantTeamCurrentRoundState value) {
      if (teamCurrentRoundStateBuilder_ == null) {
        if (updateCase_ == 4 &&
            update_ != com.bragi.ValorantTeamCurrentRoundState.getDefaultInstance()) {
          update_ = com.bragi.ValorantTeamCurrentRoundState.newBuilder((com.bragi.ValorantTeamCurrentRoundState) update_)
              .mergeFrom(value).buildPartial();
        } else {
          update_ = value;
        }
        onChanged();
      } else {
        if (updateCase_ == 4) {
          teamCurrentRoundStateBuilder_.mergeFrom(value);
        } else {
          teamCurrentRoundStateBuilder_.setMessage(value);
        }
      }
      updateCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Replaces whole value under given key in teams hash map property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantTeamCurrentRoundState team_current_round_state = 4 [json_name = "teamCurrentRoundState"];</code>
     */
    public Builder clearTeamCurrentRoundState() {
      if (teamCurrentRoundStateBuilder_ == null) {
        if (updateCase_ == 4) {
          updateCase_ = 0;
          update_ = null;
          onChanged();
        }
      } else {
        if (updateCase_ == 4) {
          updateCase_ = 0;
          update_ = null;
        }
        teamCurrentRoundStateBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Replaces whole value under given key in teams hash map property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantTeamCurrentRoundState team_current_round_state = 4 [json_name = "teamCurrentRoundState"];</code>
     */
    public com.bragi.ValorantTeamCurrentRoundState.Builder getTeamCurrentRoundStateBuilder() {
      return getTeamCurrentRoundStateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Replaces whole value under given key in teams hash map property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantTeamCurrentRoundState team_current_round_state = 4 [json_name = "teamCurrentRoundState"];</code>
     */
    @java.lang.Override
    public com.bragi.ValorantTeamCurrentRoundStateOrBuilder getTeamCurrentRoundStateOrBuilder() {
      if ((updateCase_ == 4) && (teamCurrentRoundStateBuilder_ != null)) {
        return teamCurrentRoundStateBuilder_.getMessageOrBuilder();
      } else {
        if (updateCase_ == 4) {
          return (com.bragi.ValorantTeamCurrentRoundState) update_;
        }
        return com.bragi.ValorantTeamCurrentRoundState.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Replaces whole value under given key in teams hash map property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantTeamCurrentRoundState team_current_round_state = 4 [json_name = "teamCurrentRoundState"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.ValorantTeamCurrentRoundState, com.bragi.ValorantTeamCurrentRoundState.Builder, com.bragi.ValorantTeamCurrentRoundStateOrBuilder> 
        getTeamCurrentRoundStateFieldBuilder() {
      if (teamCurrentRoundStateBuilder_ == null) {
        if (!(updateCase_ == 4)) {
          update_ = com.bragi.ValorantTeamCurrentRoundState.getDefaultInstance();
        }
        teamCurrentRoundStateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.ValorantTeamCurrentRoundState, com.bragi.ValorantTeamCurrentRoundState.Builder, com.bragi.ValorantTeamCurrentRoundStateOrBuilder>(
                (com.bragi.ValorantTeamCurrentRoundState) update_,
                getParentForChildren(),
                isClean());
        update_ = null;
      }
      updateCase_ = 4;
      onChanged();
      return teamCurrentRoundStateBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.ValorantTeamCurrentRoundStatePartialUpdate, com.bragi.ValorantTeamCurrentRoundStatePartialUpdate.Builder, com.bragi.ValorantTeamCurrentRoundStatePartialUpdateOrBuilder> teamCurrentRoundPartialUpdateBuilder_;
    /**
     * <pre>
     * Apply partial update on value under given key in teams hash map property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantTeamCurrentRoundStatePartialUpdate team_current_round_partial_update = 5 [json_name = "teamCurrentRoundPartialUpdate"];</code>
     * @return Whether the teamCurrentRoundPartialUpdate field is set.
     */
    @java.lang.Override
    public boolean hasTeamCurrentRoundPartialUpdate() {
      return updateCase_ == 5;
    }
    /**
     * <pre>
     * Apply partial update on value under given key in teams hash map property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantTeamCurrentRoundStatePartialUpdate team_current_round_partial_update = 5 [json_name = "teamCurrentRoundPartialUpdate"];</code>
     * @return The teamCurrentRoundPartialUpdate.
     */
    @java.lang.Override
    public com.bragi.ValorantTeamCurrentRoundStatePartialUpdate getTeamCurrentRoundPartialUpdate() {
      if (teamCurrentRoundPartialUpdateBuilder_ == null) {
        if (updateCase_ == 5) {
          return (com.bragi.ValorantTeamCurrentRoundStatePartialUpdate) update_;
        }
        return com.bragi.ValorantTeamCurrentRoundStatePartialUpdate.getDefaultInstance();
      } else {
        if (updateCase_ == 5) {
          return teamCurrentRoundPartialUpdateBuilder_.getMessage();
        }
        return com.bragi.ValorantTeamCurrentRoundStatePartialUpdate.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Apply partial update on value under given key in teams hash map property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantTeamCurrentRoundStatePartialUpdate team_current_round_partial_update = 5 [json_name = "teamCurrentRoundPartialUpdate"];</code>
     */
    public Builder setTeamCurrentRoundPartialUpdate(com.bragi.ValorantTeamCurrentRoundStatePartialUpdate value) {
      if (teamCurrentRoundPartialUpdateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        update_ = value;
        onChanged();
      } else {
        teamCurrentRoundPartialUpdateBuilder_.setMessage(value);
      }
      updateCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Apply partial update on value under given key in teams hash map property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantTeamCurrentRoundStatePartialUpdate team_current_round_partial_update = 5 [json_name = "teamCurrentRoundPartialUpdate"];</code>
     */
    public Builder setTeamCurrentRoundPartialUpdate(
        com.bragi.ValorantTeamCurrentRoundStatePartialUpdate.Builder builderForValue) {
      if (teamCurrentRoundPartialUpdateBuilder_ == null) {
        update_ = builderForValue.build();
        onChanged();
      } else {
        teamCurrentRoundPartialUpdateBuilder_.setMessage(builderForValue.build());
      }
      updateCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Apply partial update on value under given key in teams hash map property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantTeamCurrentRoundStatePartialUpdate team_current_round_partial_update = 5 [json_name = "teamCurrentRoundPartialUpdate"];</code>
     */
    public Builder mergeTeamCurrentRoundPartialUpdate(com.bragi.ValorantTeamCurrentRoundStatePartialUpdate value) {
      if (teamCurrentRoundPartialUpdateBuilder_ == null) {
        if (updateCase_ == 5 &&
            update_ != com.bragi.ValorantTeamCurrentRoundStatePartialUpdate.getDefaultInstance()) {
          update_ = com.bragi.ValorantTeamCurrentRoundStatePartialUpdate.newBuilder((com.bragi.ValorantTeamCurrentRoundStatePartialUpdate) update_)
              .mergeFrom(value).buildPartial();
        } else {
          update_ = value;
        }
        onChanged();
      } else {
        if (updateCase_ == 5) {
          teamCurrentRoundPartialUpdateBuilder_.mergeFrom(value);
        } else {
          teamCurrentRoundPartialUpdateBuilder_.setMessage(value);
        }
      }
      updateCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Apply partial update on value under given key in teams hash map property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantTeamCurrentRoundStatePartialUpdate team_current_round_partial_update = 5 [json_name = "teamCurrentRoundPartialUpdate"];</code>
     */
    public Builder clearTeamCurrentRoundPartialUpdate() {
      if (teamCurrentRoundPartialUpdateBuilder_ == null) {
        if (updateCase_ == 5) {
          updateCase_ = 0;
          update_ = null;
          onChanged();
        }
      } else {
        if (updateCase_ == 5) {
          updateCase_ = 0;
          update_ = null;
        }
        teamCurrentRoundPartialUpdateBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Apply partial update on value under given key in teams hash map property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantTeamCurrentRoundStatePartialUpdate team_current_round_partial_update = 5 [json_name = "teamCurrentRoundPartialUpdate"];</code>
     */
    public com.bragi.ValorantTeamCurrentRoundStatePartialUpdate.Builder getTeamCurrentRoundPartialUpdateBuilder() {
      return getTeamCurrentRoundPartialUpdateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Apply partial update on value under given key in teams hash map property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantTeamCurrentRoundStatePartialUpdate team_current_round_partial_update = 5 [json_name = "teamCurrentRoundPartialUpdate"];</code>
     */
    @java.lang.Override
    public com.bragi.ValorantTeamCurrentRoundStatePartialUpdateOrBuilder getTeamCurrentRoundPartialUpdateOrBuilder() {
      if ((updateCase_ == 5) && (teamCurrentRoundPartialUpdateBuilder_ != null)) {
        return teamCurrentRoundPartialUpdateBuilder_.getMessageOrBuilder();
      } else {
        if (updateCase_ == 5) {
          return (com.bragi.ValorantTeamCurrentRoundStatePartialUpdate) update_;
        }
        return com.bragi.ValorantTeamCurrentRoundStatePartialUpdate.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Apply partial update on value under given key in teams hash map property in ValorantCurrentRoundState.
     * </pre>
     *
     * <code>.bragi.ValorantTeamCurrentRoundStatePartialUpdate team_current_round_partial_update = 5 [json_name = "teamCurrentRoundPartialUpdate"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bragi.ValorantTeamCurrentRoundStatePartialUpdate, com.bragi.ValorantTeamCurrentRoundStatePartialUpdate.Builder, com.bragi.ValorantTeamCurrentRoundStatePartialUpdateOrBuilder> 
        getTeamCurrentRoundPartialUpdateFieldBuilder() {
      if (teamCurrentRoundPartialUpdateBuilder_ == null) {
        if (!(updateCase_ == 5)) {
          update_ = com.bragi.ValorantTeamCurrentRoundStatePartialUpdate.getDefaultInstance();
        }
        teamCurrentRoundPartialUpdateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bragi.ValorantTeamCurrentRoundStatePartialUpdate, com.bragi.ValorantTeamCurrentRoundStatePartialUpdate.Builder, com.bragi.ValorantTeamCurrentRoundStatePartialUpdateOrBuilder>(
                (com.bragi.ValorantTeamCurrentRoundStatePartialUpdate) update_,
                getParentForChildren(),
                isClean());
        update_ = null;
      }
      updateCase_ = 5;
      onChanged();
      return teamCurrentRoundPartialUpdateBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:bragi.ValorantCurrentRoundStatePartialUpdate)
  }

  // @@protoc_insertion_point(class_scope:bragi.ValorantCurrentRoundStatePartialUpdate)
  private static final com.bragi.ValorantCurrentRoundStatePartialUpdate DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.bragi.ValorantCurrentRoundStatePartialUpdate();
  }

  public static com.bragi.ValorantCurrentRoundStatePartialUpdate getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ValorantCurrentRoundStatePartialUpdate>
      PARSER = new com.google.protobuf.AbstractParser<ValorantCurrentRoundStatePartialUpdate>() {
    @java.lang.Override
    public ValorantCurrentRoundStatePartialUpdate parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ValorantCurrentRoundStatePartialUpdate> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ValorantCurrentRoundStatePartialUpdate> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.bragi.ValorantCurrentRoundStatePartialUpdate getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

