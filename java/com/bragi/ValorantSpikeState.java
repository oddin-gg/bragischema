// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bragi/valorant.proto
// Protobuf Java Version: 4.29.3

package com.bragi;

/**
 * Protobuf enum {@code bragi.ValorantSpikeState}
 */
public enum ValorantSpikeState
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>VALORANT_SPIKE_STATE_UNSPECIFIED = 0;</code>
   */
  VALORANT_SPIKE_STATE_UNSPECIFIED(0),
  /**
   * <code>VALORANT_SPIKE_STATE_CARRIED = 1;</code>
   */
  VALORANT_SPIKE_STATE_CARRIED(1),
  /**
   * <code>VALORANT_SPIKE_STATE_DROPPED = 2;</code>
   */
  VALORANT_SPIKE_STATE_DROPPED(2),
  /**
   * <code>VALORANT_SPIKE_STATE_PLANTING = 3;</code>
   */
  VALORANT_SPIKE_STATE_PLANTING(3),
  /**
   * <code>VALORANT_SPIKE_STATE_DEFUSING = 4;</code>
   */
  VALORANT_SPIKE_STATE_DEFUSING(4),
  /**
   * <code>VALORANT_SPIKE_STATE_PLANTED = 5;</code>
   */
  VALORANT_SPIKE_STATE_PLANTED(5),
  /**
   * <code>VALORANT_SPIKE_STATE_EXPLODED = 6;</code>
   */
  VALORANT_SPIKE_STATE_EXPLODED(6),
  /**
   * <code>VALORANT_SPIKE_STATE_DEFUSED = 7;</code>
   */
  VALORANT_SPIKE_STATE_DEFUSED(7),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      ValorantSpikeState.class.getName());
  }
  /**
   * <code>VALORANT_SPIKE_STATE_UNSPECIFIED = 0;</code>
   */
  public static final int VALORANT_SPIKE_STATE_UNSPECIFIED_VALUE = 0;
  /**
   * <code>VALORANT_SPIKE_STATE_CARRIED = 1;</code>
   */
  public static final int VALORANT_SPIKE_STATE_CARRIED_VALUE = 1;
  /**
   * <code>VALORANT_SPIKE_STATE_DROPPED = 2;</code>
   */
  public static final int VALORANT_SPIKE_STATE_DROPPED_VALUE = 2;
  /**
   * <code>VALORANT_SPIKE_STATE_PLANTING = 3;</code>
   */
  public static final int VALORANT_SPIKE_STATE_PLANTING_VALUE = 3;
  /**
   * <code>VALORANT_SPIKE_STATE_DEFUSING = 4;</code>
   */
  public static final int VALORANT_SPIKE_STATE_DEFUSING_VALUE = 4;
  /**
   * <code>VALORANT_SPIKE_STATE_PLANTED = 5;</code>
   */
  public static final int VALORANT_SPIKE_STATE_PLANTED_VALUE = 5;
  /**
   * <code>VALORANT_SPIKE_STATE_EXPLODED = 6;</code>
   */
  public static final int VALORANT_SPIKE_STATE_EXPLODED_VALUE = 6;
  /**
   * <code>VALORANT_SPIKE_STATE_DEFUSED = 7;</code>
   */
  public static final int VALORANT_SPIKE_STATE_DEFUSED_VALUE = 7;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ValorantSpikeState valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ValorantSpikeState forNumber(int value) {
    switch (value) {
      case 0: return VALORANT_SPIKE_STATE_UNSPECIFIED;
      case 1: return VALORANT_SPIKE_STATE_CARRIED;
      case 2: return VALORANT_SPIKE_STATE_DROPPED;
      case 3: return VALORANT_SPIKE_STATE_PLANTING;
      case 4: return VALORANT_SPIKE_STATE_DEFUSING;
      case 5: return VALORANT_SPIKE_STATE_PLANTED;
      case 6: return VALORANT_SPIKE_STATE_EXPLODED;
      case 7: return VALORANT_SPIKE_STATE_DEFUSED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ValorantSpikeState>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ValorantSpikeState> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ValorantSpikeState>() {
          public ValorantSpikeState findValueByNumber(int number) {
            return ValorantSpikeState.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.bragi.ValorantProto.getDescriptor().getEnumTypes().get(4);
  }

  private static final ValorantSpikeState[] VALUES = values();

  public static ValorantSpikeState valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ValorantSpikeState(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:bragi.ValorantSpikeState)
}

