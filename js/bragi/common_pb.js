// source: bragi/common.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.bragi.Announcement', null, global);
goog.exportSymbol('proto.bragi.Announcement.Payload', null, global);
goog.exportSymbol('proto.bragi.Announcement.Payload.PayloadCase', null, global);
goog.exportSymbol('proto.bragi.AnnouncementUpdate', null, global);
goog.exportSymbol('proto.bragi.BestOfType', null, global);
goog.exportSymbol('proto.bragi.ControlAnnouncement', null, global);
goog.exportSymbol('proto.bragi.ControlAnnouncement.ControlAnnouncementType', null, global);
goog.exportSymbol('proto.bragi.ControlErrorAnnouncement', null, global);
goog.exportSymbol('proto.bragi.ControlErrorAnnouncement.ControlErrorAnnouncementType', null, global);
goog.exportSymbol('proto.bragi.DataStatus', null, global);
goog.exportSymbol('proto.bragi.Match', null, global);
goog.exportSymbol('proto.bragi.MatchStatusType', null, global);
goog.exportSymbol('proto.bragi.Sport', null, global);
goog.exportSymbol('proto.bragi.Team', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.AnnouncementUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.AnnouncementUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.AnnouncementUpdate.displayName = 'proto.bragi.AnnouncementUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.Announcement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.Announcement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.Announcement.displayName = 'proto.bragi.Announcement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.Announcement.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.Announcement.Payload.oneofGroups_);
};
goog.inherits(proto.bragi.Announcement.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.Announcement.Payload.displayName = 'proto.bragi.Announcement.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.ControlAnnouncement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.ControlAnnouncement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.ControlAnnouncement.displayName = 'proto.bragi.ControlAnnouncement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.ControlErrorAnnouncement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.ControlErrorAnnouncement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.ControlErrorAnnouncement.displayName = 'proto.bragi.ControlErrorAnnouncement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.Match = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.Match, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.Match.displayName = 'proto.bragi.Match';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.Team = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.Team, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.Team.displayName = 'proto.bragi.Team';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.AnnouncementUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.AnnouncementUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.AnnouncementUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.AnnouncementUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.bragi.Announcement.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.AnnouncementUpdate}
 */
proto.bragi.AnnouncementUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.AnnouncementUpdate;
  return proto.bragi.AnnouncementUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.AnnouncementUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.AnnouncementUpdate}
 */
proto.bragi.AnnouncementUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatchUrn(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 4:
      var value = new proto.bragi.Announcement;
      reader.readMessage(value,proto.bragi.Announcement.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.AnnouncementUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.AnnouncementUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.AnnouncementUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.AnnouncementUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bragi.Announcement.serializeBinaryToWriter
    );
  }
};


/**
 * optional string match_urn = 1;
 * @return {string}
 */
proto.bragi.AnnouncementUpdate.prototype.getMatchUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.AnnouncementUpdate} returns this
 */
proto.bragi.AnnouncementUpdate.prototype.setMatchUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 sequence = 2;
 * @return {number}
 */
proto.bragi.AnnouncementUpdate.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.AnnouncementUpdate} returns this
 */
proto.bragi.AnnouncementUpdate.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.bragi.AnnouncementUpdate.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.bragi.AnnouncementUpdate} returns this
*/
proto.bragi.AnnouncementUpdate.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.AnnouncementUpdate} returns this
 */
proto.bragi.AnnouncementUpdate.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.AnnouncementUpdate.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Announcement payload = 4;
 * @return {?proto.bragi.Announcement}
 */
proto.bragi.AnnouncementUpdate.prototype.getPayload = function() {
  return /** @type{?proto.bragi.Announcement} */ (
    jspb.Message.getWrapperField(this, proto.bragi.Announcement, 4));
};


/**
 * @param {?proto.bragi.Announcement|undefined} value
 * @return {!proto.bragi.AnnouncementUpdate} returns this
*/
proto.bragi.AnnouncementUpdate.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.AnnouncementUpdate} returns this
 */
proto.bragi.AnnouncementUpdate.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.AnnouncementUpdate.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.Announcement.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.Announcement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.Announcement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.Announcement.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.bragi.Announcement.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.Announcement}
 */
proto.bragi.Announcement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.Announcement;
  return proto.bragi.Announcement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.Announcement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.Announcement}
 */
proto.bragi.Announcement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 2:
      var value = new proto.bragi.Announcement.Payload;
      reader.readMessage(value,proto.bragi.Announcement.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.Announcement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.Announcement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.Announcement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.Announcement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.Announcement.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.Announcement.Payload.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.bragi.Announcement.Payload.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  CONTROL: 1,
  ERROR: 2
};

/**
 * @return {proto.bragi.Announcement.Payload.PayloadCase}
 */
proto.bragi.Announcement.Payload.prototype.getPayloadCase = function() {
  return /** @type {proto.bragi.Announcement.Payload.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.bragi.Announcement.Payload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.Announcement.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.Announcement.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.Announcement.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.Announcement.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    control: (f = msg.getControl()) && proto.bragi.ControlAnnouncement.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.bragi.ControlErrorAnnouncement.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.Announcement.Payload}
 */
proto.bragi.Announcement.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.Announcement.Payload;
  return proto.bragi.Announcement.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.Announcement.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.Announcement.Payload}
 */
proto.bragi.Announcement.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.ControlAnnouncement;
      reader.readMessage(value,proto.bragi.ControlAnnouncement.deserializeBinaryFromReader);
      msg.setControl(value);
      break;
    case 2:
      var value = new proto.bragi.ControlErrorAnnouncement;
      reader.readMessage(value,proto.bragi.ControlErrorAnnouncement.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.Announcement.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.Announcement.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.Announcement.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.Announcement.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getControl();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.ControlAnnouncement.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.ControlErrorAnnouncement.serializeBinaryToWriter
    );
  }
};


/**
 * optional ControlAnnouncement control = 1;
 * @return {?proto.bragi.ControlAnnouncement}
 */
proto.bragi.Announcement.Payload.prototype.getControl = function() {
  return /** @type{?proto.bragi.ControlAnnouncement} */ (
    jspb.Message.getWrapperField(this, proto.bragi.ControlAnnouncement, 1));
};


/**
 * @param {?proto.bragi.ControlAnnouncement|undefined} value
 * @return {!proto.bragi.Announcement.Payload} returns this
*/
proto.bragi.Announcement.Payload.prototype.setControl = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.Announcement.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.Announcement.Payload} returns this
 */
proto.bragi.Announcement.Payload.prototype.clearControl = function() {
  return this.setControl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.Announcement.Payload.prototype.hasControl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ControlErrorAnnouncement error = 2;
 * @return {?proto.bragi.ControlErrorAnnouncement}
 */
proto.bragi.Announcement.Payload.prototype.getError = function() {
  return /** @type{?proto.bragi.ControlErrorAnnouncement} */ (
    jspb.Message.getWrapperField(this, proto.bragi.ControlErrorAnnouncement, 2));
};


/**
 * @param {?proto.bragi.ControlErrorAnnouncement|undefined} value
 * @return {!proto.bragi.Announcement.Payload} returns this
*/
proto.bragi.Announcement.Payload.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.Announcement.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.Announcement.Payload} returns this
 */
proto.bragi.Announcement.Payload.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.Announcement.Payload.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.bragi.Announcement.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.bragi.Announcement} returns this
*/
proto.bragi.Announcement.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.Announcement} returns this
 */
proto.bragi.Announcement.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.Announcement.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Payload payload = 2;
 * @return {?proto.bragi.Announcement.Payload}
 */
proto.bragi.Announcement.prototype.getPayload = function() {
  return /** @type{?proto.bragi.Announcement.Payload} */ (
    jspb.Message.getWrapperField(this, proto.bragi.Announcement.Payload, 2));
};


/**
 * @param {?proto.bragi.Announcement.Payload|undefined} value
 * @return {!proto.bragi.Announcement} returns this
*/
proto.bragi.Announcement.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.Announcement} returns this
 */
proto.bragi.Announcement.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.Announcement.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.ControlAnnouncement.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.ControlAnnouncement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.ControlAnnouncement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.ControlAnnouncement.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.ControlAnnouncement}
 */
proto.bragi.ControlAnnouncement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.ControlAnnouncement;
  return proto.bragi.ControlAnnouncement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.ControlAnnouncement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.ControlAnnouncement}
 */
proto.bragi.ControlAnnouncement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.bragi.ControlAnnouncement.ControlAnnouncementType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.ControlAnnouncement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.ControlAnnouncement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.ControlAnnouncement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.ControlAnnouncement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bragi.ControlAnnouncement.ControlAnnouncementType = {
  CONTROL_ANNOUNCEMENT_TYPE_UNSPECIFIED: 0
};

/**
 * optional ControlAnnouncementType type = 1;
 * @return {!proto.bragi.ControlAnnouncement.ControlAnnouncementType}
 */
proto.bragi.ControlAnnouncement.prototype.getType = function() {
  return /** @type {!proto.bragi.ControlAnnouncement.ControlAnnouncementType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.bragi.ControlAnnouncement.ControlAnnouncementType} value
 * @return {!proto.bragi.ControlAnnouncement} returns this
 */
proto.bragi.ControlAnnouncement.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.bragi.ControlAnnouncement.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.ControlAnnouncement} returns this
 */
proto.bragi.ControlAnnouncement.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.bragi.ControlAnnouncement} returns this
 */
proto.bragi.ControlAnnouncement.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.ControlAnnouncement.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.ControlErrorAnnouncement.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.ControlErrorAnnouncement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.ControlErrorAnnouncement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.ControlErrorAnnouncement.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.ControlErrorAnnouncement}
 */
proto.bragi.ControlErrorAnnouncement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.ControlErrorAnnouncement;
  return proto.bragi.ControlErrorAnnouncement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.ControlErrorAnnouncement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.ControlErrorAnnouncement}
 */
proto.bragi.ControlErrorAnnouncement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.bragi.ControlErrorAnnouncement.ControlErrorAnnouncementType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.ControlErrorAnnouncement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.ControlErrorAnnouncement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.ControlErrorAnnouncement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.ControlErrorAnnouncement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bragi.ControlErrorAnnouncement.ControlErrorAnnouncementType = {
  CONTROL_ERROR_ANNOUNCEMENT_TYPE_UNSPECIFIED: 0
};

/**
 * optional ControlErrorAnnouncementType type = 1;
 * @return {!proto.bragi.ControlErrorAnnouncement.ControlErrorAnnouncementType}
 */
proto.bragi.ControlErrorAnnouncement.prototype.getType = function() {
  return /** @type {!proto.bragi.ControlErrorAnnouncement.ControlErrorAnnouncementType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.bragi.ControlErrorAnnouncement.ControlErrorAnnouncementType} value
 * @return {!proto.bragi.ControlErrorAnnouncement} returns this
 */
proto.bragi.ControlErrorAnnouncement.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.bragi.ControlErrorAnnouncement.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.ControlErrorAnnouncement} returns this
 */
proto.bragi.ControlErrorAnnouncement.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.bragi.ControlErrorAnnouncement} returns this
 */
proto.bragi.ControlErrorAnnouncement.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.ControlErrorAnnouncement.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.Match.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.Match.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.Match} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.Match.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tournamentUrn: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sport: jspb.Message.getFieldWithDefault(msg, 3, 0),
    homeTeamUrn: jspb.Message.getFieldWithDefault(msg, 4, ""),
    awayTeamUrn: jspb.Message.getFieldWithDefault(msg, 5, ""),
    homeScore: jspb.Message.getFieldWithDefault(msg, 6, 0),
    awayScore: jspb.Message.getFieldWithDefault(msg, 7, 0),
    matchStatus: jspb.Message.getFieldWithDefault(msg, 8, 0),
    plannetStart: (f = msg.getPlannetStart()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.Match}
 */
proto.bragi.Match.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.Match;
  return proto.bragi.Match.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.Match} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.Match}
 */
proto.bragi.Match.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatchUrn(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTournamentUrn(value);
      break;
    case 3:
      var value = /** @type {!proto.bragi.Sport} */ (reader.readEnum());
      msg.setSport(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHomeTeamUrn(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAwayTeamUrn(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHomeScore(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAwayScore(value);
      break;
    case 8:
      var value = /** @type {!proto.bragi.MatchStatusType} */ (reader.readEnum());
      msg.setMatchStatus(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPlannetStart(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.Match.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.Match.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.Match} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.Match.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTournamentUrn();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSport();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getHomeTeamUrn();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAwayTeamUrn();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getHomeScore();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getAwayScore();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getMatchStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getPlannetStart();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string match_urn = 1;
 * @return {string}
 */
proto.bragi.Match.prototype.getMatchUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.Match} returns this
 */
proto.bragi.Match.prototype.setMatchUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string tournament_urn = 2;
 * @return {string}
 */
proto.bragi.Match.prototype.getTournamentUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.Match} returns this
 */
proto.bragi.Match.prototype.setTournamentUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Sport sport = 3;
 * @return {!proto.bragi.Sport}
 */
proto.bragi.Match.prototype.getSport = function() {
  return /** @type {!proto.bragi.Sport} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.bragi.Sport} value
 * @return {!proto.bragi.Match} returns this
 */
proto.bragi.Match.prototype.setSport = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string home_team_urn = 4;
 * @return {string}
 */
proto.bragi.Match.prototype.getHomeTeamUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.Match} returns this
 */
proto.bragi.Match.prototype.setHomeTeamUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string away_team_urn = 5;
 * @return {string}
 */
proto.bragi.Match.prototype.getAwayTeamUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.Match} returns this
 */
proto.bragi.Match.prototype.setAwayTeamUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint32 home_score = 6;
 * @return {number}
 */
proto.bragi.Match.prototype.getHomeScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.Match} returns this
 */
proto.bragi.Match.prototype.setHomeScore = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 away_score = 7;
 * @return {number}
 */
proto.bragi.Match.prototype.getAwayScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.Match} returns this
 */
proto.bragi.Match.prototype.setAwayScore = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional MatchStatusType match_status = 8;
 * @return {!proto.bragi.MatchStatusType}
 */
proto.bragi.Match.prototype.getMatchStatus = function() {
  return /** @type {!proto.bragi.MatchStatusType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.bragi.MatchStatusType} value
 * @return {!proto.bragi.Match} returns this
 */
proto.bragi.Match.prototype.setMatchStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional google.protobuf.Timestamp plannet_start = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.bragi.Match.prototype.getPlannetStart = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.bragi.Match} returns this
*/
proto.bragi.Match.prototype.setPlannetStart = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.Match} returns this
 */
proto.bragi.Match.prototype.clearPlannetStart = function() {
  return this.setPlannetStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.Match.prototype.hasPlannetStart = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.Team.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.Team.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.Team} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.Team.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    teamName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.Team}
 */
proto.bragi.Team.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.Team;
  return proto.bragi.Team.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.Team} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.Team}
 */
proto.bragi.Team.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamUrn(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.Team.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.Team.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.Team} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.Team.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTeamName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string team_urn = 1;
 * @return {string}
 */
proto.bragi.Team.prototype.getTeamUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.Team} returns this
 */
proto.bragi.Team.prototype.setTeamUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string team_name = 2;
 * @return {string}
 */
proto.bragi.Team.prototype.getTeamName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.Team} returns this
 */
proto.bragi.Team.prototype.setTeamName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.bragi.Sport = {
  SPORT_UNSPECIFIED: 0,
  SPORT_CS2: 1,
  SPORT_DOTA2: 2,
  SPORT_LOL: 3,
  SPORT_VALORANT: 4,
  SPORT_RUSH_SOCCER: 5,
  SPORT_RUSH_BASKETBALL: 6
};

/**
 * @enum {number}
 */
proto.bragi.BestOfType = {
  BEST_OF_TYPE_UNSPECIFIED: 0,
  BEST_OF_TYPE_BO1: 1,
  BEST_OF_TYPE_BO2: 2,
  BEST_OF_TYPE_BO3: 3,
  BEST_OF_TYPE_BO4: 4,
  BEST_OF_TYPE_BO5: 5,
  BEST_OF_TYPE_BO6: 6,
  BEST_OF_TYPE_BO7: 7
};

/**
 * @enum {number}
 */
proto.bragi.MatchStatusType = {
  MATCH_STATUS_TYPE_UNSPECIFIED: 0,
  MATCH_STATUS_TYPE_NOT_STARTED: 1,
  MATCH_STATUS_TYPE_LIVE: 2,
  MATCH_STATUS_TYPE_FINISHED: 3,
  MATCH_STATUS_TYPE_CANCELED: 4
};

/**
 * @enum {number}
 */
proto.bragi.DataStatus = {
  DATA_STATUS_UNSPECIFIED: 0,
  DATA_STATUS_DISABLED_DATA: 1,
  DATA_STATUS_CORRUPTED_DATA: 2,
  DATA_STATUS_VALID_DATA: 3
};

goog.object.extend(exports, proto.bragi);
