// source: bragi/lol.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var bragi_common_pb = require('../bragi/common_pb.js');
goog.object.extend(proto, bragi_common_pb);
goog.exportSymbol('proto.bragi.LolCurrentMapState', null, global);
goog.exportSymbol('proto.bragi.LolCurrentMapStatePartialUpdate', null, global);
goog.exportSymbol('proto.bragi.LolCurrentMapStatePartialUpdate.UpdateCase', null, global);
goog.exportSymbol('proto.bragi.LolCurrentMapTimeState', null, global);
goog.exportSymbol('proto.bragi.LolFaction', null, global);
goog.exportSymbol('proto.bragi.LolInhibitor', null, global);
goog.exportSymbol('proto.bragi.LolInhibitors', null, global);
goog.exportSymbol('proto.bragi.LolLane', null, global);
goog.exportSymbol('proto.bragi.LolMatchMessage', null, global);
goog.exportSymbol('proto.bragi.LolMatchMessage.Payload', null, global);
goog.exportSymbol('proto.bragi.LolMatchMessage.Payload.PayloadCase', null, global);
goog.exportSymbol('proto.bragi.LolMatchScoreState', null, global);
goog.exportSymbol('proto.bragi.LolMatchSnapshot', null, global);
goog.exportSymbol('proto.bragi.LolMatchState', null, global);
goog.exportSymbol('proto.bragi.LolMatchStatePartialUpdate', null, global);
goog.exportSymbol('proto.bragi.LolMatchStatePartialUpdate.UpdateCase', null, global);
goog.exportSymbol('proto.bragi.LolMatchStatePartialUpdates', null, global);
goog.exportSymbol('proto.bragi.LolMatchUpdate', null, global);
goog.exportSymbol('proto.bragi.LolMatchUpdate.Payload', null, global);
goog.exportSymbol('proto.bragi.LolMatchUpdate.Payload.PayloadCase', null, global);
goog.exportSymbol('proto.bragi.LolPlayerCurrentMapState', null, global);
goog.exportSymbol('proto.bragi.LolPlayerCurrentMapStatePartialUpdate', null, global);
goog.exportSymbol('proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload', null, global);
goog.exportSymbol('proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.PayloadCase', null, global);
goog.exportSymbol('proto.bragi.LolPlayerCurrentMapStatisticsState', null, global);
goog.exportSymbol('proto.bragi.LolPlayerCurrentMapTimersState', null, global);
goog.exportSymbol('proto.bragi.LolPlayerInfoState', null, global);
goog.exportSymbol('proto.bragi.LolPlayerPreviousMapState', null, global);
goog.exportSymbol('proto.bragi.LolPlayerStatisticsState', null, global);
goog.exportSymbol('proto.bragi.LolPosition', null, global);
goog.exportSymbol('proto.bragi.LolPreviousMapState', null, global);
goog.exportSymbol('proto.bragi.LolTeamCurrentMapState', null, global);
goog.exportSymbol('proto.bragi.LolTeamCurrentMapStatePartialUpdate', null, global);
goog.exportSymbol('proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload', null, global);
goog.exportSymbol('proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.PayloadCase', null, global);
goog.exportSymbol('proto.bragi.LolTeamCurrentMapStatisticsState', null, global);
goog.exportSymbol('proto.bragi.LolTeamPreviousMapState', null, global);
goog.exportSymbol('proto.bragi.LolTurret', null, global);
goog.exportSymbol('proto.bragi.LolTurretTier', null, global);
goog.exportSymbol('proto.bragi.LolTurrets', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolMatchMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolMatchMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolMatchMessage.displayName = 'proto.bragi.LolMatchMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolMatchMessage.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.LolMatchMessage.Payload.oneofGroups_);
};
goog.inherits(proto.bragi.LolMatchMessage.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolMatchMessage.Payload.displayName = 'proto.bragi.LolMatchMessage.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolMatchSnapshot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bragi.LolMatchSnapshot.repeatedFields_, null);
};
goog.inherits(proto.bragi.LolMatchSnapshot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolMatchSnapshot.displayName = 'proto.bragi.LolMatchSnapshot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolMatchUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolMatchUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolMatchUpdate.displayName = 'proto.bragi.LolMatchUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolMatchUpdate.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.LolMatchUpdate.Payload.oneofGroups_);
};
goog.inherits(proto.bragi.LolMatchUpdate.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolMatchUpdate.Payload.displayName = 'proto.bragi.LolMatchUpdate.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolMatchStatePartialUpdates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bragi.LolMatchStatePartialUpdates.repeatedFields_, null);
};
goog.inherits(proto.bragi.LolMatchStatePartialUpdates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolMatchStatePartialUpdates.displayName = 'proto.bragi.LolMatchStatePartialUpdates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolMatchStatePartialUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.LolMatchStatePartialUpdate.oneofGroups_);
};
goog.inherits(proto.bragi.LolMatchStatePartialUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolMatchStatePartialUpdate.displayName = 'proto.bragi.LolMatchStatePartialUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolMatchState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bragi.LolMatchState.repeatedFields_, null);
};
goog.inherits(proto.bragi.LolMatchState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolMatchState.displayName = 'proto.bragi.LolMatchState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolMatchScoreState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolMatchScoreState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolMatchScoreState.displayName = 'proto.bragi.LolMatchScoreState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolCurrentMapStatePartialUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.LolCurrentMapStatePartialUpdate.oneofGroups_);
};
goog.inherits(proto.bragi.LolCurrentMapStatePartialUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolCurrentMapStatePartialUpdate.displayName = 'proto.bragi.LolCurrentMapStatePartialUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolCurrentMapState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolCurrentMapState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolCurrentMapState.displayName = 'proto.bragi.LolCurrentMapState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolCurrentMapTimeState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolCurrentMapTimeState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolCurrentMapTimeState.displayName = 'proto.bragi.LolCurrentMapTimeState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolPreviousMapState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolPreviousMapState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolPreviousMapState.displayName = 'proto.bragi.LolPreviousMapState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolTeamCurrentMapStatePartialUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolTeamCurrentMapStatePartialUpdate.displayName = 'proto.bragi.LolTeamCurrentMapStatePartialUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.oneofGroups_);
};
goog.inherits(proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.displayName = 'proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolTeamCurrentMapState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolTeamCurrentMapState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolTeamCurrentMapState.displayName = 'proto.bragi.LolTeamCurrentMapState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolTeamCurrentMapStatisticsState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolTeamCurrentMapStatisticsState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolTeamCurrentMapStatisticsState.displayName = 'proto.bragi.LolTeamCurrentMapStatisticsState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolPlayerCurrentMapStatePartialUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolPlayerCurrentMapStatePartialUpdate.displayName = 'proto.bragi.LolPlayerCurrentMapStatePartialUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.oneofGroups_);
};
goog.inherits(proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.displayName = 'proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolPlayerCurrentMapState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolPlayerCurrentMapState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolPlayerCurrentMapState.displayName = 'proto.bragi.LolPlayerCurrentMapState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolPlayerCurrentMapStatisticsState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolPlayerCurrentMapStatisticsState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolPlayerCurrentMapStatisticsState.displayName = 'proto.bragi.LolPlayerCurrentMapStatisticsState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolPlayerCurrentMapTimersState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolPlayerCurrentMapTimersState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolPlayerCurrentMapTimersState.displayName = 'proto.bragi.LolPlayerCurrentMapTimersState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolTeamPreviousMapState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolTeamPreviousMapState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolTeamPreviousMapState.displayName = 'proto.bragi.LolTeamPreviousMapState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolPlayerPreviousMapState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolPlayerPreviousMapState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolPlayerPreviousMapState.displayName = 'proto.bragi.LolPlayerPreviousMapState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolPlayerInfoState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolPlayerInfoState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolPlayerInfoState.displayName = 'proto.bragi.LolPlayerInfoState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolPlayerStatisticsState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolPlayerStatisticsState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolPlayerStatisticsState.displayName = 'proto.bragi.LolPlayerStatisticsState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolTurrets = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bragi.LolTurrets.repeatedFields_, null);
};
goog.inherits(proto.bragi.LolTurrets, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolTurrets.displayName = 'proto.bragi.LolTurrets';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolInhibitors = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bragi.LolInhibitors.repeatedFields_, null);
};
goog.inherits(proto.bragi.LolInhibitors, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolInhibitors.displayName = 'proto.bragi.LolInhibitors';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolTurret = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolTurret, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolTurret.displayName = 'proto.bragi.LolTurret';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolInhibitor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolInhibitor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolInhibitor.displayName = 'proto.bragi.LolInhibitor';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.LolPosition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.LolPosition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.LolPosition.displayName = 'proto.bragi.LolPosition';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolMatchMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolMatchMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolMatchMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolMatchMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    dataStatus: jspb.Message.getFieldWithDefault(msg, 4, 0),
    payload: (f = msg.getPayload()) && proto.bragi.LolMatchMessage.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolMatchMessage}
 */
proto.bragi.LolMatchMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolMatchMessage;
  return proto.bragi.LolMatchMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolMatchMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolMatchMessage}
 */
proto.bragi.LolMatchMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatchUrn(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 4:
      var value = /** @type {!proto.bragi.DataStatus} */ (reader.readEnum());
      msg.setDataStatus(value);
      break;
    case 5:
      var value = new proto.bragi.LolMatchMessage.Payload;
      reader.readMessage(value,proto.bragi.LolMatchMessage.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolMatchMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolMatchMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolMatchMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolMatchMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDataStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bragi.LolMatchMessage.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.LolMatchMessage.Payload.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.bragi.LolMatchMessage.Payload.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  SNAPSHOT: 1,
  UPDATE: 2
};

/**
 * @return {proto.bragi.LolMatchMessage.Payload.PayloadCase}
 */
proto.bragi.LolMatchMessage.Payload.prototype.getPayloadCase = function() {
  return /** @type {proto.bragi.LolMatchMessage.Payload.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.bragi.LolMatchMessage.Payload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolMatchMessage.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolMatchMessage.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolMatchMessage.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolMatchMessage.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    snapshot: (f = msg.getSnapshot()) && proto.bragi.LolMatchSnapshot.toObject(includeInstance, f),
    update: (f = msg.getUpdate()) && proto.bragi.LolMatchUpdate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolMatchMessage.Payload}
 */
proto.bragi.LolMatchMessage.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolMatchMessage.Payload;
  return proto.bragi.LolMatchMessage.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolMatchMessage.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolMatchMessage.Payload}
 */
proto.bragi.LolMatchMessage.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.LolMatchSnapshot;
      reader.readMessage(value,proto.bragi.LolMatchSnapshot.deserializeBinaryFromReader);
      msg.setSnapshot(value);
      break;
    case 2:
      var value = new proto.bragi.LolMatchUpdate;
      reader.readMessage(value,proto.bragi.LolMatchUpdate.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolMatchMessage.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolMatchMessage.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolMatchMessage.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolMatchMessage.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSnapshot();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.LolMatchSnapshot.serializeBinaryToWriter
    );
  }
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.LolMatchUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * optional LolMatchSnapshot snapshot = 1;
 * @return {?proto.bragi.LolMatchSnapshot}
 */
proto.bragi.LolMatchMessage.Payload.prototype.getSnapshot = function() {
  return /** @type{?proto.bragi.LolMatchSnapshot} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolMatchSnapshot, 1));
};


/**
 * @param {?proto.bragi.LolMatchSnapshot|undefined} value
 * @return {!proto.bragi.LolMatchMessage.Payload} returns this
*/
proto.bragi.LolMatchMessage.Payload.prototype.setSnapshot = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.LolMatchMessage.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolMatchMessage.Payload} returns this
 */
proto.bragi.LolMatchMessage.Payload.prototype.clearSnapshot = function() {
  return this.setSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolMatchMessage.Payload.prototype.hasSnapshot = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LolMatchUpdate update = 2;
 * @return {?proto.bragi.LolMatchUpdate}
 */
proto.bragi.LolMatchMessage.Payload.prototype.getUpdate = function() {
  return /** @type{?proto.bragi.LolMatchUpdate} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolMatchUpdate, 2));
};


/**
 * @param {?proto.bragi.LolMatchUpdate|undefined} value
 * @return {!proto.bragi.LolMatchMessage.Payload} returns this
*/
proto.bragi.LolMatchMessage.Payload.prototype.setUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.LolMatchMessage.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolMatchMessage.Payload} returns this
 */
proto.bragi.LolMatchMessage.Payload.prototype.clearUpdate = function() {
  return this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolMatchMessage.Payload.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string match_urn = 1;
 * @return {string}
 */
proto.bragi.LolMatchMessage.prototype.getMatchUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.LolMatchMessage} returns this
 */
proto.bragi.LolMatchMessage.prototype.setMatchUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 sequence = 2;
 * @return {number}
 */
proto.bragi.LolMatchMessage.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolMatchMessage} returns this
 */
proto.bragi.LolMatchMessage.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.bragi.LolMatchMessage.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.bragi.LolMatchMessage} returns this
*/
proto.bragi.LolMatchMessage.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolMatchMessage} returns this
 */
proto.bragi.LolMatchMessage.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolMatchMessage.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DataStatus data_status = 4;
 * @return {!proto.bragi.DataStatus}
 */
proto.bragi.LolMatchMessage.prototype.getDataStatus = function() {
  return /** @type {!proto.bragi.DataStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.bragi.DataStatus} value
 * @return {!proto.bragi.LolMatchMessage} returns this
 */
proto.bragi.LolMatchMessage.prototype.setDataStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Payload payload = 5;
 * @return {?proto.bragi.LolMatchMessage.Payload}
 */
proto.bragi.LolMatchMessage.prototype.getPayload = function() {
  return /** @type{?proto.bragi.LolMatchMessage.Payload} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolMatchMessage.Payload, 5));
};


/**
 * @param {?proto.bragi.LolMatchMessage.Payload|undefined} value
 * @return {!proto.bragi.LolMatchMessage} returns this
*/
proto.bragi.LolMatchMessage.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolMatchMessage} returns this
 */
proto.bragi.LolMatchMessage.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolMatchMessage.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bragi.LolMatchSnapshot.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolMatchSnapshot.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolMatchSnapshot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolMatchSnapshot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolMatchSnapshot.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    dataStatus: jspb.Message.getFieldWithDefault(msg, 4, 0),
    announcementsList: jspb.Message.toObjectList(msg.getAnnouncementsList(),
    bragi_common_pb.Announcement.toObject, includeInstance),
    matchState: (f = msg.getMatchState()) && proto.bragi.LolMatchState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolMatchSnapshot}
 */
proto.bragi.LolMatchSnapshot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolMatchSnapshot;
  return proto.bragi.LolMatchSnapshot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolMatchSnapshot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolMatchSnapshot}
 */
proto.bragi.LolMatchSnapshot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatchUrn(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 4:
      var value = /** @type {!proto.bragi.DataStatus} */ (reader.readEnum());
      msg.setDataStatus(value);
      break;
    case 5:
      var value = new bragi_common_pb.Announcement;
      reader.readMessage(value,bragi_common_pb.Announcement.deserializeBinaryFromReader);
      msg.addAnnouncements(value);
      break;
    case 6:
      var value = new proto.bragi.LolMatchState;
      reader.readMessage(value,proto.bragi.LolMatchState.deserializeBinaryFromReader);
      msg.setMatchState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolMatchSnapshot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolMatchSnapshot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolMatchSnapshot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolMatchSnapshot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDataStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAnnouncementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      bragi_common_pb.Announcement.serializeBinaryToWriter
    );
  }
  f = message.getMatchState();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.bragi.LolMatchState.serializeBinaryToWriter
    );
  }
};


/**
 * optional string match_urn = 1;
 * @return {string}
 */
proto.bragi.LolMatchSnapshot.prototype.getMatchUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.LolMatchSnapshot} returns this
 */
proto.bragi.LolMatchSnapshot.prototype.setMatchUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 sequence = 2;
 * @return {number}
 */
proto.bragi.LolMatchSnapshot.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolMatchSnapshot} returns this
 */
proto.bragi.LolMatchSnapshot.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.bragi.LolMatchSnapshot.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.bragi.LolMatchSnapshot} returns this
*/
proto.bragi.LolMatchSnapshot.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolMatchSnapshot} returns this
 */
proto.bragi.LolMatchSnapshot.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolMatchSnapshot.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DataStatus data_status = 4;
 * @return {!proto.bragi.DataStatus}
 */
proto.bragi.LolMatchSnapshot.prototype.getDataStatus = function() {
  return /** @type {!proto.bragi.DataStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.bragi.DataStatus} value
 * @return {!proto.bragi.LolMatchSnapshot} returns this
 */
proto.bragi.LolMatchSnapshot.prototype.setDataStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * repeated Announcement announcements = 5;
 * @return {!Array<!proto.bragi.Announcement>}
 */
proto.bragi.LolMatchSnapshot.prototype.getAnnouncementsList = function() {
  return /** @type{!Array<!proto.bragi.Announcement>} */ (
    jspb.Message.getRepeatedWrapperField(this, bragi_common_pb.Announcement, 5));
};


/**
 * @param {!Array<!proto.bragi.Announcement>} value
 * @return {!proto.bragi.LolMatchSnapshot} returns this
*/
proto.bragi.LolMatchSnapshot.prototype.setAnnouncementsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.bragi.Announcement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bragi.Announcement}
 */
proto.bragi.LolMatchSnapshot.prototype.addAnnouncements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.bragi.Announcement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bragi.LolMatchSnapshot} returns this
 */
proto.bragi.LolMatchSnapshot.prototype.clearAnnouncementsList = function() {
  return this.setAnnouncementsList([]);
};


/**
 * optional LolMatchState match_state = 6;
 * @return {?proto.bragi.LolMatchState}
 */
proto.bragi.LolMatchSnapshot.prototype.getMatchState = function() {
  return /** @type{?proto.bragi.LolMatchState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolMatchState, 6));
};


/**
 * @param {?proto.bragi.LolMatchState|undefined} value
 * @return {!proto.bragi.LolMatchSnapshot} returns this
*/
proto.bragi.LolMatchSnapshot.prototype.setMatchState = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolMatchSnapshot} returns this
 */
proto.bragi.LolMatchSnapshot.prototype.clearMatchState = function() {
  return this.setMatchState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolMatchSnapshot.prototype.hasMatchState = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolMatchUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolMatchUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolMatchUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolMatchUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && proto.bragi.LolMatchUpdate.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolMatchUpdate}
 */
proto.bragi.LolMatchUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolMatchUpdate;
  return proto.bragi.LolMatchUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolMatchUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolMatchUpdate}
 */
proto.bragi.LolMatchUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.LolMatchUpdate.Payload;
      reader.readMessage(value,proto.bragi.LolMatchUpdate.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolMatchUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolMatchUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolMatchUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolMatchUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.LolMatchUpdate.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.LolMatchUpdate.Payload.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.bragi.LolMatchUpdate.Payload.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  MATCH_STATE: 1,
  PARTIAL_UPDATES: 2
};

/**
 * @return {proto.bragi.LolMatchUpdate.Payload.PayloadCase}
 */
proto.bragi.LolMatchUpdate.Payload.prototype.getPayloadCase = function() {
  return /** @type {proto.bragi.LolMatchUpdate.Payload.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.bragi.LolMatchUpdate.Payload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolMatchUpdate.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolMatchUpdate.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolMatchUpdate.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolMatchUpdate.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchState: (f = msg.getMatchState()) && proto.bragi.LolMatchState.toObject(includeInstance, f),
    partialUpdates: (f = msg.getPartialUpdates()) && proto.bragi.LolMatchStatePartialUpdates.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolMatchUpdate.Payload}
 */
proto.bragi.LolMatchUpdate.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolMatchUpdate.Payload;
  return proto.bragi.LolMatchUpdate.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolMatchUpdate.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolMatchUpdate.Payload}
 */
proto.bragi.LolMatchUpdate.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.LolMatchState;
      reader.readMessage(value,proto.bragi.LolMatchState.deserializeBinaryFromReader);
      msg.setMatchState(value);
      break;
    case 2:
      var value = new proto.bragi.LolMatchStatePartialUpdates;
      reader.readMessage(value,proto.bragi.LolMatchStatePartialUpdates.deserializeBinaryFromReader);
      msg.setPartialUpdates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolMatchUpdate.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolMatchUpdate.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolMatchUpdate.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolMatchUpdate.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.LolMatchState.serializeBinaryToWriter
    );
  }
  f = message.getPartialUpdates();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.LolMatchStatePartialUpdates.serializeBinaryToWriter
    );
  }
};


/**
 * optional LolMatchState match_state = 1;
 * @return {?proto.bragi.LolMatchState}
 */
proto.bragi.LolMatchUpdate.Payload.prototype.getMatchState = function() {
  return /** @type{?proto.bragi.LolMatchState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolMatchState, 1));
};


/**
 * @param {?proto.bragi.LolMatchState|undefined} value
 * @return {!proto.bragi.LolMatchUpdate.Payload} returns this
*/
proto.bragi.LolMatchUpdate.Payload.prototype.setMatchState = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.LolMatchUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolMatchUpdate.Payload} returns this
 */
proto.bragi.LolMatchUpdate.Payload.prototype.clearMatchState = function() {
  return this.setMatchState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolMatchUpdate.Payload.prototype.hasMatchState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LolMatchStatePartialUpdates partial_updates = 2;
 * @return {?proto.bragi.LolMatchStatePartialUpdates}
 */
proto.bragi.LolMatchUpdate.Payload.prototype.getPartialUpdates = function() {
  return /** @type{?proto.bragi.LolMatchStatePartialUpdates} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolMatchStatePartialUpdates, 2));
};


/**
 * @param {?proto.bragi.LolMatchStatePartialUpdates|undefined} value
 * @return {!proto.bragi.LolMatchUpdate.Payload} returns this
*/
proto.bragi.LolMatchUpdate.Payload.prototype.setPartialUpdates = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.LolMatchUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolMatchUpdate.Payload} returns this
 */
proto.bragi.LolMatchUpdate.Payload.prototype.clearPartialUpdates = function() {
  return this.setPartialUpdates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolMatchUpdate.Payload.prototype.hasPartialUpdates = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Payload payload = 1;
 * @return {?proto.bragi.LolMatchUpdate.Payload}
 */
proto.bragi.LolMatchUpdate.prototype.getPayload = function() {
  return /** @type{?proto.bragi.LolMatchUpdate.Payload} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolMatchUpdate.Payload, 1));
};


/**
 * @param {?proto.bragi.LolMatchUpdate.Payload|undefined} value
 * @return {!proto.bragi.LolMatchUpdate} returns this
*/
proto.bragi.LolMatchUpdate.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolMatchUpdate} returns this
 */
proto.bragi.LolMatchUpdate.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolMatchUpdate.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bragi.LolMatchStatePartialUpdates.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolMatchStatePartialUpdates.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolMatchStatePartialUpdates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolMatchStatePartialUpdates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolMatchStatePartialUpdates.toObject = function(includeInstance, msg) {
  var f, obj = {
    updatesList: jspb.Message.toObjectList(msg.getUpdatesList(),
    proto.bragi.LolMatchStatePartialUpdate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolMatchStatePartialUpdates}
 */
proto.bragi.LolMatchStatePartialUpdates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolMatchStatePartialUpdates;
  return proto.bragi.LolMatchStatePartialUpdates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolMatchStatePartialUpdates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolMatchStatePartialUpdates}
 */
proto.bragi.LolMatchStatePartialUpdates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.LolMatchStatePartialUpdate;
      reader.readMessage(value,proto.bragi.LolMatchStatePartialUpdate.deserializeBinaryFromReader);
      msg.addUpdates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolMatchStatePartialUpdates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolMatchStatePartialUpdates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolMatchStatePartialUpdates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolMatchStatePartialUpdates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bragi.LolMatchStatePartialUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LolMatchStatePartialUpdate updates = 1;
 * @return {!Array<!proto.bragi.LolMatchStatePartialUpdate>}
 */
proto.bragi.LolMatchStatePartialUpdates.prototype.getUpdatesList = function() {
  return /** @type{!Array<!proto.bragi.LolMatchStatePartialUpdate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bragi.LolMatchStatePartialUpdate, 1));
};


/**
 * @param {!Array<!proto.bragi.LolMatchStatePartialUpdate>} value
 * @return {!proto.bragi.LolMatchStatePartialUpdates} returns this
*/
proto.bragi.LolMatchStatePartialUpdates.prototype.setUpdatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bragi.LolMatchStatePartialUpdate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bragi.LolMatchStatePartialUpdate}
 */
proto.bragi.LolMatchStatePartialUpdates.prototype.addUpdates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bragi.LolMatchStatePartialUpdate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bragi.LolMatchStatePartialUpdates} returns this
 */
proto.bragi.LolMatchStatePartialUpdates.prototype.clearUpdatesList = function() {
  return this.setUpdatesList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.LolMatchStatePartialUpdate.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.bragi.LolMatchStatePartialUpdate.UpdateCase = {
  UPDATE_NOT_SET: 0,
  SCORE: 1,
  CURRENT_MAP_STATE: 2,
  CURRENT_MAP_STATE_PARTIAL_UPDATE: 3
};

/**
 * @return {proto.bragi.LolMatchStatePartialUpdate.UpdateCase}
 */
proto.bragi.LolMatchStatePartialUpdate.prototype.getUpdateCase = function() {
  return /** @type {proto.bragi.LolMatchStatePartialUpdate.UpdateCase} */(jspb.Message.computeOneofCase(this, proto.bragi.LolMatchStatePartialUpdate.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolMatchStatePartialUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolMatchStatePartialUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolMatchStatePartialUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolMatchStatePartialUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    score: (f = msg.getScore()) && proto.bragi.LolMatchScoreState.toObject(includeInstance, f),
    currentMapState: (f = msg.getCurrentMapState()) && proto.bragi.LolCurrentMapState.toObject(includeInstance, f),
    currentMapStatePartialUpdate: (f = msg.getCurrentMapStatePartialUpdate()) && proto.bragi.LolCurrentMapStatePartialUpdate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolMatchStatePartialUpdate}
 */
proto.bragi.LolMatchStatePartialUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolMatchStatePartialUpdate;
  return proto.bragi.LolMatchStatePartialUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolMatchStatePartialUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolMatchStatePartialUpdate}
 */
proto.bragi.LolMatchStatePartialUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.LolMatchScoreState;
      reader.readMessage(value,proto.bragi.LolMatchScoreState.deserializeBinaryFromReader);
      msg.setScore(value);
      break;
    case 2:
      var value = new proto.bragi.LolCurrentMapState;
      reader.readMessage(value,proto.bragi.LolCurrentMapState.deserializeBinaryFromReader);
      msg.setCurrentMapState(value);
      break;
    case 3:
      var value = new proto.bragi.LolCurrentMapStatePartialUpdate;
      reader.readMessage(value,proto.bragi.LolCurrentMapStatePartialUpdate.deserializeBinaryFromReader);
      msg.setCurrentMapStatePartialUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolMatchStatePartialUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolMatchStatePartialUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolMatchStatePartialUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolMatchStatePartialUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScore();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.LolMatchScoreState.serializeBinaryToWriter
    );
  }
  f = message.getCurrentMapState();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.LolCurrentMapState.serializeBinaryToWriter
    );
  }
  f = message.getCurrentMapStatePartialUpdate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.LolCurrentMapStatePartialUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * optional LolMatchScoreState score = 1;
 * @return {?proto.bragi.LolMatchScoreState}
 */
proto.bragi.LolMatchStatePartialUpdate.prototype.getScore = function() {
  return /** @type{?proto.bragi.LolMatchScoreState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolMatchScoreState, 1));
};


/**
 * @param {?proto.bragi.LolMatchScoreState|undefined} value
 * @return {!proto.bragi.LolMatchStatePartialUpdate} returns this
*/
proto.bragi.LolMatchStatePartialUpdate.prototype.setScore = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.LolMatchStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolMatchStatePartialUpdate} returns this
 */
proto.bragi.LolMatchStatePartialUpdate.prototype.clearScore = function() {
  return this.setScore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolMatchStatePartialUpdate.prototype.hasScore = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LolCurrentMapState current_map_state = 2;
 * @return {?proto.bragi.LolCurrentMapState}
 */
proto.bragi.LolMatchStatePartialUpdate.prototype.getCurrentMapState = function() {
  return /** @type{?proto.bragi.LolCurrentMapState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolCurrentMapState, 2));
};


/**
 * @param {?proto.bragi.LolCurrentMapState|undefined} value
 * @return {!proto.bragi.LolMatchStatePartialUpdate} returns this
*/
proto.bragi.LolMatchStatePartialUpdate.prototype.setCurrentMapState = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.LolMatchStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolMatchStatePartialUpdate} returns this
 */
proto.bragi.LolMatchStatePartialUpdate.prototype.clearCurrentMapState = function() {
  return this.setCurrentMapState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolMatchStatePartialUpdate.prototype.hasCurrentMapState = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LolCurrentMapStatePartialUpdate current_map_state_partial_update = 3;
 * @return {?proto.bragi.LolCurrentMapStatePartialUpdate}
 */
proto.bragi.LolMatchStatePartialUpdate.prototype.getCurrentMapStatePartialUpdate = function() {
  return /** @type{?proto.bragi.LolCurrentMapStatePartialUpdate} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolCurrentMapStatePartialUpdate, 3));
};


/**
 * @param {?proto.bragi.LolCurrentMapStatePartialUpdate|undefined} value
 * @return {!proto.bragi.LolMatchStatePartialUpdate} returns this
*/
proto.bragi.LolMatchStatePartialUpdate.prototype.setCurrentMapStatePartialUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.bragi.LolMatchStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolMatchStatePartialUpdate} returns this
 */
proto.bragi.LolMatchStatePartialUpdate.prototype.clearCurrentMapStatePartialUpdate = function() {
  return this.setCurrentMapStatePartialUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolMatchStatePartialUpdate.prototype.hasCurrentMapStatePartialUpdate = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bragi.LolMatchState.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolMatchState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolMatchState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolMatchState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolMatchState.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    matchType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    homeTeam: (f = msg.getHomeTeam()) && bragi_common_pb.Team.toObject(includeInstance, f),
    awayTeam: (f = msg.getAwayTeam()) && bragi_common_pb.Team.toObject(includeInstance, f),
    score: (f = msg.getScore()) && proto.bragi.LolMatchScoreState.toObject(includeInstance, f),
    matchStatus: jspb.Message.getFieldWithDefault(msg, 6, 0),
    currentMap: (f = msg.getCurrentMap()) && proto.bragi.LolCurrentMapState.toObject(includeInstance, f),
    previousMapsList: jspb.Message.toObjectList(msg.getPreviousMapsList(),
    proto.bragi.LolPreviousMapState.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolMatchState}
 */
proto.bragi.LolMatchState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolMatchState;
  return proto.bragi.LolMatchState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolMatchState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolMatchState}
 */
proto.bragi.LolMatchState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatchUrn(value);
      break;
    case 2:
      var value = /** @type {!proto.bragi.BestOfType} */ (reader.readEnum());
      msg.setMatchType(value);
      break;
    case 3:
      var value = new bragi_common_pb.Team;
      reader.readMessage(value,bragi_common_pb.Team.deserializeBinaryFromReader);
      msg.setHomeTeam(value);
      break;
    case 4:
      var value = new bragi_common_pb.Team;
      reader.readMessage(value,bragi_common_pb.Team.deserializeBinaryFromReader);
      msg.setAwayTeam(value);
      break;
    case 5:
      var value = new proto.bragi.LolMatchScoreState;
      reader.readMessage(value,proto.bragi.LolMatchScoreState.deserializeBinaryFromReader);
      msg.setScore(value);
      break;
    case 6:
      var value = /** @type {!proto.bragi.MatchStatusType} */ (reader.readEnum());
      msg.setMatchStatus(value);
      break;
    case 7:
      var value = new proto.bragi.LolCurrentMapState;
      reader.readMessage(value,proto.bragi.LolCurrentMapState.deserializeBinaryFromReader);
      msg.setCurrentMap(value);
      break;
    case 8:
      var value = new proto.bragi.LolPreviousMapState;
      reader.readMessage(value,proto.bragi.LolPreviousMapState.deserializeBinaryFromReader);
      msg.addPreviousMaps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolMatchState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolMatchState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolMatchState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolMatchState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMatchType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getHomeTeam();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      bragi_common_pb.Team.serializeBinaryToWriter
    );
  }
  f = message.getAwayTeam();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      bragi_common_pb.Team.serializeBinaryToWriter
    );
  }
  f = message.getScore();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bragi.LolMatchScoreState.serializeBinaryToWriter
    );
  }
  f = message.getMatchStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getCurrentMap();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.bragi.LolCurrentMapState.serializeBinaryToWriter
    );
  }
  f = message.getPreviousMapsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.bragi.LolPreviousMapState.serializeBinaryToWriter
    );
  }
};


/**
 * optional string match_urn = 1;
 * @return {string}
 */
proto.bragi.LolMatchState.prototype.getMatchUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.LolMatchState} returns this
 */
proto.bragi.LolMatchState.prototype.setMatchUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional BestOfType match_type = 2;
 * @return {!proto.bragi.BestOfType}
 */
proto.bragi.LolMatchState.prototype.getMatchType = function() {
  return /** @type {!proto.bragi.BestOfType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bragi.BestOfType} value
 * @return {!proto.bragi.LolMatchState} returns this
 */
proto.bragi.LolMatchState.prototype.setMatchType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Team home_team = 3;
 * @return {?proto.bragi.Team}
 */
proto.bragi.LolMatchState.prototype.getHomeTeam = function() {
  return /** @type{?proto.bragi.Team} */ (
    jspb.Message.getWrapperField(this, bragi_common_pb.Team, 3));
};


/**
 * @param {?proto.bragi.Team|undefined} value
 * @return {!proto.bragi.LolMatchState} returns this
*/
proto.bragi.LolMatchState.prototype.setHomeTeam = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolMatchState} returns this
 */
proto.bragi.LolMatchState.prototype.clearHomeTeam = function() {
  return this.setHomeTeam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolMatchState.prototype.hasHomeTeam = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Team away_team = 4;
 * @return {?proto.bragi.Team}
 */
proto.bragi.LolMatchState.prototype.getAwayTeam = function() {
  return /** @type{?proto.bragi.Team} */ (
    jspb.Message.getWrapperField(this, bragi_common_pb.Team, 4));
};


/**
 * @param {?proto.bragi.Team|undefined} value
 * @return {!proto.bragi.LolMatchState} returns this
*/
proto.bragi.LolMatchState.prototype.setAwayTeam = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolMatchState} returns this
 */
proto.bragi.LolMatchState.prototype.clearAwayTeam = function() {
  return this.setAwayTeam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolMatchState.prototype.hasAwayTeam = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional LolMatchScoreState score = 5;
 * @return {?proto.bragi.LolMatchScoreState}
 */
proto.bragi.LolMatchState.prototype.getScore = function() {
  return /** @type{?proto.bragi.LolMatchScoreState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolMatchScoreState, 5));
};


/**
 * @param {?proto.bragi.LolMatchScoreState|undefined} value
 * @return {!proto.bragi.LolMatchState} returns this
*/
proto.bragi.LolMatchState.prototype.setScore = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolMatchState} returns this
 */
proto.bragi.LolMatchState.prototype.clearScore = function() {
  return this.setScore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolMatchState.prototype.hasScore = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional MatchStatusType match_status = 6;
 * @return {!proto.bragi.MatchStatusType}
 */
proto.bragi.LolMatchState.prototype.getMatchStatus = function() {
  return /** @type {!proto.bragi.MatchStatusType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.bragi.MatchStatusType} value
 * @return {!proto.bragi.LolMatchState} returns this
 */
proto.bragi.LolMatchState.prototype.setMatchStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional LolCurrentMapState current_map = 7;
 * @return {?proto.bragi.LolCurrentMapState}
 */
proto.bragi.LolMatchState.prototype.getCurrentMap = function() {
  return /** @type{?proto.bragi.LolCurrentMapState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolCurrentMapState, 7));
};


/**
 * @param {?proto.bragi.LolCurrentMapState|undefined} value
 * @return {!proto.bragi.LolMatchState} returns this
*/
proto.bragi.LolMatchState.prototype.setCurrentMap = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolMatchState} returns this
 */
proto.bragi.LolMatchState.prototype.clearCurrentMap = function() {
  return this.setCurrentMap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolMatchState.prototype.hasCurrentMap = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated LolPreviousMapState previous_maps = 8;
 * @return {!Array<!proto.bragi.LolPreviousMapState>}
 */
proto.bragi.LolMatchState.prototype.getPreviousMapsList = function() {
  return /** @type{!Array<!proto.bragi.LolPreviousMapState>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bragi.LolPreviousMapState, 8));
};


/**
 * @param {!Array<!proto.bragi.LolPreviousMapState>} value
 * @return {!proto.bragi.LolMatchState} returns this
*/
proto.bragi.LolMatchState.prototype.setPreviousMapsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.bragi.LolPreviousMapState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bragi.LolPreviousMapState}
 */
proto.bragi.LolMatchState.prototype.addPreviousMaps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.bragi.LolPreviousMapState, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bragi.LolMatchState} returns this
 */
proto.bragi.LolMatchState.prototype.clearPreviousMapsList = function() {
  return this.setPreviousMapsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolMatchScoreState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolMatchScoreState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolMatchScoreState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolMatchScoreState.toObject = function(includeInstance, msg) {
  var f, obj = {
    homeScore: jspb.Message.getFieldWithDefault(msg, 1, 0),
    awayScore: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolMatchScoreState}
 */
proto.bragi.LolMatchScoreState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolMatchScoreState;
  return proto.bragi.LolMatchScoreState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolMatchScoreState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolMatchScoreState}
 */
proto.bragi.LolMatchScoreState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHomeScore(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAwayScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolMatchScoreState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolMatchScoreState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolMatchScoreState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolMatchScoreState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHomeScore();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAwayScore();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 home_score = 1;
 * @return {number}
 */
proto.bragi.LolMatchScoreState.prototype.getHomeScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolMatchScoreState} returns this
 */
proto.bragi.LolMatchScoreState.prototype.setHomeScore = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 away_score = 2;
 * @return {number}
 */
proto.bragi.LolMatchScoreState.prototype.getAwayScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolMatchScoreState} returns this
 */
proto.bragi.LolMatchScoreState.prototype.setAwayScore = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.LolCurrentMapStatePartialUpdate.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.bragi.LolCurrentMapStatePartialUpdate.UpdateCase = {
  UPDATE_NOT_SET: 0,
  GAME_TIME: 1,
  TEAM_CURRENT_MAP_STATE: 2,
  TEAM_CURRENT_MAP_PARTIAL_UPDATE: 3,
  TURRETS: 4,
  INHIBITORS: 5
};

/**
 * @return {proto.bragi.LolCurrentMapStatePartialUpdate.UpdateCase}
 */
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.getUpdateCase = function() {
  return /** @type {proto.bragi.LolCurrentMapStatePartialUpdate.UpdateCase} */(jspb.Message.computeOneofCase(this, proto.bragi.LolCurrentMapStatePartialUpdate.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolCurrentMapStatePartialUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolCurrentMapStatePartialUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolCurrentMapStatePartialUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameTime: (f = msg.getGameTime()) && proto.bragi.LolCurrentMapTimeState.toObject(includeInstance, f),
    teamCurrentMapState: (f = msg.getTeamCurrentMapState()) && proto.bragi.LolTeamCurrentMapState.toObject(includeInstance, f),
    teamCurrentMapPartialUpdate: (f = msg.getTeamCurrentMapPartialUpdate()) && proto.bragi.LolTeamCurrentMapStatePartialUpdate.toObject(includeInstance, f),
    turrets: (f = msg.getTurrets()) && proto.bragi.LolTurrets.toObject(includeInstance, f),
    inhibitors: (f = msg.getInhibitors()) && proto.bragi.LolInhibitors.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolCurrentMapStatePartialUpdate}
 */
proto.bragi.LolCurrentMapStatePartialUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolCurrentMapStatePartialUpdate;
  return proto.bragi.LolCurrentMapStatePartialUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolCurrentMapStatePartialUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolCurrentMapStatePartialUpdate}
 */
proto.bragi.LolCurrentMapStatePartialUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.LolCurrentMapTimeState;
      reader.readMessage(value,proto.bragi.LolCurrentMapTimeState.deserializeBinaryFromReader);
      msg.setGameTime(value);
      break;
    case 2:
      var value = new proto.bragi.LolTeamCurrentMapState;
      reader.readMessage(value,proto.bragi.LolTeamCurrentMapState.deserializeBinaryFromReader);
      msg.setTeamCurrentMapState(value);
      break;
    case 3:
      var value = new proto.bragi.LolTeamCurrentMapStatePartialUpdate;
      reader.readMessage(value,proto.bragi.LolTeamCurrentMapStatePartialUpdate.deserializeBinaryFromReader);
      msg.setTeamCurrentMapPartialUpdate(value);
      break;
    case 4:
      var value = new proto.bragi.LolTurrets;
      reader.readMessage(value,proto.bragi.LolTurrets.deserializeBinaryFromReader);
      msg.setTurrets(value);
      break;
    case 5:
      var value = new proto.bragi.LolInhibitors;
      reader.readMessage(value,proto.bragi.LolInhibitors.deserializeBinaryFromReader);
      msg.setInhibitors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolCurrentMapStatePartialUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolCurrentMapStatePartialUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolCurrentMapStatePartialUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.LolCurrentMapTimeState.serializeBinaryToWriter
    );
  }
  f = message.getTeamCurrentMapState();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.LolTeamCurrentMapState.serializeBinaryToWriter
    );
  }
  f = message.getTeamCurrentMapPartialUpdate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.LolTeamCurrentMapStatePartialUpdate.serializeBinaryToWriter
    );
  }
  f = message.getTurrets();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bragi.LolTurrets.serializeBinaryToWriter
    );
  }
  f = message.getInhibitors();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bragi.LolInhibitors.serializeBinaryToWriter
    );
  }
};


/**
 * optional LolCurrentMapTimeState game_time = 1;
 * @return {?proto.bragi.LolCurrentMapTimeState}
 */
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.getGameTime = function() {
  return /** @type{?proto.bragi.LolCurrentMapTimeState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolCurrentMapTimeState, 1));
};


/**
 * @param {?proto.bragi.LolCurrentMapTimeState|undefined} value
 * @return {!proto.bragi.LolCurrentMapStatePartialUpdate} returns this
*/
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.setGameTime = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.LolCurrentMapStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.clearGameTime = function() {
  return this.setGameTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.hasGameTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LolTeamCurrentMapState team_current_map_state = 2;
 * @return {?proto.bragi.LolTeamCurrentMapState}
 */
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.getTeamCurrentMapState = function() {
  return /** @type{?proto.bragi.LolTeamCurrentMapState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolTeamCurrentMapState, 2));
};


/**
 * @param {?proto.bragi.LolTeamCurrentMapState|undefined} value
 * @return {!proto.bragi.LolCurrentMapStatePartialUpdate} returns this
*/
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.setTeamCurrentMapState = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.LolCurrentMapStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.clearTeamCurrentMapState = function() {
  return this.setTeamCurrentMapState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.hasTeamCurrentMapState = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LolTeamCurrentMapStatePartialUpdate team_current_map_partial_update = 3;
 * @return {?proto.bragi.LolTeamCurrentMapStatePartialUpdate}
 */
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.getTeamCurrentMapPartialUpdate = function() {
  return /** @type{?proto.bragi.LolTeamCurrentMapStatePartialUpdate} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolTeamCurrentMapStatePartialUpdate, 3));
};


/**
 * @param {?proto.bragi.LolTeamCurrentMapStatePartialUpdate|undefined} value
 * @return {!proto.bragi.LolCurrentMapStatePartialUpdate} returns this
*/
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.setTeamCurrentMapPartialUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.bragi.LolCurrentMapStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.clearTeamCurrentMapPartialUpdate = function() {
  return this.setTeamCurrentMapPartialUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.hasTeamCurrentMapPartialUpdate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional LolTurrets turrets = 4;
 * @return {?proto.bragi.LolTurrets}
 */
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.getTurrets = function() {
  return /** @type{?proto.bragi.LolTurrets} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolTurrets, 4));
};


/**
 * @param {?proto.bragi.LolTurrets|undefined} value
 * @return {!proto.bragi.LolCurrentMapStatePartialUpdate} returns this
*/
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.setTurrets = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.bragi.LolCurrentMapStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.clearTurrets = function() {
  return this.setTurrets(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.hasTurrets = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional LolInhibitors inhibitors = 5;
 * @return {?proto.bragi.LolInhibitors}
 */
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.getInhibitors = function() {
  return /** @type{?proto.bragi.LolInhibitors} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolInhibitors, 5));
};


/**
 * @param {?proto.bragi.LolInhibitors|undefined} value
 * @return {!proto.bragi.LolCurrentMapStatePartialUpdate} returns this
*/
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.setInhibitors = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.bragi.LolCurrentMapStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.clearInhibitors = function() {
  return this.setInhibitors(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolCurrentMapStatePartialUpdate.prototype.hasInhibitors = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolCurrentMapState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolCurrentMapState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolCurrentMapState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolCurrentMapState.toObject = function(includeInstance, msg) {
  var f, obj = {
    mapOrder: jspb.Message.getFieldWithDefault(msg, 1, 0),
    mapPaused: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    gameTime: (f = msg.getGameTime()) && proto.bragi.LolCurrentMapTimeState.toObject(includeInstance, f),
    teamsMap: (f = msg.getTeamsMap()) ? f.toObject(includeInstance, proto.bragi.LolTeamCurrentMapState.toObject) : [],
    turrets: (f = msg.getTurrets()) && proto.bragi.LolTurrets.toObject(includeInstance, f),
    inhibitors: (f = msg.getInhibitors()) && proto.bragi.LolInhibitors.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolCurrentMapState}
 */
proto.bragi.LolCurrentMapState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolCurrentMapState;
  return proto.bragi.LolCurrentMapState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolCurrentMapState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolCurrentMapState}
 */
proto.bragi.LolCurrentMapState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMapOrder(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMapPaused(value);
      break;
    case 3:
      var value = new proto.bragi.LolCurrentMapTimeState;
      reader.readMessage(value,proto.bragi.LolCurrentMapTimeState.deserializeBinaryFromReader);
      msg.setGameTime(value);
      break;
    case 4:
      var value = msg.getTeamsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.bragi.LolTeamCurrentMapState.deserializeBinaryFromReader, "", new proto.bragi.LolTeamCurrentMapState());
         });
      break;
    case 5:
      var value = new proto.bragi.LolTurrets;
      reader.readMessage(value,proto.bragi.LolTurrets.deserializeBinaryFromReader);
      msg.setTurrets(value);
      break;
    case 6:
      var value = new proto.bragi.LolInhibitors;
      reader.readMessage(value,proto.bragi.LolInhibitors.deserializeBinaryFromReader);
      msg.setInhibitors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolCurrentMapState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolCurrentMapState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolCurrentMapState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolCurrentMapState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMapOrder();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMapPaused();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getGameTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.LolCurrentMapTimeState.serializeBinaryToWriter
    );
  }
  f = message.getTeamsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.bragi.LolTeamCurrentMapState.serializeBinaryToWriter);
  }
  f = message.getTurrets();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bragi.LolTurrets.serializeBinaryToWriter
    );
  }
  f = message.getInhibitors();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.bragi.LolInhibitors.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 map_order = 1;
 * @return {number}
 */
proto.bragi.LolCurrentMapState.prototype.getMapOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolCurrentMapState} returns this
 */
proto.bragi.LolCurrentMapState.prototype.setMapOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool map_paused = 2;
 * @return {boolean}
 */
proto.bragi.LolCurrentMapState.prototype.getMapPaused = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bragi.LolCurrentMapState} returns this
 */
proto.bragi.LolCurrentMapState.prototype.setMapPaused = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional LolCurrentMapTimeState game_time = 3;
 * @return {?proto.bragi.LolCurrentMapTimeState}
 */
proto.bragi.LolCurrentMapState.prototype.getGameTime = function() {
  return /** @type{?proto.bragi.LolCurrentMapTimeState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolCurrentMapTimeState, 3));
};


/**
 * @param {?proto.bragi.LolCurrentMapTimeState|undefined} value
 * @return {!proto.bragi.LolCurrentMapState} returns this
*/
proto.bragi.LolCurrentMapState.prototype.setGameTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolCurrentMapState} returns this
 */
proto.bragi.LolCurrentMapState.prototype.clearGameTime = function() {
  return this.setGameTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolCurrentMapState.prototype.hasGameTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, LolTeamCurrentMapState> teams = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.bragi.LolTeamCurrentMapState>}
 */
proto.bragi.LolCurrentMapState.prototype.getTeamsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.bragi.LolTeamCurrentMapState>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.bragi.LolTeamCurrentMapState));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.bragi.LolCurrentMapState} returns this
 */
proto.bragi.LolCurrentMapState.prototype.clearTeamsMap = function() {
  this.getTeamsMap().clear();
  return this;};


/**
 * optional LolTurrets turrets = 5;
 * @return {?proto.bragi.LolTurrets}
 */
proto.bragi.LolCurrentMapState.prototype.getTurrets = function() {
  return /** @type{?proto.bragi.LolTurrets} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolTurrets, 5));
};


/**
 * @param {?proto.bragi.LolTurrets|undefined} value
 * @return {!proto.bragi.LolCurrentMapState} returns this
*/
proto.bragi.LolCurrentMapState.prototype.setTurrets = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolCurrentMapState} returns this
 */
proto.bragi.LolCurrentMapState.prototype.clearTurrets = function() {
  return this.setTurrets(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolCurrentMapState.prototype.hasTurrets = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional LolInhibitors inhibitors = 6;
 * @return {?proto.bragi.LolInhibitors}
 */
proto.bragi.LolCurrentMapState.prototype.getInhibitors = function() {
  return /** @type{?proto.bragi.LolInhibitors} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolInhibitors, 6));
};


/**
 * @param {?proto.bragi.LolInhibitors|undefined} value
 * @return {!proto.bragi.LolCurrentMapState} returns this
*/
proto.bragi.LolCurrentMapState.prototype.setInhibitors = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolCurrentMapState} returns this
 */
proto.bragi.LolCurrentMapState.prototype.clearInhibitors = function() {
  return this.setInhibitors(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolCurrentMapState.prototype.hasInhibitors = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolCurrentMapTimeState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolCurrentMapTimeState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolCurrentMapTimeState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolCurrentMapTimeState.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameTime: (f = msg.getGameTime()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolCurrentMapTimeState}
 */
proto.bragi.LolCurrentMapTimeState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolCurrentMapTimeState;
  return proto.bragi.LolCurrentMapTimeState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolCurrentMapTimeState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolCurrentMapTimeState}
 */
proto.bragi.LolCurrentMapTimeState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setGameTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolCurrentMapTimeState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolCurrentMapTimeState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolCurrentMapTimeState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolCurrentMapTimeState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Duration game_time = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.bragi.LolCurrentMapTimeState.prototype.getGameTime = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.bragi.LolCurrentMapTimeState} returns this
*/
proto.bragi.LolCurrentMapTimeState.prototype.setGameTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolCurrentMapTimeState} returns this
 */
proto.bragi.LolCurrentMapTimeState.prototype.clearGameTime = function() {
  return this.setGameTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolCurrentMapTimeState.prototype.hasGameTime = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolPreviousMapState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolPreviousMapState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolPreviousMapState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPreviousMapState.toObject = function(includeInstance, msg) {
  var f, obj = {
    mapOrder: jspb.Message.getFieldWithDefault(msg, 1, 0),
    teamsMap: (f = msg.getTeamsMap()) ? f.toObject(includeInstance, proto.bragi.LolTeamPreviousMapState.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolPreviousMapState}
 */
proto.bragi.LolPreviousMapState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolPreviousMapState;
  return proto.bragi.LolPreviousMapState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolPreviousMapState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolPreviousMapState}
 */
proto.bragi.LolPreviousMapState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMapOrder(value);
      break;
    case 2:
      var value = msg.getTeamsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.bragi.LolTeamPreviousMapState.deserializeBinaryFromReader, "", new proto.bragi.LolTeamPreviousMapState());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolPreviousMapState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolPreviousMapState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolPreviousMapState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPreviousMapState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMapOrder();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTeamsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.bragi.LolTeamPreviousMapState.serializeBinaryToWriter);
  }
};


/**
 * optional uint32 map_order = 1;
 * @return {number}
 */
proto.bragi.LolPreviousMapState.prototype.getMapOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolPreviousMapState} returns this
 */
proto.bragi.LolPreviousMapState.prototype.setMapOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * map<string, LolTeamPreviousMapState> teams = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.bragi.LolTeamPreviousMapState>}
 */
proto.bragi.LolPreviousMapState.prototype.getTeamsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.bragi.LolTeamPreviousMapState>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.bragi.LolTeamPreviousMapState));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.bragi.LolPreviousMapState} returns this
 */
proto.bragi.LolPreviousMapState.prototype.clearTeamsMap = function() {
  this.getTeamsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolTeamCurrentMapStatePartialUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolTeamCurrentMapStatePartialUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    payload: (f = msg.getPayload()) && proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolTeamCurrentMapStatePartialUpdate}
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolTeamCurrentMapStatePartialUpdate;
  return proto.bragi.LolTeamCurrentMapStatePartialUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolTeamCurrentMapStatePartialUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolTeamCurrentMapStatePartialUpdate}
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamUrn(value);
      break;
    case 2:
      var value = new proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload;
      reader.readMessage(value,proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolTeamCurrentMapStatePartialUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolTeamCurrentMapStatePartialUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  STATISTICS: 1,
  PLAYER_CURRENT_MAP_STATE: 2,
  PLAYER_CURRENT_MAP_PARTIAL_UPDATE: 3
};

/**
 * @return {proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.PayloadCase}
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.prototype.getPayloadCase = function() {
  return /** @type {proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    statistics: (f = msg.getStatistics()) && proto.bragi.LolTeamCurrentMapStatisticsState.toObject(includeInstance, f),
    playerCurrentMapState: (f = msg.getPlayerCurrentMapState()) && proto.bragi.LolPlayerCurrentMapState.toObject(includeInstance, f),
    playerCurrentMapPartialUpdate: (f = msg.getPlayerCurrentMapPartialUpdate()) && proto.bragi.LolPlayerCurrentMapStatePartialUpdate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload}
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload;
  return proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload}
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.LolTeamCurrentMapStatisticsState;
      reader.readMessage(value,proto.bragi.LolTeamCurrentMapStatisticsState.deserializeBinaryFromReader);
      msg.setStatistics(value);
      break;
    case 2:
      var value = new proto.bragi.LolPlayerCurrentMapState;
      reader.readMessage(value,proto.bragi.LolPlayerCurrentMapState.deserializeBinaryFromReader);
      msg.setPlayerCurrentMapState(value);
      break;
    case 3:
      var value = new proto.bragi.LolPlayerCurrentMapStatePartialUpdate;
      reader.readMessage(value,proto.bragi.LolPlayerCurrentMapStatePartialUpdate.deserializeBinaryFromReader);
      msg.setPlayerCurrentMapPartialUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatistics();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.LolTeamCurrentMapStatisticsState.serializeBinaryToWriter
    );
  }
  f = message.getPlayerCurrentMapState();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.LolPlayerCurrentMapState.serializeBinaryToWriter
    );
  }
  f = message.getPlayerCurrentMapPartialUpdate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.LolPlayerCurrentMapStatePartialUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * optional LolTeamCurrentMapStatisticsState statistics = 1;
 * @return {?proto.bragi.LolTeamCurrentMapStatisticsState}
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.prototype.getStatistics = function() {
  return /** @type{?proto.bragi.LolTeamCurrentMapStatisticsState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolTeamCurrentMapStatisticsState, 1));
};


/**
 * @param {?proto.bragi.LolTeamCurrentMapStatisticsState|undefined} value
 * @return {!proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload} returns this
*/
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.prototype.setStatistics = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload} returns this
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.prototype.clearStatistics = function() {
  return this.setStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.prototype.hasStatistics = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LolPlayerCurrentMapState player_current_map_state = 2;
 * @return {?proto.bragi.LolPlayerCurrentMapState}
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.prototype.getPlayerCurrentMapState = function() {
  return /** @type{?proto.bragi.LolPlayerCurrentMapState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolPlayerCurrentMapState, 2));
};


/**
 * @param {?proto.bragi.LolPlayerCurrentMapState|undefined} value
 * @return {!proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload} returns this
*/
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.prototype.setPlayerCurrentMapState = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload} returns this
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.prototype.clearPlayerCurrentMapState = function() {
  return this.setPlayerCurrentMapState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.prototype.hasPlayerCurrentMapState = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LolPlayerCurrentMapStatePartialUpdate player_current_map_partial_update = 3;
 * @return {?proto.bragi.LolPlayerCurrentMapStatePartialUpdate}
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.prototype.getPlayerCurrentMapPartialUpdate = function() {
  return /** @type{?proto.bragi.LolPlayerCurrentMapStatePartialUpdate} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolPlayerCurrentMapStatePartialUpdate, 3));
};


/**
 * @param {?proto.bragi.LolPlayerCurrentMapStatePartialUpdate|undefined} value
 * @return {!proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload} returns this
*/
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.prototype.setPlayerCurrentMapPartialUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload} returns this
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.prototype.clearPlayerCurrentMapPartialUpdate = function() {
  return this.setPlayerCurrentMapPartialUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload.prototype.hasPlayerCurrentMapPartialUpdate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string team_urn = 1;
 * @return {string}
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.prototype.getTeamUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.LolTeamCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.prototype.setTeamUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Payload payload = 2;
 * @return {?proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload}
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.prototype.getPayload = function() {
  return /** @type{?proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload, 2));
};


/**
 * @param {?proto.bragi.LolTeamCurrentMapStatePartialUpdate.Payload|undefined} value
 * @return {!proto.bragi.LolTeamCurrentMapStatePartialUpdate} returns this
*/
proto.bragi.LolTeamCurrentMapStatePartialUpdate.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolTeamCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolTeamCurrentMapStatePartialUpdate.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolTeamCurrentMapState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolTeamCurrentMapState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolTeamCurrentMapState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolTeamCurrentMapState.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    faction: jspb.Message.getFieldWithDefault(msg, 2, 0),
    statistics: (f = msg.getStatistics()) && proto.bragi.LolTeamCurrentMapStatisticsState.toObject(includeInstance, f),
    won: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    playersMap: (f = msg.getPlayersMap()) ? f.toObject(includeInstance, proto.bragi.LolPlayerCurrentMapState.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolTeamCurrentMapState}
 */
proto.bragi.LolTeamCurrentMapState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolTeamCurrentMapState;
  return proto.bragi.LolTeamCurrentMapState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolTeamCurrentMapState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolTeamCurrentMapState}
 */
proto.bragi.LolTeamCurrentMapState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamUrn(value);
      break;
    case 2:
      var value = /** @type {!proto.bragi.LolFaction} */ (reader.readEnum());
      msg.setFaction(value);
      break;
    case 3:
      var value = new proto.bragi.LolTeamCurrentMapStatisticsState;
      reader.readMessage(value,proto.bragi.LolTeamCurrentMapStatisticsState.deserializeBinaryFromReader);
      msg.setStatistics(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWon(value);
      break;
    case 5:
      var value = msg.getPlayersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.bragi.LolPlayerCurrentMapState.deserializeBinaryFromReader, "", new proto.bragi.LolPlayerCurrentMapState());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolTeamCurrentMapState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolTeamCurrentMapState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolTeamCurrentMapState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolTeamCurrentMapState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFaction();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getStatistics();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.LolTeamCurrentMapStatisticsState.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getPlayersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.bragi.LolPlayerCurrentMapState.serializeBinaryToWriter);
  }
};


/**
 * optional string team_urn = 1;
 * @return {string}
 */
proto.bragi.LolTeamCurrentMapState.prototype.getTeamUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.LolTeamCurrentMapState} returns this
 */
proto.bragi.LolTeamCurrentMapState.prototype.setTeamUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional LolFaction faction = 2;
 * @return {!proto.bragi.LolFaction}
 */
proto.bragi.LolTeamCurrentMapState.prototype.getFaction = function() {
  return /** @type {!proto.bragi.LolFaction} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bragi.LolFaction} value
 * @return {!proto.bragi.LolTeamCurrentMapState} returns this
 */
proto.bragi.LolTeamCurrentMapState.prototype.setFaction = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional LolTeamCurrentMapStatisticsState statistics = 3;
 * @return {?proto.bragi.LolTeamCurrentMapStatisticsState}
 */
proto.bragi.LolTeamCurrentMapState.prototype.getStatistics = function() {
  return /** @type{?proto.bragi.LolTeamCurrentMapStatisticsState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolTeamCurrentMapStatisticsState, 3));
};


/**
 * @param {?proto.bragi.LolTeamCurrentMapStatisticsState|undefined} value
 * @return {!proto.bragi.LolTeamCurrentMapState} returns this
*/
proto.bragi.LolTeamCurrentMapState.prototype.setStatistics = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolTeamCurrentMapState} returns this
 */
proto.bragi.LolTeamCurrentMapState.prototype.clearStatistics = function() {
  return this.setStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolTeamCurrentMapState.prototype.hasStatistics = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool won = 4;
 * @return {boolean}
 */
proto.bragi.LolTeamCurrentMapState.prototype.getWon = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bragi.LolTeamCurrentMapState} returns this
 */
proto.bragi.LolTeamCurrentMapState.prototype.setWon = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.bragi.LolTeamCurrentMapState} returns this
 */
proto.bragi.LolTeamCurrentMapState.prototype.clearWon = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolTeamCurrentMapState.prototype.hasWon = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * map<string, LolPlayerCurrentMapState> players = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.bragi.LolPlayerCurrentMapState>}
 */
proto.bragi.LolTeamCurrentMapState.prototype.getPlayersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.bragi.LolPlayerCurrentMapState>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.bragi.LolPlayerCurrentMapState));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.bragi.LolTeamCurrentMapState} returns this
 */
proto.bragi.LolTeamCurrentMapState.prototype.clearPlayersMap = function() {
  this.getPlayersMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolTeamCurrentMapStatisticsState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolTeamCurrentMapStatisticsState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolTeamCurrentMapStatisticsState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolTeamCurrentMapStatisticsState.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    kills: jspb.Message.getFieldWithDefault(msg, 2, 0),
    barons: jspb.Message.getFieldWithDefault(msg, 3, 0),
    dragons: jspb.Message.getFieldWithDefault(msg, 4, 0),
    turrets: jspb.Message.getFieldWithDefault(msg, 5, 0),
    inhibitors: jspb.Message.getFieldWithDefault(msg, 6, 0),
    gold: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolTeamCurrentMapStatisticsState}
 */
proto.bragi.LolTeamCurrentMapStatisticsState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolTeamCurrentMapStatisticsState;
  return proto.bragi.LolTeamCurrentMapStatisticsState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolTeamCurrentMapStatisticsState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolTeamCurrentMapStatisticsState}
 */
proto.bragi.LolTeamCurrentMapStatisticsState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamUrn(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setKills(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBarons(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDragons(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTurrets(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInhibitors(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGold(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolTeamCurrentMapStatisticsState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolTeamCurrentMapStatisticsState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolTeamCurrentMapStatisticsState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolTeamCurrentMapStatisticsState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKills();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getBarons();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getDragons();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getTurrets();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getInhibitors();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getGold();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional string team_urn = 1;
 * @return {string}
 */
proto.bragi.LolTeamCurrentMapStatisticsState.prototype.getTeamUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.LolTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.LolTeamCurrentMapStatisticsState.prototype.setTeamUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 kills = 2;
 * @return {number}
 */
proto.bragi.LolTeamCurrentMapStatisticsState.prototype.getKills = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.LolTeamCurrentMapStatisticsState.prototype.setKills = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 barons = 3;
 * @return {number}
 */
proto.bragi.LolTeamCurrentMapStatisticsState.prototype.getBarons = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.LolTeamCurrentMapStatisticsState.prototype.setBarons = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 dragons = 4;
 * @return {number}
 */
proto.bragi.LolTeamCurrentMapStatisticsState.prototype.getDragons = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.LolTeamCurrentMapStatisticsState.prototype.setDragons = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 turrets = 5;
 * @return {number}
 */
proto.bragi.LolTeamCurrentMapStatisticsState.prototype.getTurrets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.LolTeamCurrentMapStatisticsState.prototype.setTurrets = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 inhibitors = 6;
 * @return {number}
 */
proto.bragi.LolTeamCurrentMapStatisticsState.prototype.getInhibitors = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.LolTeamCurrentMapStatisticsState.prototype.setInhibitors = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 gold = 7;
 * @return {number}
 */
proto.bragi.LolTeamCurrentMapStatisticsState.prototype.getGold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.LolTeamCurrentMapStatisticsState.prototype.setGold = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolPlayerCurrentMapStatePartialUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    payload: (f = msg.getPayload()) && proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolPlayerCurrentMapStatePartialUpdate;
  return proto.bragi.LolPlayerCurrentMapStatePartialUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerUrn(value);
      break;
    case 2:
      var value = new proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload;
      reader.readMessage(value,proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolPlayerCurrentMapStatePartialUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  PLAYER_INFO: 1,
  TIMERS: 2,
  STATISTICS: 3,
  MAP_STATISTICS: 4,
  POSITION: 5
};

/**
 * @return {proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.PayloadCase}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.getPayloadCase = function() {
  return /** @type {proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerInfo: (f = msg.getPlayerInfo()) && proto.bragi.LolPlayerInfoState.toObject(includeInstance, f),
    timers: (f = msg.getTimers()) && proto.bragi.LolPlayerCurrentMapTimersState.toObject(includeInstance, f),
    statistics: (f = msg.getStatistics()) && proto.bragi.LolPlayerStatisticsState.toObject(includeInstance, f),
    mapStatistics: (f = msg.getMapStatistics()) && proto.bragi.LolPlayerCurrentMapStatisticsState.toObject(includeInstance, f),
    position: (f = msg.getPosition()) && proto.bragi.LolPosition.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload;
  return proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.LolPlayerInfoState;
      reader.readMessage(value,proto.bragi.LolPlayerInfoState.deserializeBinaryFromReader);
      msg.setPlayerInfo(value);
      break;
    case 2:
      var value = new proto.bragi.LolPlayerCurrentMapTimersState;
      reader.readMessage(value,proto.bragi.LolPlayerCurrentMapTimersState.deserializeBinaryFromReader);
      msg.setTimers(value);
      break;
    case 3:
      var value = new proto.bragi.LolPlayerStatisticsState;
      reader.readMessage(value,proto.bragi.LolPlayerStatisticsState.deserializeBinaryFromReader);
      msg.setStatistics(value);
      break;
    case 4:
      var value = new proto.bragi.LolPlayerCurrentMapStatisticsState;
      reader.readMessage(value,proto.bragi.LolPlayerCurrentMapStatisticsState.deserializeBinaryFromReader);
      msg.setMapStatistics(value);
      break;
    case 5:
      var value = new proto.bragi.LolPosition;
      reader.readMessage(value,proto.bragi.LolPosition.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.LolPlayerInfoState.serializeBinaryToWriter
    );
  }
  f = message.getTimers();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.LolPlayerCurrentMapTimersState.serializeBinaryToWriter
    );
  }
  f = message.getStatistics();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.LolPlayerStatisticsState.serializeBinaryToWriter
    );
  }
  f = message.getMapStatistics();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bragi.LolPlayerCurrentMapStatisticsState.serializeBinaryToWriter
    );
  }
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bragi.LolPosition.serializeBinaryToWriter
    );
  }
};


/**
 * optional LolPlayerInfoState player_info = 1;
 * @return {?proto.bragi.LolPlayerInfoState}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.getPlayerInfo = function() {
  return /** @type{?proto.bragi.LolPlayerInfoState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolPlayerInfoState, 1));
};


/**
 * @param {?proto.bragi.LolPlayerInfoState|undefined} value
 * @return {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload} returns this
*/
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.setPlayerInfo = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload} returns this
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.clearPlayerInfo = function() {
  return this.setPlayerInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.hasPlayerInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LolPlayerCurrentMapTimersState timers = 2;
 * @return {?proto.bragi.LolPlayerCurrentMapTimersState}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.getTimers = function() {
  return /** @type{?proto.bragi.LolPlayerCurrentMapTimersState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolPlayerCurrentMapTimersState, 2));
};


/**
 * @param {?proto.bragi.LolPlayerCurrentMapTimersState|undefined} value
 * @return {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload} returns this
*/
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.setTimers = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload} returns this
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.clearTimers = function() {
  return this.setTimers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.hasTimers = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LolPlayerStatisticsState statistics = 3;
 * @return {?proto.bragi.LolPlayerStatisticsState}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.getStatistics = function() {
  return /** @type{?proto.bragi.LolPlayerStatisticsState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolPlayerStatisticsState, 3));
};


/**
 * @param {?proto.bragi.LolPlayerStatisticsState|undefined} value
 * @return {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload} returns this
*/
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.setStatistics = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload} returns this
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.clearStatistics = function() {
  return this.setStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.hasStatistics = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional LolPlayerCurrentMapStatisticsState map_statistics = 4;
 * @return {?proto.bragi.LolPlayerCurrentMapStatisticsState}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.getMapStatistics = function() {
  return /** @type{?proto.bragi.LolPlayerCurrentMapStatisticsState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolPlayerCurrentMapStatisticsState, 4));
};


/**
 * @param {?proto.bragi.LolPlayerCurrentMapStatisticsState|undefined} value
 * @return {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload} returns this
*/
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.setMapStatistics = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload} returns this
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.clearMapStatistics = function() {
  return this.setMapStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.hasMapStatistics = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional LolPosition position = 5;
 * @return {?proto.bragi.LolPosition}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.getPosition = function() {
  return /** @type{?proto.bragi.LolPosition} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolPosition, 5));
};


/**
 * @param {?proto.bragi.LolPosition|undefined} value
 * @return {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload} returns this
*/
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.setPosition = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload} returns this
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string player_urn = 1;
 * @return {string}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.prototype.getPlayerUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.prototype.setPlayerUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Payload payload = 2;
 * @return {?proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.prototype.getPayload = function() {
  return /** @type{?proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload, 2));
};


/**
 * @param {?proto.bragi.LolPlayerCurrentMapStatePartialUpdate.Payload|undefined} value
 * @return {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate} returns this
*/
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolPlayerCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolPlayerCurrentMapStatePartialUpdate.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolPlayerCurrentMapState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolPlayerCurrentMapState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolPlayerCurrentMapState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPlayerCurrentMapState.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    playerInfo: (f = msg.getPlayerInfo()) && proto.bragi.LolPlayerInfoState.toObject(includeInstance, f),
    timers: (f = msg.getTimers()) && proto.bragi.LolPlayerCurrentMapTimersState.toObject(includeInstance, f),
    statistics: (f = msg.getStatistics()) && proto.bragi.LolPlayerStatisticsState.toObject(includeInstance, f),
    mapStatistics: (f = msg.getMapStatistics()) && proto.bragi.LolPlayerCurrentMapStatisticsState.toObject(includeInstance, f),
    position: (f = msg.getPosition()) && proto.bragi.LolPosition.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolPlayerCurrentMapState}
 */
proto.bragi.LolPlayerCurrentMapState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolPlayerCurrentMapState;
  return proto.bragi.LolPlayerCurrentMapState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolPlayerCurrentMapState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolPlayerCurrentMapState}
 */
proto.bragi.LolPlayerCurrentMapState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerUrn(value);
      break;
    case 2:
      var value = new proto.bragi.LolPlayerInfoState;
      reader.readMessage(value,proto.bragi.LolPlayerInfoState.deserializeBinaryFromReader);
      msg.setPlayerInfo(value);
      break;
    case 3:
      var value = new proto.bragi.LolPlayerCurrentMapTimersState;
      reader.readMessage(value,proto.bragi.LolPlayerCurrentMapTimersState.deserializeBinaryFromReader);
      msg.setTimers(value);
      break;
    case 4:
      var value = new proto.bragi.LolPlayerStatisticsState;
      reader.readMessage(value,proto.bragi.LolPlayerStatisticsState.deserializeBinaryFromReader);
      msg.setStatistics(value);
      break;
    case 5:
      var value = new proto.bragi.LolPlayerCurrentMapStatisticsState;
      reader.readMessage(value,proto.bragi.LolPlayerCurrentMapStatisticsState.deserializeBinaryFromReader);
      msg.setMapStatistics(value);
      break;
    case 6:
      var value = new proto.bragi.LolPosition;
      reader.readMessage(value,proto.bragi.LolPosition.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolPlayerCurrentMapState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolPlayerCurrentMapState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolPlayerCurrentMapState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPlayerCurrentMapState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlayerInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.LolPlayerInfoState.serializeBinaryToWriter
    );
  }
  f = message.getTimers();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.LolPlayerCurrentMapTimersState.serializeBinaryToWriter
    );
  }
  f = message.getStatistics();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bragi.LolPlayerStatisticsState.serializeBinaryToWriter
    );
  }
  f = message.getMapStatistics();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bragi.LolPlayerCurrentMapStatisticsState.serializeBinaryToWriter
    );
  }
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.bragi.LolPosition.serializeBinaryToWriter
    );
  }
};


/**
 * optional string player_urn = 1;
 * @return {string}
 */
proto.bragi.LolPlayerCurrentMapState.prototype.getPlayerUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.LolPlayerCurrentMapState} returns this
 */
proto.bragi.LolPlayerCurrentMapState.prototype.setPlayerUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional LolPlayerInfoState player_info = 2;
 * @return {?proto.bragi.LolPlayerInfoState}
 */
proto.bragi.LolPlayerCurrentMapState.prototype.getPlayerInfo = function() {
  return /** @type{?proto.bragi.LolPlayerInfoState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolPlayerInfoState, 2));
};


/**
 * @param {?proto.bragi.LolPlayerInfoState|undefined} value
 * @return {!proto.bragi.LolPlayerCurrentMapState} returns this
*/
proto.bragi.LolPlayerCurrentMapState.prototype.setPlayerInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolPlayerCurrentMapState} returns this
 */
proto.bragi.LolPlayerCurrentMapState.prototype.clearPlayerInfo = function() {
  return this.setPlayerInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolPlayerCurrentMapState.prototype.hasPlayerInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LolPlayerCurrentMapTimersState timers = 3;
 * @return {?proto.bragi.LolPlayerCurrentMapTimersState}
 */
proto.bragi.LolPlayerCurrentMapState.prototype.getTimers = function() {
  return /** @type{?proto.bragi.LolPlayerCurrentMapTimersState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolPlayerCurrentMapTimersState, 3));
};


/**
 * @param {?proto.bragi.LolPlayerCurrentMapTimersState|undefined} value
 * @return {!proto.bragi.LolPlayerCurrentMapState} returns this
*/
proto.bragi.LolPlayerCurrentMapState.prototype.setTimers = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolPlayerCurrentMapState} returns this
 */
proto.bragi.LolPlayerCurrentMapState.prototype.clearTimers = function() {
  return this.setTimers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolPlayerCurrentMapState.prototype.hasTimers = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional LolPlayerStatisticsState statistics = 4;
 * @return {?proto.bragi.LolPlayerStatisticsState}
 */
proto.bragi.LolPlayerCurrentMapState.prototype.getStatistics = function() {
  return /** @type{?proto.bragi.LolPlayerStatisticsState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolPlayerStatisticsState, 4));
};


/**
 * @param {?proto.bragi.LolPlayerStatisticsState|undefined} value
 * @return {!proto.bragi.LolPlayerCurrentMapState} returns this
*/
proto.bragi.LolPlayerCurrentMapState.prototype.setStatistics = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolPlayerCurrentMapState} returns this
 */
proto.bragi.LolPlayerCurrentMapState.prototype.clearStatistics = function() {
  return this.setStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolPlayerCurrentMapState.prototype.hasStatistics = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional LolPlayerCurrentMapStatisticsState map_statistics = 5;
 * @return {?proto.bragi.LolPlayerCurrentMapStatisticsState}
 */
proto.bragi.LolPlayerCurrentMapState.prototype.getMapStatistics = function() {
  return /** @type{?proto.bragi.LolPlayerCurrentMapStatisticsState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolPlayerCurrentMapStatisticsState, 5));
};


/**
 * @param {?proto.bragi.LolPlayerCurrentMapStatisticsState|undefined} value
 * @return {!proto.bragi.LolPlayerCurrentMapState} returns this
*/
proto.bragi.LolPlayerCurrentMapState.prototype.setMapStatistics = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolPlayerCurrentMapState} returns this
 */
proto.bragi.LolPlayerCurrentMapState.prototype.clearMapStatistics = function() {
  return this.setMapStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolPlayerCurrentMapState.prototype.hasMapStatistics = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional LolPosition position = 6;
 * @return {?proto.bragi.LolPosition}
 */
proto.bragi.LolPlayerCurrentMapState.prototype.getPosition = function() {
  return /** @type{?proto.bragi.LolPosition} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolPosition, 6));
};


/**
 * @param {?proto.bragi.LolPosition|undefined} value
 * @return {!proto.bragi.LolPlayerCurrentMapState} returns this
*/
proto.bragi.LolPlayerCurrentMapState.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolPlayerCurrentMapState} returns this
 */
proto.bragi.LolPlayerCurrentMapState.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolPlayerCurrentMapState.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolPlayerCurrentMapStatisticsState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolPlayerCurrentMapStatisticsState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    alive: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    health: jspb.Message.getFieldWithDefault(msg, 3, 0),
    maxHealth: jspb.Message.getFieldWithDefault(msg, 4, 0),
    totalGold: jspb.Message.getFieldWithDefault(msg, 5, 0),
    mana: jspb.Message.getFieldWithDefault(msg, 6, 0),
    maxMana: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolPlayerCurrentMapStatisticsState}
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolPlayerCurrentMapStatisticsState;
  return proto.bragi.LolPlayerCurrentMapStatisticsState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolPlayerCurrentMapStatisticsState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolPlayerCurrentMapStatisticsState}
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerUrn(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAlive(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHealth(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxHealth(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalGold(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMana(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxMana(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolPlayerCurrentMapStatisticsState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolPlayerCurrentMapStatisticsState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAlive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getHealth();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getMaxHealth();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getTotalGold();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getMana();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getMaxMana();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional string player_urn = 1;
 * @return {string}
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.prototype.getPlayerUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.LolPlayerCurrentMapStatisticsState} returns this
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.prototype.setPlayerUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool alive = 2;
 * @return {boolean}
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.prototype.getAlive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bragi.LolPlayerCurrentMapStatisticsState} returns this
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.prototype.setAlive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional uint32 health = 3;
 * @return {number}
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.prototype.getHealth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolPlayerCurrentMapStatisticsState} returns this
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.prototype.setHealth = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 max_health = 4;
 * @return {number}
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.prototype.getMaxHealth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolPlayerCurrentMapStatisticsState} returns this
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.prototype.setMaxHealth = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 total_gold = 5;
 * @return {number}
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.prototype.getTotalGold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolPlayerCurrentMapStatisticsState} returns this
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.prototype.setTotalGold = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 mana = 6;
 * @return {number}
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.prototype.getMana = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolPlayerCurrentMapStatisticsState} returns this
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.prototype.setMana = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 max_mana = 7;
 * @return {number}
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.prototype.getMaxMana = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolPlayerCurrentMapStatisticsState} returns this
 */
proto.bragi.LolPlayerCurrentMapStatisticsState.prototype.setMaxMana = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolPlayerCurrentMapTimersState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolPlayerCurrentMapTimersState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolPlayerCurrentMapTimersState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPlayerCurrentMapTimersState.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    respawnTimer: (f = msg.getRespawnTimer()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolPlayerCurrentMapTimersState}
 */
proto.bragi.LolPlayerCurrentMapTimersState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolPlayerCurrentMapTimersState;
  return proto.bragi.LolPlayerCurrentMapTimersState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolPlayerCurrentMapTimersState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolPlayerCurrentMapTimersState}
 */
proto.bragi.LolPlayerCurrentMapTimersState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerUrn(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setRespawnTimer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolPlayerCurrentMapTimersState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolPlayerCurrentMapTimersState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolPlayerCurrentMapTimersState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPlayerCurrentMapTimersState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRespawnTimer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional string player_urn = 1;
 * @return {string}
 */
proto.bragi.LolPlayerCurrentMapTimersState.prototype.getPlayerUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.LolPlayerCurrentMapTimersState} returns this
 */
proto.bragi.LolPlayerCurrentMapTimersState.prototype.setPlayerUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Duration respawn_timer = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.bragi.LolPlayerCurrentMapTimersState.prototype.getRespawnTimer = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.bragi.LolPlayerCurrentMapTimersState} returns this
*/
proto.bragi.LolPlayerCurrentMapTimersState.prototype.setRespawnTimer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolPlayerCurrentMapTimersState} returns this
 */
proto.bragi.LolPlayerCurrentMapTimersState.prototype.clearRespawnTimer = function() {
  return this.setRespawnTimer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolPlayerCurrentMapTimersState.prototype.hasRespawnTimer = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolTeamPreviousMapState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolTeamPreviousMapState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolTeamPreviousMapState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolTeamPreviousMapState.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    faction: jspb.Message.getFieldWithDefault(msg, 2, 0),
    kills: jspb.Message.getFieldWithDefault(msg, 3, 0),
    barons: jspb.Message.getFieldWithDefault(msg, 4, 0),
    dragons: jspb.Message.getFieldWithDefault(msg, 5, 0),
    turrets: jspb.Message.getFieldWithDefault(msg, 6, 0),
    inhibitors: jspb.Message.getFieldWithDefault(msg, 7, 0),
    gold: jspb.Message.getFieldWithDefault(msg, 8, 0),
    won: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    playersMap: (f = msg.getPlayersMap()) ? f.toObject(includeInstance, proto.bragi.LolPlayerPreviousMapState.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolTeamPreviousMapState}
 */
proto.bragi.LolTeamPreviousMapState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolTeamPreviousMapState;
  return proto.bragi.LolTeamPreviousMapState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolTeamPreviousMapState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolTeamPreviousMapState}
 */
proto.bragi.LolTeamPreviousMapState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamUrn(value);
      break;
    case 2:
      var value = /** @type {!proto.bragi.LolFaction} */ (reader.readEnum());
      msg.setFaction(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setKills(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBarons(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDragons(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTurrets(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInhibitors(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGold(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWon(value);
      break;
    case 10:
      var value = msg.getPlayersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.bragi.LolPlayerPreviousMapState.deserializeBinaryFromReader, "", new proto.bragi.LolPlayerPreviousMapState());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolTeamPreviousMapState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolTeamPreviousMapState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolTeamPreviousMapState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolTeamPreviousMapState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFaction();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getKills();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getBarons();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getDragons();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getTurrets();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getInhibitors();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getGold();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getPlayersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(10, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.bragi.LolPlayerPreviousMapState.serializeBinaryToWriter);
  }
};


/**
 * optional string team_urn = 1;
 * @return {string}
 */
proto.bragi.LolTeamPreviousMapState.prototype.getTeamUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.LolTeamPreviousMapState} returns this
 */
proto.bragi.LolTeamPreviousMapState.prototype.setTeamUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional LolFaction faction = 2;
 * @return {!proto.bragi.LolFaction}
 */
proto.bragi.LolTeamPreviousMapState.prototype.getFaction = function() {
  return /** @type {!proto.bragi.LolFaction} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bragi.LolFaction} value
 * @return {!proto.bragi.LolTeamPreviousMapState} returns this
 */
proto.bragi.LolTeamPreviousMapState.prototype.setFaction = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional uint32 kills = 3;
 * @return {number}
 */
proto.bragi.LolTeamPreviousMapState.prototype.getKills = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolTeamPreviousMapState} returns this
 */
proto.bragi.LolTeamPreviousMapState.prototype.setKills = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 barons = 4;
 * @return {number}
 */
proto.bragi.LolTeamPreviousMapState.prototype.getBarons = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolTeamPreviousMapState} returns this
 */
proto.bragi.LolTeamPreviousMapState.prototype.setBarons = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 dragons = 5;
 * @return {number}
 */
proto.bragi.LolTeamPreviousMapState.prototype.getDragons = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolTeamPreviousMapState} returns this
 */
proto.bragi.LolTeamPreviousMapState.prototype.setDragons = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 turrets = 6;
 * @return {number}
 */
proto.bragi.LolTeamPreviousMapState.prototype.getTurrets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolTeamPreviousMapState} returns this
 */
proto.bragi.LolTeamPreviousMapState.prototype.setTurrets = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 inhibitors = 7;
 * @return {number}
 */
proto.bragi.LolTeamPreviousMapState.prototype.getInhibitors = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolTeamPreviousMapState} returns this
 */
proto.bragi.LolTeamPreviousMapState.prototype.setInhibitors = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 gold = 8;
 * @return {number}
 */
proto.bragi.LolTeamPreviousMapState.prototype.getGold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolTeamPreviousMapState} returns this
 */
proto.bragi.LolTeamPreviousMapState.prototype.setGold = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool won = 9;
 * @return {boolean}
 */
proto.bragi.LolTeamPreviousMapState.prototype.getWon = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bragi.LolTeamPreviousMapState} returns this
 */
proto.bragi.LolTeamPreviousMapState.prototype.setWon = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.bragi.LolTeamPreviousMapState} returns this
 */
proto.bragi.LolTeamPreviousMapState.prototype.clearWon = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolTeamPreviousMapState.prototype.hasWon = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * map<string, LolPlayerPreviousMapState> players = 10;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.bragi.LolPlayerPreviousMapState>}
 */
proto.bragi.LolTeamPreviousMapState.prototype.getPlayersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.bragi.LolPlayerPreviousMapState>} */ (
      jspb.Message.getMapField(this, 10, opt_noLazyCreate,
      proto.bragi.LolPlayerPreviousMapState));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.bragi.LolTeamPreviousMapState} returns this
 */
proto.bragi.LolTeamPreviousMapState.prototype.clearPlayersMap = function() {
  this.getPlayersMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolPlayerPreviousMapState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolPlayerPreviousMapState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolPlayerPreviousMapState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPlayerPreviousMapState.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    playerInfo: (f = msg.getPlayerInfo()) && proto.bragi.LolPlayerInfoState.toObject(includeInstance, f),
    statistics: (f = msg.getStatistics()) && proto.bragi.LolPlayerStatisticsState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolPlayerPreviousMapState}
 */
proto.bragi.LolPlayerPreviousMapState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolPlayerPreviousMapState;
  return proto.bragi.LolPlayerPreviousMapState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolPlayerPreviousMapState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolPlayerPreviousMapState}
 */
proto.bragi.LolPlayerPreviousMapState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerUrn(value);
      break;
    case 2:
      var value = new proto.bragi.LolPlayerInfoState;
      reader.readMessage(value,proto.bragi.LolPlayerInfoState.deserializeBinaryFromReader);
      msg.setPlayerInfo(value);
      break;
    case 3:
      var value = new proto.bragi.LolPlayerStatisticsState;
      reader.readMessage(value,proto.bragi.LolPlayerStatisticsState.deserializeBinaryFromReader);
      msg.setStatistics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolPlayerPreviousMapState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolPlayerPreviousMapState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolPlayerPreviousMapState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPlayerPreviousMapState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlayerInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.LolPlayerInfoState.serializeBinaryToWriter
    );
  }
  f = message.getStatistics();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.LolPlayerStatisticsState.serializeBinaryToWriter
    );
  }
};


/**
 * optional string player_urn = 1;
 * @return {string}
 */
proto.bragi.LolPlayerPreviousMapState.prototype.getPlayerUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.LolPlayerPreviousMapState} returns this
 */
proto.bragi.LolPlayerPreviousMapState.prototype.setPlayerUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional LolPlayerInfoState player_info = 2;
 * @return {?proto.bragi.LolPlayerInfoState}
 */
proto.bragi.LolPlayerPreviousMapState.prototype.getPlayerInfo = function() {
  return /** @type{?proto.bragi.LolPlayerInfoState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolPlayerInfoState, 2));
};


/**
 * @param {?proto.bragi.LolPlayerInfoState|undefined} value
 * @return {!proto.bragi.LolPlayerPreviousMapState} returns this
*/
proto.bragi.LolPlayerPreviousMapState.prototype.setPlayerInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolPlayerPreviousMapState} returns this
 */
proto.bragi.LolPlayerPreviousMapState.prototype.clearPlayerInfo = function() {
  return this.setPlayerInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolPlayerPreviousMapState.prototype.hasPlayerInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LolPlayerStatisticsState statistics = 3;
 * @return {?proto.bragi.LolPlayerStatisticsState}
 */
proto.bragi.LolPlayerPreviousMapState.prototype.getStatistics = function() {
  return /** @type{?proto.bragi.LolPlayerStatisticsState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.LolPlayerStatisticsState, 3));
};


/**
 * @param {?proto.bragi.LolPlayerStatisticsState|undefined} value
 * @return {!proto.bragi.LolPlayerPreviousMapState} returns this
*/
proto.bragi.LolPlayerPreviousMapState.prototype.setStatistics = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.LolPlayerPreviousMapState} returns this
 */
proto.bragi.LolPlayerPreviousMapState.prototype.clearStatistics = function() {
  return this.setStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolPlayerPreviousMapState.prototype.hasStatistics = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolPlayerInfoState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolPlayerInfoState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolPlayerInfoState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPlayerInfoState.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    slotId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    extName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    championId: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolPlayerInfoState}
 */
proto.bragi.LolPlayerInfoState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolPlayerInfoState;
  return proto.bragi.LolPlayerInfoState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolPlayerInfoState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolPlayerInfoState}
 */
proto.bragi.LolPlayerInfoState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerUrn(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSlotId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChampionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolPlayerInfoState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolPlayerInfoState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolPlayerInfoState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPlayerInfoState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSlotId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getExtName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional string player_urn = 1;
 * @return {string}
 */
proto.bragi.LolPlayerInfoState.prototype.getPlayerUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.LolPlayerInfoState} returns this
 */
proto.bragi.LolPlayerInfoState.prototype.setPlayerUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 slot_id = 2;
 * @return {number}
 */
proto.bragi.LolPlayerInfoState.prototype.getSlotId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolPlayerInfoState} returns this
 */
proto.bragi.LolPlayerInfoState.prototype.setSlotId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string ext_name = 3;
 * @return {string}
 */
proto.bragi.LolPlayerInfoState.prototype.getExtName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.LolPlayerInfoState} returns this
 */
proto.bragi.LolPlayerInfoState.prototype.setExtName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 champion_id = 4;
 * @return {number}
 */
proto.bragi.LolPlayerInfoState.prototype.getChampionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolPlayerInfoState} returns this
 */
proto.bragi.LolPlayerInfoState.prototype.setChampionId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.bragi.LolPlayerInfoState} returns this
 */
proto.bragi.LolPlayerInfoState.prototype.clearChampionId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.LolPlayerInfoState.prototype.hasChampionId = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolPlayerStatisticsState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolPlayerStatisticsState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolPlayerStatisticsState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPlayerStatisticsState.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    kills: jspb.Message.getFieldWithDefault(msg, 2, 0),
    deaths: jspb.Message.getFieldWithDefault(msg, 3, 0),
    assists: jspb.Message.getFieldWithDefault(msg, 4, 0),
    creepScore: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolPlayerStatisticsState}
 */
proto.bragi.LolPlayerStatisticsState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolPlayerStatisticsState;
  return proto.bragi.LolPlayerStatisticsState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolPlayerStatisticsState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolPlayerStatisticsState}
 */
proto.bragi.LolPlayerStatisticsState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerUrn(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setKills(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDeaths(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAssists(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCreepScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolPlayerStatisticsState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolPlayerStatisticsState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolPlayerStatisticsState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPlayerStatisticsState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKills();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getDeaths();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getAssists();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getCreepScore();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional string player_urn = 1;
 * @return {string}
 */
proto.bragi.LolPlayerStatisticsState.prototype.getPlayerUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.LolPlayerStatisticsState} returns this
 */
proto.bragi.LolPlayerStatisticsState.prototype.setPlayerUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 kills = 2;
 * @return {number}
 */
proto.bragi.LolPlayerStatisticsState.prototype.getKills = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolPlayerStatisticsState} returns this
 */
proto.bragi.LolPlayerStatisticsState.prototype.setKills = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 deaths = 3;
 * @return {number}
 */
proto.bragi.LolPlayerStatisticsState.prototype.getDeaths = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolPlayerStatisticsState} returns this
 */
proto.bragi.LolPlayerStatisticsState.prototype.setDeaths = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 assists = 4;
 * @return {number}
 */
proto.bragi.LolPlayerStatisticsState.prototype.getAssists = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolPlayerStatisticsState} returns this
 */
proto.bragi.LolPlayerStatisticsState.prototype.setAssists = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 creep_score = 5;
 * @return {number}
 */
proto.bragi.LolPlayerStatisticsState.prototype.getCreepScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolPlayerStatisticsState} returns this
 */
proto.bragi.LolPlayerStatisticsState.prototype.setCreepScore = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bragi.LolTurrets.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolTurrets.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolTurrets.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolTurrets} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolTurrets.toObject = function(includeInstance, msg) {
  var f, obj = {
    turretsList: jspb.Message.toObjectList(msg.getTurretsList(),
    proto.bragi.LolTurret.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolTurrets}
 */
proto.bragi.LolTurrets.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolTurrets;
  return proto.bragi.LolTurrets.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolTurrets} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolTurrets}
 */
proto.bragi.LolTurrets.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.LolTurret;
      reader.readMessage(value,proto.bragi.LolTurret.deserializeBinaryFromReader);
      msg.addTurrets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolTurrets.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolTurrets.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolTurrets} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolTurrets.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTurretsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bragi.LolTurret.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LolTurret turrets = 1;
 * @return {!Array<!proto.bragi.LolTurret>}
 */
proto.bragi.LolTurrets.prototype.getTurretsList = function() {
  return /** @type{!Array<!proto.bragi.LolTurret>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bragi.LolTurret, 1));
};


/**
 * @param {!Array<!proto.bragi.LolTurret>} value
 * @return {!proto.bragi.LolTurrets} returns this
*/
proto.bragi.LolTurrets.prototype.setTurretsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bragi.LolTurret=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bragi.LolTurret}
 */
proto.bragi.LolTurrets.prototype.addTurrets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bragi.LolTurret, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bragi.LolTurrets} returns this
 */
proto.bragi.LolTurrets.prototype.clearTurretsList = function() {
  return this.setTurretsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bragi.LolInhibitors.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolInhibitors.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolInhibitors.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolInhibitors} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolInhibitors.toObject = function(includeInstance, msg) {
  var f, obj = {
    inhibitorsList: jspb.Message.toObjectList(msg.getInhibitorsList(),
    proto.bragi.LolInhibitor.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolInhibitors}
 */
proto.bragi.LolInhibitors.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolInhibitors;
  return proto.bragi.LolInhibitors.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolInhibitors} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolInhibitors}
 */
proto.bragi.LolInhibitors.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.LolInhibitor;
      reader.readMessage(value,proto.bragi.LolInhibitor.deserializeBinaryFromReader);
      msg.addInhibitors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolInhibitors.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolInhibitors.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolInhibitors} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolInhibitors.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInhibitorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bragi.LolInhibitor.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LolInhibitor inhibitors = 1;
 * @return {!Array<!proto.bragi.LolInhibitor>}
 */
proto.bragi.LolInhibitors.prototype.getInhibitorsList = function() {
  return /** @type{!Array<!proto.bragi.LolInhibitor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bragi.LolInhibitor, 1));
};


/**
 * @param {!Array<!proto.bragi.LolInhibitor>} value
 * @return {!proto.bragi.LolInhibitors} returns this
*/
proto.bragi.LolInhibitors.prototype.setInhibitorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bragi.LolInhibitor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bragi.LolInhibitor}
 */
proto.bragi.LolInhibitors.prototype.addInhibitors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bragi.LolInhibitor, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bragi.LolInhibitors} returns this
 */
proto.bragi.LolInhibitors.prototype.clearInhibitorsList = function() {
  return this.setInhibitorsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolTurret.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolTurret.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolTurret} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolTurret.toObject = function(includeInstance, msg) {
  var f, obj = {
    lane: jspb.Message.getFieldWithDefault(msg, 1, 0),
    faction: jspb.Message.getFieldWithDefault(msg, 2, 0),
    tier: jspb.Message.getFieldWithDefault(msg, 3, 0),
    alive: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolTurret}
 */
proto.bragi.LolTurret.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolTurret;
  return proto.bragi.LolTurret.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolTurret} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolTurret}
 */
proto.bragi.LolTurret.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.bragi.LolLane} */ (reader.readEnum());
      msg.setLane(value);
      break;
    case 2:
      var value = /** @type {!proto.bragi.LolFaction} */ (reader.readEnum());
      msg.setFaction(value);
      break;
    case 3:
      var value = /** @type {!proto.bragi.LolTurretTier} */ (reader.readEnum());
      msg.setTier(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAlive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolTurret.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolTurret.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolTurret} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolTurret.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLane();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFaction();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTier();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getAlive();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional LolLane lane = 1;
 * @return {!proto.bragi.LolLane}
 */
proto.bragi.LolTurret.prototype.getLane = function() {
  return /** @type {!proto.bragi.LolLane} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.bragi.LolLane} value
 * @return {!proto.bragi.LolTurret} returns this
 */
proto.bragi.LolTurret.prototype.setLane = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional LolFaction faction = 2;
 * @return {!proto.bragi.LolFaction}
 */
proto.bragi.LolTurret.prototype.getFaction = function() {
  return /** @type {!proto.bragi.LolFaction} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bragi.LolFaction} value
 * @return {!proto.bragi.LolTurret} returns this
 */
proto.bragi.LolTurret.prototype.setFaction = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional LolTurretTier tier = 3;
 * @return {!proto.bragi.LolTurretTier}
 */
proto.bragi.LolTurret.prototype.getTier = function() {
  return /** @type {!proto.bragi.LolTurretTier} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.bragi.LolTurretTier} value
 * @return {!proto.bragi.LolTurret} returns this
 */
proto.bragi.LolTurret.prototype.setTier = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bool alive = 4;
 * @return {boolean}
 */
proto.bragi.LolTurret.prototype.getAlive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bragi.LolTurret} returns this
 */
proto.bragi.LolTurret.prototype.setAlive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolInhibitor.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolInhibitor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolInhibitor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolInhibitor.toObject = function(includeInstance, msg) {
  var f, obj = {
    lane: jspb.Message.getFieldWithDefault(msg, 1, 0),
    faction: jspb.Message.getFieldWithDefault(msg, 2, 0),
    alive: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolInhibitor}
 */
proto.bragi.LolInhibitor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolInhibitor;
  return proto.bragi.LolInhibitor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolInhibitor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolInhibitor}
 */
proto.bragi.LolInhibitor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.bragi.LolLane} */ (reader.readEnum());
      msg.setLane(value);
      break;
    case 2:
      var value = /** @type {!proto.bragi.LolFaction} */ (reader.readEnum());
      msg.setFaction(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAlive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolInhibitor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolInhibitor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolInhibitor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolInhibitor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLane();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFaction();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAlive();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional LolLane lane = 1;
 * @return {!proto.bragi.LolLane}
 */
proto.bragi.LolInhibitor.prototype.getLane = function() {
  return /** @type {!proto.bragi.LolLane} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.bragi.LolLane} value
 * @return {!proto.bragi.LolInhibitor} returns this
 */
proto.bragi.LolInhibitor.prototype.setLane = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional LolFaction faction = 2;
 * @return {!proto.bragi.LolFaction}
 */
proto.bragi.LolInhibitor.prototype.getFaction = function() {
  return /** @type {!proto.bragi.LolFaction} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bragi.LolFaction} value
 * @return {!proto.bragi.LolInhibitor} returns this
 */
proto.bragi.LolInhibitor.prototype.setFaction = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool alive = 3;
 * @return {boolean}
 */
proto.bragi.LolInhibitor.prototype.getAlive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bragi.LolInhibitor} returns this
 */
proto.bragi.LolInhibitor.prototype.setAlive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.LolPosition.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.LolPosition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.LolPosition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPosition.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.LolPosition}
 */
proto.bragi.LolPosition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.LolPosition;
  return proto.bragi.LolPosition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.LolPosition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.LolPosition}
 */
proto.bragi.LolPosition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.LolPosition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.LolPosition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.LolPosition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.LolPosition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.bragi.LolPosition.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolPosition} returns this
 */
proto.bragi.LolPosition.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.bragi.LolPosition.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.LolPosition} returns this
 */
proto.bragi.LolPosition.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.bragi.LolFaction = {
  LOL_FACTION_UNSPECIFIED: 0,
  LOL_FACTION_BLUE: 1,
  LOL_FACTION_RED: 2
};

/**
 * @enum {number}
 */
proto.bragi.LolLane = {
  LOL_LANE_UNSPECIFIED: 0,
  LOL_LANE_TOP: 1,
  LOL_LANE_MID: 2,
  LOL_LANE_BOT: 3
};

/**
 * @enum {number}
 */
proto.bragi.LolTurretTier = {
  LOL_TURRET_TIER_UNSPECIFIED: 0,
  LOL_TURRET_TIER_1: 1,
  LOL_TURRET_TIER_2: 2,
  LOL_TURRET_TIER_3: 3,
  LOL_TURRET_TIER_4: 4
};

goog.object.extend(exports, proto.bragi);
