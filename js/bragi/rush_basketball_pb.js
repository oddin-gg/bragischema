// source: bragi/rush_basketball.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var bragi_common_pb = require('../bragi/common_pb.js');
goog.object.extend(proto, bragi_common_pb);
goog.exportSymbol('proto.bragi.RushBasketballCurrentMapScoreState', null, global);
goog.exportSymbol('proto.bragi.RushBasketballCurrentMapState', null, global);
goog.exportSymbol('proto.bragi.RushBasketballCurrentMapStatePartialUpdate', null, global);
goog.exportSymbol('proto.bragi.RushBasketballCurrentMapStatePartialUpdate.UpdateCase', null, global);
goog.exportSymbol('proto.bragi.RushBasketballCurrentMapTimeState', null, global);
goog.exportSymbol('proto.bragi.RushBasketballEventType', null, global);
goog.exportSymbol('proto.bragi.RushBasketballMatchMessage', null, global);
goog.exportSymbol('proto.bragi.RushBasketballMatchMessage.Payload', null, global);
goog.exportSymbol('proto.bragi.RushBasketballMatchMessage.Payload.PayloadCase', null, global);
goog.exportSymbol('proto.bragi.RushBasketballMatchSnapshot', null, global);
goog.exportSymbol('proto.bragi.RushBasketballMatchState', null, global);
goog.exportSymbol('proto.bragi.RushBasketballMatchStatePartialUpdate', null, global);
goog.exportSymbol('proto.bragi.RushBasketballMatchStatePartialUpdate.UpdateCase', null, global);
goog.exportSymbol('proto.bragi.RushBasketballMatchStatePartialUpdates', null, global);
goog.exportSymbol('proto.bragi.RushBasketballMatchUpdate', null, global);
goog.exportSymbol('proto.bragi.RushBasketballMatchUpdate.Payload', null, global);
goog.exportSymbol('proto.bragi.RushBasketballMatchUpdate.Payload.PayloadCase', null, global);
goog.exportSymbol('proto.bragi.RushBasketballPeriod', null, global);
goog.exportSymbol('proto.bragi.RushBasketballPeriodPoints', null, global);
goog.exportSymbol('proto.bragi.RushBasketballPlayerCurrentMapState', null, global);
goog.exportSymbol('proto.bragi.RushBasketballTeamCurrentMapState', null, global);
goog.exportSymbol('proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate', null, global);
goog.exportSymbol('proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload', null, global);
goog.exportSymbol('proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.PayloadCase', null, global);
goog.exportSymbol('proto.bragi.RushBasketballTeamCurrentMapStatisticsState', null, global);
goog.exportSymbol('proto.bragi.RushBasketballTimelineEvent', null, global);
goog.exportSymbol('proto.bragi.RushBasketballTimelineState', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballMatchMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushBasketballMatchMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballMatchMessage.displayName = 'proto.bragi.RushBasketballMatchMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballMatchMessage.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.RushBasketballMatchMessage.Payload.oneofGroups_);
};
goog.inherits(proto.bragi.RushBasketballMatchMessage.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballMatchMessage.Payload.displayName = 'proto.bragi.RushBasketballMatchMessage.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballMatchSnapshot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bragi.RushBasketballMatchSnapshot.repeatedFields_, null);
};
goog.inherits(proto.bragi.RushBasketballMatchSnapshot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballMatchSnapshot.displayName = 'proto.bragi.RushBasketballMatchSnapshot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballMatchUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushBasketballMatchUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballMatchUpdate.displayName = 'proto.bragi.RushBasketballMatchUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballMatchUpdate.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.RushBasketballMatchUpdate.Payload.oneofGroups_);
};
goog.inherits(proto.bragi.RushBasketballMatchUpdate.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballMatchUpdate.Payload.displayName = 'proto.bragi.RushBasketballMatchUpdate.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballMatchStatePartialUpdates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bragi.RushBasketballMatchStatePartialUpdates.repeatedFields_, null);
};
goog.inherits(proto.bragi.RushBasketballMatchStatePartialUpdates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballMatchStatePartialUpdates.displayName = 'proto.bragi.RushBasketballMatchStatePartialUpdates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballMatchStatePartialUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.RushBasketballMatchStatePartialUpdate.oneofGroups_);
};
goog.inherits(proto.bragi.RushBasketballMatchStatePartialUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballMatchStatePartialUpdate.displayName = 'proto.bragi.RushBasketballMatchStatePartialUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballMatchState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushBasketballMatchState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballMatchState.displayName = 'proto.bragi.RushBasketballMatchState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballTimelineState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bragi.RushBasketballTimelineState.repeatedFields_, null);
};
goog.inherits(proto.bragi.RushBasketballTimelineState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballTimelineState.displayName = 'proto.bragi.RushBasketballTimelineState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballTimelineEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushBasketballTimelineEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballTimelineEvent.displayName = 'proto.bragi.RushBasketballTimelineEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.RushBasketballCurrentMapStatePartialUpdate.oneofGroups_);
};
goog.inherits(proto.bragi.RushBasketballCurrentMapStatePartialUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballCurrentMapStatePartialUpdate.displayName = 'proto.bragi.RushBasketballCurrentMapStatePartialUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballCurrentMapState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushBasketballCurrentMapState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballCurrentMapState.displayName = 'proto.bragi.RushBasketballCurrentMapState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballCurrentMapTimeState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushBasketballCurrentMapTimeState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballCurrentMapTimeState.displayName = 'proto.bragi.RushBasketballCurrentMapTimeState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballCurrentMapScoreState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushBasketballCurrentMapScoreState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballCurrentMapScoreState.displayName = 'proto.bragi.RushBasketballCurrentMapScoreState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.displayName = 'proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.oneofGroups_);
};
goog.inherits(proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.displayName = 'proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballTeamCurrentMapState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushBasketballTeamCurrentMapState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballTeamCurrentMapState.displayName = 'proto.bragi.RushBasketballTeamCurrentMapState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballPlayerCurrentMapState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushBasketballPlayerCurrentMapState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballPlayerCurrentMapState.displayName = 'proto.bragi.RushBasketballPlayerCurrentMapState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bragi.RushBasketballTeamCurrentMapStatisticsState.repeatedFields_, null);
};
goog.inherits(proto.bragi.RushBasketballTeamCurrentMapStatisticsState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballTeamCurrentMapStatisticsState.displayName = 'proto.bragi.RushBasketballTeamCurrentMapStatisticsState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushBasketballPeriodPoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushBasketballPeriodPoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushBasketballPeriodPoints.displayName = 'proto.bragi.RushBasketballPeriodPoints';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballMatchMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballMatchMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballMatchMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballMatchMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    dataStatus: jspb.Message.getFieldWithDefault(msg, 4, 0),
    payload: (f = msg.getPayload()) && proto.bragi.RushBasketballMatchMessage.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballMatchMessage}
 */
proto.bragi.RushBasketballMatchMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballMatchMessage;
  return proto.bragi.RushBasketballMatchMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballMatchMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballMatchMessage}
 */
proto.bragi.RushBasketballMatchMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatchUrn(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 4:
      var value = /** @type {!proto.bragi.DataStatus} */ (reader.readEnum());
      msg.setDataStatus(value);
      break;
    case 5:
      var value = new proto.bragi.RushBasketballMatchMessage.Payload;
      reader.readMessage(value,proto.bragi.RushBasketballMatchMessage.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballMatchMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballMatchMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballMatchMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballMatchMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDataStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bragi.RushBasketballMatchMessage.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.RushBasketballMatchMessage.Payload.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.bragi.RushBasketballMatchMessage.Payload.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  SNAPSHOT: 1,
  UPDATE: 2
};

/**
 * @return {proto.bragi.RushBasketballMatchMessage.Payload.PayloadCase}
 */
proto.bragi.RushBasketballMatchMessage.Payload.prototype.getPayloadCase = function() {
  return /** @type {proto.bragi.RushBasketballMatchMessage.Payload.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.bragi.RushBasketballMatchMessage.Payload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballMatchMessage.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballMatchMessage.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballMatchMessage.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballMatchMessage.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    snapshot: (f = msg.getSnapshot()) && proto.bragi.RushBasketballMatchSnapshot.toObject(includeInstance, f),
    update: (f = msg.getUpdate()) && proto.bragi.RushBasketballMatchUpdate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballMatchMessage.Payload}
 */
proto.bragi.RushBasketballMatchMessage.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballMatchMessage.Payload;
  return proto.bragi.RushBasketballMatchMessage.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballMatchMessage.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballMatchMessage.Payload}
 */
proto.bragi.RushBasketballMatchMessage.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushBasketballMatchSnapshot;
      reader.readMessage(value,proto.bragi.RushBasketballMatchSnapshot.deserializeBinaryFromReader);
      msg.setSnapshot(value);
      break;
    case 2:
      var value = new proto.bragi.RushBasketballMatchUpdate;
      reader.readMessage(value,proto.bragi.RushBasketballMatchUpdate.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballMatchMessage.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballMatchMessage.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballMatchMessage.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballMatchMessage.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSnapshot();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.RushBasketballMatchSnapshot.serializeBinaryToWriter
    );
  }
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushBasketballMatchUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * optional RushBasketballMatchSnapshot snapshot = 1;
 * @return {?proto.bragi.RushBasketballMatchSnapshot}
 */
proto.bragi.RushBasketballMatchMessage.Payload.prototype.getSnapshot = function() {
  return /** @type{?proto.bragi.RushBasketballMatchSnapshot} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballMatchSnapshot, 1));
};


/**
 * @param {?proto.bragi.RushBasketballMatchSnapshot|undefined} value
 * @return {!proto.bragi.RushBasketballMatchMessage.Payload} returns this
*/
proto.bragi.RushBasketballMatchMessage.Payload.prototype.setSnapshot = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.RushBasketballMatchMessage.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballMatchMessage.Payload} returns this
 */
proto.bragi.RushBasketballMatchMessage.Payload.prototype.clearSnapshot = function() {
  return this.setSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballMatchMessage.Payload.prototype.hasSnapshot = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RushBasketballMatchUpdate update = 2;
 * @return {?proto.bragi.RushBasketballMatchUpdate}
 */
proto.bragi.RushBasketballMatchMessage.Payload.prototype.getUpdate = function() {
  return /** @type{?proto.bragi.RushBasketballMatchUpdate} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballMatchUpdate, 2));
};


/**
 * @param {?proto.bragi.RushBasketballMatchUpdate|undefined} value
 * @return {!proto.bragi.RushBasketballMatchMessage.Payload} returns this
*/
proto.bragi.RushBasketballMatchMessage.Payload.prototype.setUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.RushBasketballMatchMessage.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballMatchMessage.Payload} returns this
 */
proto.bragi.RushBasketballMatchMessage.Payload.prototype.clearUpdate = function() {
  return this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballMatchMessage.Payload.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string match_urn = 1;
 * @return {string}
 */
proto.bragi.RushBasketballMatchMessage.prototype.getMatchUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushBasketballMatchMessage} returns this
 */
proto.bragi.RushBasketballMatchMessage.prototype.setMatchUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 sequence = 2;
 * @return {number}
 */
proto.bragi.RushBasketballMatchMessage.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushBasketballMatchMessage} returns this
 */
proto.bragi.RushBasketballMatchMessage.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.bragi.RushBasketballMatchMessage.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.bragi.RushBasketballMatchMessage} returns this
*/
proto.bragi.RushBasketballMatchMessage.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballMatchMessage} returns this
 */
proto.bragi.RushBasketballMatchMessage.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballMatchMessage.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DataStatus data_status = 4;
 * @return {!proto.bragi.DataStatus}
 */
proto.bragi.RushBasketballMatchMessage.prototype.getDataStatus = function() {
  return /** @type {!proto.bragi.DataStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.bragi.DataStatus} value
 * @return {!proto.bragi.RushBasketballMatchMessage} returns this
 */
proto.bragi.RushBasketballMatchMessage.prototype.setDataStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Payload payload = 5;
 * @return {?proto.bragi.RushBasketballMatchMessage.Payload}
 */
proto.bragi.RushBasketballMatchMessage.prototype.getPayload = function() {
  return /** @type{?proto.bragi.RushBasketballMatchMessage.Payload} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballMatchMessage.Payload, 5));
};


/**
 * @param {?proto.bragi.RushBasketballMatchMessage.Payload|undefined} value
 * @return {!proto.bragi.RushBasketballMatchMessage} returns this
*/
proto.bragi.RushBasketballMatchMessage.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballMatchMessage} returns this
 */
proto.bragi.RushBasketballMatchMessage.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballMatchMessage.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bragi.RushBasketballMatchSnapshot.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballMatchSnapshot.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballMatchSnapshot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballMatchSnapshot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballMatchSnapshot.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    dataStatus: jspb.Message.getFieldWithDefault(msg, 4, 0),
    announcementsList: jspb.Message.toObjectList(msg.getAnnouncementsList(),
    bragi_common_pb.Announcement.toObject, includeInstance),
    matchState: (f = msg.getMatchState()) && proto.bragi.RushBasketballMatchState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballMatchSnapshot}
 */
proto.bragi.RushBasketballMatchSnapshot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballMatchSnapshot;
  return proto.bragi.RushBasketballMatchSnapshot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballMatchSnapshot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballMatchSnapshot}
 */
proto.bragi.RushBasketballMatchSnapshot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatchUrn(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 4:
      var value = /** @type {!proto.bragi.DataStatus} */ (reader.readEnum());
      msg.setDataStatus(value);
      break;
    case 5:
      var value = new bragi_common_pb.Announcement;
      reader.readMessage(value,bragi_common_pb.Announcement.deserializeBinaryFromReader);
      msg.addAnnouncements(value);
      break;
    case 6:
      var value = new proto.bragi.RushBasketballMatchState;
      reader.readMessage(value,proto.bragi.RushBasketballMatchState.deserializeBinaryFromReader);
      msg.setMatchState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballMatchSnapshot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballMatchSnapshot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballMatchSnapshot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballMatchSnapshot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDataStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAnnouncementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      bragi_common_pb.Announcement.serializeBinaryToWriter
    );
  }
  f = message.getMatchState();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.bragi.RushBasketballMatchState.serializeBinaryToWriter
    );
  }
};


/**
 * optional string match_urn = 1;
 * @return {string}
 */
proto.bragi.RushBasketballMatchSnapshot.prototype.getMatchUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushBasketballMatchSnapshot} returns this
 */
proto.bragi.RushBasketballMatchSnapshot.prototype.setMatchUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 sequence = 2;
 * @return {number}
 */
proto.bragi.RushBasketballMatchSnapshot.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushBasketballMatchSnapshot} returns this
 */
proto.bragi.RushBasketballMatchSnapshot.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.bragi.RushBasketballMatchSnapshot.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.bragi.RushBasketballMatchSnapshot} returns this
*/
proto.bragi.RushBasketballMatchSnapshot.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballMatchSnapshot} returns this
 */
proto.bragi.RushBasketballMatchSnapshot.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballMatchSnapshot.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DataStatus data_status = 4;
 * @return {!proto.bragi.DataStatus}
 */
proto.bragi.RushBasketballMatchSnapshot.prototype.getDataStatus = function() {
  return /** @type {!proto.bragi.DataStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.bragi.DataStatus} value
 * @return {!proto.bragi.RushBasketballMatchSnapshot} returns this
 */
proto.bragi.RushBasketballMatchSnapshot.prototype.setDataStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * repeated Announcement announcements = 5;
 * @return {!Array<!proto.bragi.Announcement>}
 */
proto.bragi.RushBasketballMatchSnapshot.prototype.getAnnouncementsList = function() {
  return /** @type{!Array<!proto.bragi.Announcement>} */ (
    jspb.Message.getRepeatedWrapperField(this, bragi_common_pb.Announcement, 5));
};


/**
 * @param {!Array<!proto.bragi.Announcement>} value
 * @return {!proto.bragi.RushBasketballMatchSnapshot} returns this
*/
proto.bragi.RushBasketballMatchSnapshot.prototype.setAnnouncementsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.bragi.Announcement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bragi.Announcement}
 */
proto.bragi.RushBasketballMatchSnapshot.prototype.addAnnouncements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.bragi.Announcement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bragi.RushBasketballMatchSnapshot} returns this
 */
proto.bragi.RushBasketballMatchSnapshot.prototype.clearAnnouncementsList = function() {
  return this.setAnnouncementsList([]);
};


/**
 * optional RushBasketballMatchState match_state = 6;
 * @return {?proto.bragi.RushBasketballMatchState}
 */
proto.bragi.RushBasketballMatchSnapshot.prototype.getMatchState = function() {
  return /** @type{?proto.bragi.RushBasketballMatchState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballMatchState, 6));
};


/**
 * @param {?proto.bragi.RushBasketballMatchState|undefined} value
 * @return {!proto.bragi.RushBasketballMatchSnapshot} returns this
*/
proto.bragi.RushBasketballMatchSnapshot.prototype.setMatchState = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballMatchSnapshot} returns this
 */
proto.bragi.RushBasketballMatchSnapshot.prototype.clearMatchState = function() {
  return this.setMatchState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballMatchSnapshot.prototype.hasMatchState = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballMatchUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballMatchUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballMatchUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballMatchUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && proto.bragi.RushBasketballMatchUpdate.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballMatchUpdate}
 */
proto.bragi.RushBasketballMatchUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballMatchUpdate;
  return proto.bragi.RushBasketballMatchUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballMatchUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballMatchUpdate}
 */
proto.bragi.RushBasketballMatchUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushBasketballMatchUpdate.Payload;
      reader.readMessage(value,proto.bragi.RushBasketballMatchUpdate.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballMatchUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballMatchUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballMatchUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballMatchUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.RushBasketballMatchUpdate.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.RushBasketballMatchUpdate.Payload.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.bragi.RushBasketballMatchUpdate.Payload.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  MATCH_STATE: 1,
  PARTIAL_UPDATES: 2
};

/**
 * @return {proto.bragi.RushBasketballMatchUpdate.Payload.PayloadCase}
 */
proto.bragi.RushBasketballMatchUpdate.Payload.prototype.getPayloadCase = function() {
  return /** @type {proto.bragi.RushBasketballMatchUpdate.Payload.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.bragi.RushBasketballMatchUpdate.Payload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballMatchUpdate.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballMatchUpdate.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballMatchUpdate.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballMatchUpdate.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchState: (f = msg.getMatchState()) && proto.bragi.RushBasketballMatchState.toObject(includeInstance, f),
    partialUpdates: (f = msg.getPartialUpdates()) && proto.bragi.RushBasketballMatchStatePartialUpdates.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballMatchUpdate.Payload}
 */
proto.bragi.RushBasketballMatchUpdate.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballMatchUpdate.Payload;
  return proto.bragi.RushBasketballMatchUpdate.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballMatchUpdate.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballMatchUpdate.Payload}
 */
proto.bragi.RushBasketballMatchUpdate.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushBasketballMatchState;
      reader.readMessage(value,proto.bragi.RushBasketballMatchState.deserializeBinaryFromReader);
      msg.setMatchState(value);
      break;
    case 2:
      var value = new proto.bragi.RushBasketballMatchStatePartialUpdates;
      reader.readMessage(value,proto.bragi.RushBasketballMatchStatePartialUpdates.deserializeBinaryFromReader);
      msg.setPartialUpdates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballMatchUpdate.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballMatchUpdate.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballMatchUpdate.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballMatchUpdate.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.RushBasketballMatchState.serializeBinaryToWriter
    );
  }
  f = message.getPartialUpdates();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushBasketballMatchStatePartialUpdates.serializeBinaryToWriter
    );
  }
};


/**
 * optional RushBasketballMatchState match_state = 1;
 * @return {?proto.bragi.RushBasketballMatchState}
 */
proto.bragi.RushBasketballMatchUpdate.Payload.prototype.getMatchState = function() {
  return /** @type{?proto.bragi.RushBasketballMatchState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballMatchState, 1));
};


/**
 * @param {?proto.bragi.RushBasketballMatchState|undefined} value
 * @return {!proto.bragi.RushBasketballMatchUpdate.Payload} returns this
*/
proto.bragi.RushBasketballMatchUpdate.Payload.prototype.setMatchState = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.RushBasketballMatchUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballMatchUpdate.Payload} returns this
 */
proto.bragi.RushBasketballMatchUpdate.Payload.prototype.clearMatchState = function() {
  return this.setMatchState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballMatchUpdate.Payload.prototype.hasMatchState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RushBasketballMatchStatePartialUpdates partial_updates = 2;
 * @return {?proto.bragi.RushBasketballMatchStatePartialUpdates}
 */
proto.bragi.RushBasketballMatchUpdate.Payload.prototype.getPartialUpdates = function() {
  return /** @type{?proto.bragi.RushBasketballMatchStatePartialUpdates} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballMatchStatePartialUpdates, 2));
};


/**
 * @param {?proto.bragi.RushBasketballMatchStatePartialUpdates|undefined} value
 * @return {!proto.bragi.RushBasketballMatchUpdate.Payload} returns this
*/
proto.bragi.RushBasketballMatchUpdate.Payload.prototype.setPartialUpdates = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.RushBasketballMatchUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballMatchUpdate.Payload} returns this
 */
proto.bragi.RushBasketballMatchUpdate.Payload.prototype.clearPartialUpdates = function() {
  return this.setPartialUpdates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballMatchUpdate.Payload.prototype.hasPartialUpdates = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Payload payload = 1;
 * @return {?proto.bragi.RushBasketballMatchUpdate.Payload}
 */
proto.bragi.RushBasketballMatchUpdate.prototype.getPayload = function() {
  return /** @type{?proto.bragi.RushBasketballMatchUpdate.Payload} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballMatchUpdate.Payload, 1));
};


/**
 * @param {?proto.bragi.RushBasketballMatchUpdate.Payload|undefined} value
 * @return {!proto.bragi.RushBasketballMatchUpdate} returns this
*/
proto.bragi.RushBasketballMatchUpdate.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballMatchUpdate} returns this
 */
proto.bragi.RushBasketballMatchUpdate.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballMatchUpdate.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bragi.RushBasketballMatchStatePartialUpdates.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballMatchStatePartialUpdates.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballMatchStatePartialUpdates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballMatchStatePartialUpdates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballMatchStatePartialUpdates.toObject = function(includeInstance, msg) {
  var f, obj = {
    updatesList: jspb.Message.toObjectList(msg.getUpdatesList(),
    proto.bragi.RushBasketballMatchStatePartialUpdate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballMatchStatePartialUpdates}
 */
proto.bragi.RushBasketballMatchStatePartialUpdates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballMatchStatePartialUpdates;
  return proto.bragi.RushBasketballMatchStatePartialUpdates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballMatchStatePartialUpdates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballMatchStatePartialUpdates}
 */
proto.bragi.RushBasketballMatchStatePartialUpdates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushBasketballMatchStatePartialUpdate;
      reader.readMessage(value,proto.bragi.RushBasketballMatchStatePartialUpdate.deserializeBinaryFromReader);
      msg.addUpdates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballMatchStatePartialUpdates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballMatchStatePartialUpdates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballMatchStatePartialUpdates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballMatchStatePartialUpdates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bragi.RushBasketballMatchStatePartialUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RushBasketballMatchStatePartialUpdate updates = 1;
 * @return {!Array<!proto.bragi.RushBasketballMatchStatePartialUpdate>}
 */
proto.bragi.RushBasketballMatchStatePartialUpdates.prototype.getUpdatesList = function() {
  return /** @type{!Array<!proto.bragi.RushBasketballMatchStatePartialUpdate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bragi.RushBasketballMatchStatePartialUpdate, 1));
};


/**
 * @param {!Array<!proto.bragi.RushBasketballMatchStatePartialUpdate>} value
 * @return {!proto.bragi.RushBasketballMatchStatePartialUpdates} returns this
*/
proto.bragi.RushBasketballMatchStatePartialUpdates.prototype.setUpdatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bragi.RushBasketballMatchStatePartialUpdate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bragi.RushBasketballMatchStatePartialUpdate}
 */
proto.bragi.RushBasketballMatchStatePartialUpdates.prototype.addUpdates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bragi.RushBasketballMatchStatePartialUpdate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bragi.RushBasketballMatchStatePartialUpdates} returns this
 */
proto.bragi.RushBasketballMatchStatePartialUpdates.prototype.clearUpdatesList = function() {
  return this.setUpdatesList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.RushBasketballMatchStatePartialUpdate.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.bragi.RushBasketballMatchStatePartialUpdate.UpdateCase = {
  UPDATE_NOT_SET: 0,
  CURRENT_MAP_STATE: 1,
  CURRENT_MAP_STATE_PARTIAL_UPDATE: 2,
  TIMELINE: 3
};

/**
 * @return {proto.bragi.RushBasketballMatchStatePartialUpdate.UpdateCase}
 */
proto.bragi.RushBasketballMatchStatePartialUpdate.prototype.getUpdateCase = function() {
  return /** @type {proto.bragi.RushBasketballMatchStatePartialUpdate.UpdateCase} */(jspb.Message.computeOneofCase(this, proto.bragi.RushBasketballMatchStatePartialUpdate.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballMatchStatePartialUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballMatchStatePartialUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballMatchStatePartialUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballMatchStatePartialUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentMapState: (f = msg.getCurrentMapState()) && proto.bragi.RushBasketballCurrentMapState.toObject(includeInstance, f),
    currentMapStatePartialUpdate: (f = msg.getCurrentMapStatePartialUpdate()) && proto.bragi.RushBasketballCurrentMapStatePartialUpdate.toObject(includeInstance, f),
    timeline: (f = msg.getTimeline()) && proto.bragi.RushBasketballTimelineState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballMatchStatePartialUpdate}
 */
proto.bragi.RushBasketballMatchStatePartialUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballMatchStatePartialUpdate;
  return proto.bragi.RushBasketballMatchStatePartialUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballMatchStatePartialUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballMatchStatePartialUpdate}
 */
proto.bragi.RushBasketballMatchStatePartialUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushBasketballCurrentMapState;
      reader.readMessage(value,proto.bragi.RushBasketballCurrentMapState.deserializeBinaryFromReader);
      msg.setCurrentMapState(value);
      break;
    case 2:
      var value = new proto.bragi.RushBasketballCurrentMapStatePartialUpdate;
      reader.readMessage(value,proto.bragi.RushBasketballCurrentMapStatePartialUpdate.deserializeBinaryFromReader);
      msg.setCurrentMapStatePartialUpdate(value);
      break;
    case 3:
      var value = new proto.bragi.RushBasketballTimelineState;
      reader.readMessage(value,proto.bragi.RushBasketballTimelineState.deserializeBinaryFromReader);
      msg.setTimeline(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballMatchStatePartialUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballMatchStatePartialUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballMatchStatePartialUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballMatchStatePartialUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentMapState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.RushBasketballCurrentMapState.serializeBinaryToWriter
    );
  }
  f = message.getCurrentMapStatePartialUpdate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushBasketballCurrentMapStatePartialUpdate.serializeBinaryToWriter
    );
  }
  f = message.getTimeline();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.RushBasketballTimelineState.serializeBinaryToWriter
    );
  }
};


/**
 * optional RushBasketballCurrentMapState current_map_state = 1;
 * @return {?proto.bragi.RushBasketballCurrentMapState}
 */
proto.bragi.RushBasketballMatchStatePartialUpdate.prototype.getCurrentMapState = function() {
  return /** @type{?proto.bragi.RushBasketballCurrentMapState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballCurrentMapState, 1));
};


/**
 * @param {?proto.bragi.RushBasketballCurrentMapState|undefined} value
 * @return {!proto.bragi.RushBasketballMatchStatePartialUpdate} returns this
*/
proto.bragi.RushBasketballMatchStatePartialUpdate.prototype.setCurrentMapState = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.RushBasketballMatchStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballMatchStatePartialUpdate} returns this
 */
proto.bragi.RushBasketballMatchStatePartialUpdate.prototype.clearCurrentMapState = function() {
  return this.setCurrentMapState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballMatchStatePartialUpdate.prototype.hasCurrentMapState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RushBasketballCurrentMapStatePartialUpdate current_map_state_partial_update = 2;
 * @return {?proto.bragi.RushBasketballCurrentMapStatePartialUpdate}
 */
proto.bragi.RushBasketballMatchStatePartialUpdate.prototype.getCurrentMapStatePartialUpdate = function() {
  return /** @type{?proto.bragi.RushBasketballCurrentMapStatePartialUpdate} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballCurrentMapStatePartialUpdate, 2));
};


/**
 * @param {?proto.bragi.RushBasketballCurrentMapStatePartialUpdate|undefined} value
 * @return {!proto.bragi.RushBasketballMatchStatePartialUpdate} returns this
*/
proto.bragi.RushBasketballMatchStatePartialUpdate.prototype.setCurrentMapStatePartialUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.RushBasketballMatchStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballMatchStatePartialUpdate} returns this
 */
proto.bragi.RushBasketballMatchStatePartialUpdate.prototype.clearCurrentMapStatePartialUpdate = function() {
  return this.setCurrentMapStatePartialUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballMatchStatePartialUpdate.prototype.hasCurrentMapStatePartialUpdate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RushBasketballTimelineState timeline = 3;
 * @return {?proto.bragi.RushBasketballTimelineState}
 */
proto.bragi.RushBasketballMatchStatePartialUpdate.prototype.getTimeline = function() {
  return /** @type{?proto.bragi.RushBasketballTimelineState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballTimelineState, 3));
};


/**
 * @param {?proto.bragi.RushBasketballTimelineState|undefined} value
 * @return {!proto.bragi.RushBasketballMatchStatePartialUpdate} returns this
*/
proto.bragi.RushBasketballMatchStatePartialUpdate.prototype.setTimeline = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.bragi.RushBasketballMatchStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballMatchStatePartialUpdate} returns this
 */
proto.bragi.RushBasketballMatchStatePartialUpdate.prototype.clearTimeline = function() {
  return this.setTimeline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballMatchStatePartialUpdate.prototype.hasTimeline = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballMatchState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballMatchState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballMatchState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballMatchState.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    matchType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    homeTeam: (f = msg.getHomeTeam()) && bragi_common_pb.Team.toObject(includeInstance, f),
    awayTeam: (f = msg.getAwayTeam()) && bragi_common_pb.Team.toObject(includeInstance, f),
    matchStatus: jspb.Message.getFieldWithDefault(msg, 6, 0),
    timeline: (f = msg.getTimeline()) && proto.bragi.RushBasketballTimelineState.toObject(includeInstance, f),
    currentMap: (f = msg.getCurrentMap()) && proto.bragi.RushBasketballCurrentMapState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballMatchState}
 */
proto.bragi.RushBasketballMatchState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballMatchState;
  return proto.bragi.RushBasketballMatchState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballMatchState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballMatchState}
 */
proto.bragi.RushBasketballMatchState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatchUrn(value);
      break;
    case 2:
      var value = /** @type {!proto.bragi.BestOfType} */ (reader.readEnum());
      msg.setMatchType(value);
      break;
    case 3:
      var value = new bragi_common_pb.Team;
      reader.readMessage(value,bragi_common_pb.Team.deserializeBinaryFromReader);
      msg.setHomeTeam(value);
      break;
    case 4:
      var value = new bragi_common_pb.Team;
      reader.readMessage(value,bragi_common_pb.Team.deserializeBinaryFromReader);
      msg.setAwayTeam(value);
      break;
    case 6:
      var value = /** @type {!proto.bragi.MatchStatusType} */ (reader.readEnum());
      msg.setMatchStatus(value);
      break;
    case 7:
      var value = new proto.bragi.RushBasketballTimelineState;
      reader.readMessage(value,proto.bragi.RushBasketballTimelineState.deserializeBinaryFromReader);
      msg.setTimeline(value);
      break;
    case 8:
      var value = new proto.bragi.RushBasketballCurrentMapState;
      reader.readMessage(value,proto.bragi.RushBasketballCurrentMapState.deserializeBinaryFromReader);
      msg.setCurrentMap(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballMatchState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballMatchState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballMatchState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballMatchState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMatchType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getHomeTeam();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      bragi_common_pb.Team.serializeBinaryToWriter
    );
  }
  f = message.getAwayTeam();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      bragi_common_pb.Team.serializeBinaryToWriter
    );
  }
  f = message.getMatchStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getTimeline();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.bragi.RushBasketballTimelineState.serializeBinaryToWriter
    );
  }
  f = message.getCurrentMap();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.bragi.RushBasketballCurrentMapState.serializeBinaryToWriter
    );
  }
};


/**
 * optional string match_urn = 1;
 * @return {string}
 */
proto.bragi.RushBasketballMatchState.prototype.getMatchUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushBasketballMatchState} returns this
 */
proto.bragi.RushBasketballMatchState.prototype.setMatchUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional BestOfType match_type = 2;
 * @return {!proto.bragi.BestOfType}
 */
proto.bragi.RushBasketballMatchState.prototype.getMatchType = function() {
  return /** @type {!proto.bragi.BestOfType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bragi.BestOfType} value
 * @return {!proto.bragi.RushBasketballMatchState} returns this
 */
proto.bragi.RushBasketballMatchState.prototype.setMatchType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Team home_team = 3;
 * @return {?proto.bragi.Team}
 */
proto.bragi.RushBasketballMatchState.prototype.getHomeTeam = function() {
  return /** @type{?proto.bragi.Team} */ (
    jspb.Message.getWrapperField(this, bragi_common_pb.Team, 3));
};


/**
 * @param {?proto.bragi.Team|undefined} value
 * @return {!proto.bragi.RushBasketballMatchState} returns this
*/
proto.bragi.RushBasketballMatchState.prototype.setHomeTeam = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballMatchState} returns this
 */
proto.bragi.RushBasketballMatchState.prototype.clearHomeTeam = function() {
  return this.setHomeTeam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballMatchState.prototype.hasHomeTeam = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Team away_team = 4;
 * @return {?proto.bragi.Team}
 */
proto.bragi.RushBasketballMatchState.prototype.getAwayTeam = function() {
  return /** @type{?proto.bragi.Team} */ (
    jspb.Message.getWrapperField(this, bragi_common_pb.Team, 4));
};


/**
 * @param {?proto.bragi.Team|undefined} value
 * @return {!proto.bragi.RushBasketballMatchState} returns this
*/
proto.bragi.RushBasketballMatchState.prototype.setAwayTeam = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballMatchState} returns this
 */
proto.bragi.RushBasketballMatchState.prototype.clearAwayTeam = function() {
  return this.setAwayTeam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballMatchState.prototype.hasAwayTeam = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional MatchStatusType match_status = 6;
 * @return {!proto.bragi.MatchStatusType}
 */
proto.bragi.RushBasketballMatchState.prototype.getMatchStatus = function() {
  return /** @type {!proto.bragi.MatchStatusType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.bragi.MatchStatusType} value
 * @return {!proto.bragi.RushBasketballMatchState} returns this
 */
proto.bragi.RushBasketballMatchState.prototype.setMatchStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional RushBasketballTimelineState timeline = 7;
 * @return {?proto.bragi.RushBasketballTimelineState}
 */
proto.bragi.RushBasketballMatchState.prototype.getTimeline = function() {
  return /** @type{?proto.bragi.RushBasketballTimelineState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballTimelineState, 7));
};


/**
 * @param {?proto.bragi.RushBasketballTimelineState|undefined} value
 * @return {!proto.bragi.RushBasketballMatchState} returns this
*/
proto.bragi.RushBasketballMatchState.prototype.setTimeline = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballMatchState} returns this
 */
proto.bragi.RushBasketballMatchState.prototype.clearTimeline = function() {
  return this.setTimeline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballMatchState.prototype.hasTimeline = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional RushBasketballCurrentMapState current_map = 8;
 * @return {?proto.bragi.RushBasketballCurrentMapState}
 */
proto.bragi.RushBasketballMatchState.prototype.getCurrentMap = function() {
  return /** @type{?proto.bragi.RushBasketballCurrentMapState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballCurrentMapState, 8));
};


/**
 * @param {?proto.bragi.RushBasketballCurrentMapState|undefined} value
 * @return {!proto.bragi.RushBasketballMatchState} returns this
*/
proto.bragi.RushBasketballMatchState.prototype.setCurrentMap = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballMatchState} returns this
 */
proto.bragi.RushBasketballMatchState.prototype.clearCurrentMap = function() {
  return this.setCurrentMap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballMatchState.prototype.hasCurrentMap = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bragi.RushBasketballTimelineState.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballTimelineState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballTimelineState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballTimelineState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballTimelineState.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.bragi.RushBasketballTimelineEvent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballTimelineState}
 */
proto.bragi.RushBasketballTimelineState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballTimelineState;
  return proto.bragi.RushBasketballTimelineState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballTimelineState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballTimelineState}
 */
proto.bragi.RushBasketballTimelineState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushBasketballTimelineEvent;
      reader.readMessage(value,proto.bragi.RushBasketballTimelineEvent.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballTimelineState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballTimelineState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballTimelineState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballTimelineState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bragi.RushBasketballTimelineEvent.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RushBasketballTimelineEvent events = 1;
 * @return {!Array<!proto.bragi.RushBasketballTimelineEvent>}
 */
proto.bragi.RushBasketballTimelineState.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.bragi.RushBasketballTimelineEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bragi.RushBasketballTimelineEvent, 1));
};


/**
 * @param {!Array<!proto.bragi.RushBasketballTimelineEvent>} value
 * @return {!proto.bragi.RushBasketballTimelineState} returns this
*/
proto.bragi.RushBasketballTimelineState.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bragi.RushBasketballTimelineEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bragi.RushBasketballTimelineEvent}
 */
proto.bragi.RushBasketballTimelineState.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bragi.RushBasketballTimelineEvent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bragi.RushBasketballTimelineState} returns this
 */
proto.bragi.RushBasketballTimelineState.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballTimelineEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballTimelineEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballTimelineEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballTimelineEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    eventType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    remainingTime: (f = msg.getRemainingTime()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    period: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballTimelineEvent}
 */
proto.bragi.RushBasketballTimelineEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballTimelineEvent;
  return proto.bragi.RushBasketballTimelineEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballTimelineEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballTimelineEvent}
 */
proto.bragi.RushBasketballTimelineEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamUrn(value);
      break;
    case 2:
      var value = /** @type {!proto.bragi.RushBasketballEventType} */ (reader.readEnum());
      msg.setEventType(value);
      break;
    case 3:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setRemainingTime(value);
      break;
    case 4:
      var value = /** @type {!proto.bragi.RushBasketballPeriod} */ (reader.readEnum());
      msg.setPeriod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballTimelineEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballTimelineEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballTimelineEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballTimelineEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEventType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getRemainingTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getPeriod();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string team_urn = 1;
 * @return {string}
 */
proto.bragi.RushBasketballTimelineEvent.prototype.getTeamUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushBasketballTimelineEvent} returns this
 */
proto.bragi.RushBasketballTimelineEvent.prototype.setTeamUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional RushBasketballEventType event_type = 2;
 * @return {!proto.bragi.RushBasketballEventType}
 */
proto.bragi.RushBasketballTimelineEvent.prototype.getEventType = function() {
  return /** @type {!proto.bragi.RushBasketballEventType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bragi.RushBasketballEventType} value
 * @return {!proto.bragi.RushBasketballTimelineEvent} returns this
 */
proto.bragi.RushBasketballTimelineEvent.prototype.setEventType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional google.protobuf.Duration remaining_time = 3;
 * @return {?proto.google.protobuf.Duration}
 */
proto.bragi.RushBasketballTimelineEvent.prototype.getRemainingTime = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 3));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.bragi.RushBasketballTimelineEvent} returns this
*/
proto.bragi.RushBasketballTimelineEvent.prototype.setRemainingTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballTimelineEvent} returns this
 */
proto.bragi.RushBasketballTimelineEvent.prototype.clearRemainingTime = function() {
  return this.setRemainingTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballTimelineEvent.prototype.hasRemainingTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RushBasketballPeriod period = 4;
 * @return {!proto.bragi.RushBasketballPeriod}
 */
proto.bragi.RushBasketballTimelineEvent.prototype.getPeriod = function() {
  return /** @type {!proto.bragi.RushBasketballPeriod} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.bragi.RushBasketballPeriod} value
 * @return {!proto.bragi.RushBasketballTimelineEvent} returns this
 */
proto.bragi.RushBasketballTimelineEvent.prototype.setPeriod = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.UpdateCase = {
  UPDATE_NOT_SET: 0,
  GAME_TIME: 1,
  SCORE: 2,
  TEAM_CURRENT_MAP_STATE: 3,
  TEAM_CURRENT_MAP_PARTIAL_UPDATE: 4
};

/**
 * @return {proto.bragi.RushBasketballCurrentMapStatePartialUpdate.UpdateCase}
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.prototype.getUpdateCase = function() {
  return /** @type {proto.bragi.RushBasketballCurrentMapStatePartialUpdate.UpdateCase} */(jspb.Message.computeOneofCase(this, proto.bragi.RushBasketballCurrentMapStatePartialUpdate.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballCurrentMapStatePartialUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballCurrentMapStatePartialUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameTime: (f = msg.getGameTime()) && proto.bragi.RushBasketballCurrentMapTimeState.toObject(includeInstance, f),
    score: (f = msg.getScore()) && proto.bragi.RushBasketballCurrentMapScoreState.toObject(includeInstance, f),
    teamCurrentMapState: (f = msg.getTeamCurrentMapState()) && proto.bragi.RushBasketballTeamCurrentMapState.toObject(includeInstance, f),
    teamCurrentMapPartialUpdate: (f = msg.getTeamCurrentMapPartialUpdate()) && proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballCurrentMapStatePartialUpdate}
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballCurrentMapStatePartialUpdate;
  return proto.bragi.RushBasketballCurrentMapStatePartialUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballCurrentMapStatePartialUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballCurrentMapStatePartialUpdate}
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushBasketballCurrentMapTimeState;
      reader.readMessage(value,proto.bragi.RushBasketballCurrentMapTimeState.deserializeBinaryFromReader);
      msg.setGameTime(value);
      break;
    case 2:
      var value = new proto.bragi.RushBasketballCurrentMapScoreState;
      reader.readMessage(value,proto.bragi.RushBasketballCurrentMapScoreState.deserializeBinaryFromReader);
      msg.setScore(value);
      break;
    case 3:
      var value = new proto.bragi.RushBasketballTeamCurrentMapState;
      reader.readMessage(value,proto.bragi.RushBasketballTeamCurrentMapState.deserializeBinaryFromReader);
      msg.setTeamCurrentMapState(value);
      break;
    case 4:
      var value = new proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate;
      reader.readMessage(value,proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.deserializeBinaryFromReader);
      msg.setTeamCurrentMapPartialUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballCurrentMapStatePartialUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballCurrentMapStatePartialUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.RushBasketballCurrentMapTimeState.serializeBinaryToWriter
    );
  }
  f = message.getScore();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushBasketballCurrentMapScoreState.serializeBinaryToWriter
    );
  }
  f = message.getTeamCurrentMapState();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.RushBasketballTeamCurrentMapState.serializeBinaryToWriter
    );
  }
  f = message.getTeamCurrentMapPartialUpdate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * optional RushBasketballCurrentMapTimeState game_time = 1;
 * @return {?proto.bragi.RushBasketballCurrentMapTimeState}
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.prototype.getGameTime = function() {
  return /** @type{?proto.bragi.RushBasketballCurrentMapTimeState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballCurrentMapTimeState, 1));
};


/**
 * @param {?proto.bragi.RushBasketballCurrentMapTimeState|undefined} value
 * @return {!proto.bragi.RushBasketballCurrentMapStatePartialUpdate} returns this
*/
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.prototype.setGameTime = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.RushBasketballCurrentMapStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.prototype.clearGameTime = function() {
  return this.setGameTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.prototype.hasGameTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RushBasketballCurrentMapScoreState score = 2;
 * @return {?proto.bragi.RushBasketballCurrentMapScoreState}
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.prototype.getScore = function() {
  return /** @type{?proto.bragi.RushBasketballCurrentMapScoreState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballCurrentMapScoreState, 2));
};


/**
 * @param {?proto.bragi.RushBasketballCurrentMapScoreState|undefined} value
 * @return {!proto.bragi.RushBasketballCurrentMapStatePartialUpdate} returns this
*/
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.prototype.setScore = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.RushBasketballCurrentMapStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.prototype.clearScore = function() {
  return this.setScore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.prototype.hasScore = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RushBasketballTeamCurrentMapState team_current_map_state = 3;
 * @return {?proto.bragi.RushBasketballTeamCurrentMapState}
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.prototype.getTeamCurrentMapState = function() {
  return /** @type{?proto.bragi.RushBasketballTeamCurrentMapState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballTeamCurrentMapState, 3));
};


/**
 * @param {?proto.bragi.RushBasketballTeamCurrentMapState|undefined} value
 * @return {!proto.bragi.RushBasketballCurrentMapStatePartialUpdate} returns this
*/
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.prototype.setTeamCurrentMapState = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.bragi.RushBasketballCurrentMapStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.prototype.clearTeamCurrentMapState = function() {
  return this.setTeamCurrentMapState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.prototype.hasTeamCurrentMapState = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RushBasketballTeamCurrentMapStatePartialUpdate team_current_map_partial_update = 4;
 * @return {?proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate}
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.prototype.getTeamCurrentMapPartialUpdate = function() {
  return /** @type{?proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate, 4));
};


/**
 * @param {?proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate|undefined} value
 * @return {!proto.bragi.RushBasketballCurrentMapStatePartialUpdate} returns this
*/
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.prototype.setTeamCurrentMapPartialUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.bragi.RushBasketballCurrentMapStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.prototype.clearTeamCurrentMapPartialUpdate = function() {
  return this.setTeamCurrentMapPartialUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballCurrentMapStatePartialUpdate.prototype.hasTeamCurrentMapPartialUpdate = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballCurrentMapState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballCurrentMapState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballCurrentMapState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballCurrentMapState.toObject = function(includeInstance, msg) {
  var f, obj = {
    period: jspb.Message.getFieldWithDefault(msg, 1, 0),
    gameTime: (f = msg.getGameTime()) && proto.bragi.RushBasketballCurrentMapTimeState.toObject(includeInstance, f),
    score: (f = msg.getScore()) && proto.bragi.RushBasketballCurrentMapScoreState.toObject(includeInstance, f),
    mapPaused: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    teamsMap: (f = msg.getTeamsMap()) ? f.toObject(includeInstance, proto.bragi.RushBasketballTeamCurrentMapState.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballCurrentMapState}
 */
proto.bragi.RushBasketballCurrentMapState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballCurrentMapState;
  return proto.bragi.RushBasketballCurrentMapState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballCurrentMapState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballCurrentMapState}
 */
proto.bragi.RushBasketballCurrentMapState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.bragi.RushBasketballPeriod} */ (reader.readEnum());
      msg.setPeriod(value);
      break;
    case 2:
      var value = new proto.bragi.RushBasketballCurrentMapTimeState;
      reader.readMessage(value,proto.bragi.RushBasketballCurrentMapTimeState.deserializeBinaryFromReader);
      msg.setGameTime(value);
      break;
    case 3:
      var value = new proto.bragi.RushBasketballCurrentMapScoreState;
      reader.readMessage(value,proto.bragi.RushBasketballCurrentMapScoreState.deserializeBinaryFromReader);
      msg.setScore(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMapPaused(value);
      break;
    case 5:
      var value = msg.getTeamsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.bragi.RushBasketballTeamCurrentMapState.deserializeBinaryFromReader, "", new proto.bragi.RushBasketballTeamCurrentMapState());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballCurrentMapState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballCurrentMapState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballCurrentMapState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballCurrentMapState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeriod();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getGameTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushBasketballCurrentMapTimeState.serializeBinaryToWriter
    );
  }
  f = message.getScore();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.RushBasketballCurrentMapScoreState.serializeBinaryToWriter
    );
  }
  f = message.getMapPaused();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getTeamsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.bragi.RushBasketballTeamCurrentMapState.serializeBinaryToWriter);
  }
};


/**
 * optional RushBasketballPeriod period = 1;
 * @return {!proto.bragi.RushBasketballPeriod}
 */
proto.bragi.RushBasketballCurrentMapState.prototype.getPeriod = function() {
  return /** @type {!proto.bragi.RushBasketballPeriod} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.bragi.RushBasketballPeriod} value
 * @return {!proto.bragi.RushBasketballCurrentMapState} returns this
 */
proto.bragi.RushBasketballCurrentMapState.prototype.setPeriod = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional RushBasketballCurrentMapTimeState game_time = 2;
 * @return {?proto.bragi.RushBasketballCurrentMapTimeState}
 */
proto.bragi.RushBasketballCurrentMapState.prototype.getGameTime = function() {
  return /** @type{?proto.bragi.RushBasketballCurrentMapTimeState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballCurrentMapTimeState, 2));
};


/**
 * @param {?proto.bragi.RushBasketballCurrentMapTimeState|undefined} value
 * @return {!proto.bragi.RushBasketballCurrentMapState} returns this
*/
proto.bragi.RushBasketballCurrentMapState.prototype.setGameTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballCurrentMapState} returns this
 */
proto.bragi.RushBasketballCurrentMapState.prototype.clearGameTime = function() {
  return this.setGameTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballCurrentMapState.prototype.hasGameTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RushBasketballCurrentMapScoreState score = 3;
 * @return {?proto.bragi.RushBasketballCurrentMapScoreState}
 */
proto.bragi.RushBasketballCurrentMapState.prototype.getScore = function() {
  return /** @type{?proto.bragi.RushBasketballCurrentMapScoreState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballCurrentMapScoreState, 3));
};


/**
 * @param {?proto.bragi.RushBasketballCurrentMapScoreState|undefined} value
 * @return {!proto.bragi.RushBasketballCurrentMapState} returns this
*/
proto.bragi.RushBasketballCurrentMapState.prototype.setScore = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballCurrentMapState} returns this
 */
proto.bragi.RushBasketballCurrentMapState.prototype.clearScore = function() {
  return this.setScore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballCurrentMapState.prototype.hasScore = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool map_paused = 4;
 * @return {boolean}
 */
proto.bragi.RushBasketballCurrentMapState.prototype.getMapPaused = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bragi.RushBasketballCurrentMapState} returns this
 */
proto.bragi.RushBasketballCurrentMapState.prototype.setMapPaused = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * map<string, RushBasketballTeamCurrentMapState> teams = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.bragi.RushBasketballTeamCurrentMapState>}
 */
proto.bragi.RushBasketballCurrentMapState.prototype.getTeamsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.bragi.RushBasketballTeamCurrentMapState>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.bragi.RushBasketballTeamCurrentMapState));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.bragi.RushBasketballCurrentMapState} returns this
 */
proto.bragi.RushBasketballCurrentMapState.prototype.clearTeamsMap = function() {
  this.getTeamsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballCurrentMapTimeState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballCurrentMapTimeState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballCurrentMapTimeState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballCurrentMapTimeState.toObject = function(includeInstance, msg) {
  var f, obj = {
    remainingTime: (f = msg.getRemainingTime()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballCurrentMapTimeState}
 */
proto.bragi.RushBasketballCurrentMapTimeState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballCurrentMapTimeState;
  return proto.bragi.RushBasketballCurrentMapTimeState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballCurrentMapTimeState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballCurrentMapTimeState}
 */
proto.bragi.RushBasketballCurrentMapTimeState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setRemainingTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballCurrentMapTimeState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballCurrentMapTimeState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballCurrentMapTimeState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballCurrentMapTimeState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRemainingTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Duration remaining_time = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.bragi.RushBasketballCurrentMapTimeState.prototype.getRemainingTime = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.bragi.RushBasketballCurrentMapTimeState} returns this
*/
proto.bragi.RushBasketballCurrentMapTimeState.prototype.setRemainingTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballCurrentMapTimeState} returns this
 */
proto.bragi.RushBasketballCurrentMapTimeState.prototype.clearRemainingTime = function() {
  return this.setRemainingTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballCurrentMapTimeState.prototype.hasRemainingTime = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballCurrentMapScoreState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballCurrentMapScoreState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballCurrentMapScoreState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballCurrentMapScoreState.toObject = function(includeInstance, msg) {
  var f, obj = {
    homeScore: jspb.Message.getFieldWithDefault(msg, 1, 0),
    awayScore: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballCurrentMapScoreState}
 */
proto.bragi.RushBasketballCurrentMapScoreState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballCurrentMapScoreState;
  return proto.bragi.RushBasketballCurrentMapScoreState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballCurrentMapScoreState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballCurrentMapScoreState}
 */
proto.bragi.RushBasketballCurrentMapScoreState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHomeScore(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAwayScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballCurrentMapScoreState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballCurrentMapScoreState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballCurrentMapScoreState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballCurrentMapScoreState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHomeScore();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAwayScore();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 home_score = 1;
 * @return {number}
 */
proto.bragi.RushBasketballCurrentMapScoreState.prototype.getHomeScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushBasketballCurrentMapScoreState} returns this
 */
proto.bragi.RushBasketballCurrentMapScoreState.prototype.setHomeScore = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 away_score = 2;
 * @return {number}
 */
proto.bragi.RushBasketballCurrentMapScoreState.prototype.getAwayScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushBasketballCurrentMapScoreState} returns this
 */
proto.bragi.RushBasketballCurrentMapScoreState.prototype.setAwayScore = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    payload: (f = msg.getPayload()) && proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate}
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate;
  return proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate}
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamUrn(value);
      break;
    case 2:
      var value = new proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload;
      reader.readMessage(value,proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  MAP_STATISTICS: 1,
  PLAYER: 2
};

/**
 * @return {proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.PayloadCase}
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.prototype.getPayloadCase = function() {
  return /** @type {proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    mapStatistics: (f = msg.getMapStatistics()) && proto.bragi.RushBasketballTeamCurrentMapStatisticsState.toObject(includeInstance, f),
    player: (f = msg.getPlayer()) && proto.bragi.RushBasketballPlayerCurrentMapState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload}
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload;
  return proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload}
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushBasketballTeamCurrentMapStatisticsState;
      reader.readMessage(value,proto.bragi.RushBasketballTeamCurrentMapStatisticsState.deserializeBinaryFromReader);
      msg.setMapStatistics(value);
      break;
    case 2:
      var value = new proto.bragi.RushBasketballPlayerCurrentMapState;
      reader.readMessage(value,proto.bragi.RushBasketballPlayerCurrentMapState.deserializeBinaryFromReader);
      msg.setPlayer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMapStatistics();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.RushBasketballTeamCurrentMapStatisticsState.serializeBinaryToWriter
    );
  }
  f = message.getPlayer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushBasketballPlayerCurrentMapState.serializeBinaryToWriter
    );
  }
};


/**
 * optional RushBasketballTeamCurrentMapStatisticsState map_statistics = 1;
 * @return {?proto.bragi.RushBasketballTeamCurrentMapStatisticsState}
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.prototype.getMapStatistics = function() {
  return /** @type{?proto.bragi.RushBasketballTeamCurrentMapStatisticsState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballTeamCurrentMapStatisticsState, 1));
};


/**
 * @param {?proto.bragi.RushBasketballTeamCurrentMapStatisticsState|undefined} value
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload} returns this
*/
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.prototype.setMapStatistics = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload} returns this
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.prototype.clearMapStatistics = function() {
  return this.setMapStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.prototype.hasMapStatistics = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RushBasketballPlayerCurrentMapState player = 2;
 * @return {?proto.bragi.RushBasketballPlayerCurrentMapState}
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.prototype.getPlayer = function() {
  return /** @type{?proto.bragi.RushBasketballPlayerCurrentMapState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballPlayerCurrentMapState, 2));
};


/**
 * @param {?proto.bragi.RushBasketballPlayerCurrentMapState|undefined} value
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload} returns this
*/
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.prototype.setPlayer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload} returns this
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.prototype.clearPlayer = function() {
  return this.setPlayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload.prototype.hasPlayer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string team_urn = 1;
 * @return {string}
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.prototype.getTeamUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.prototype.setTeamUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Payload payload = 2;
 * @return {?proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload}
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.prototype.getPayload = function() {
  return /** @type{?proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload, 2));
};


/**
 * @param {?proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.Payload|undefined} value
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate} returns this
*/
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballTeamCurrentMapStatePartialUpdate.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballTeamCurrentMapState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballTeamCurrentMapState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballTeamCurrentMapState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballTeamCurrentMapState.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mapStatistics: (f = msg.getMapStatistics()) && proto.bragi.RushBasketballTeamCurrentMapStatisticsState.toObject(includeInstance, f),
    player: (f = msg.getPlayer()) && proto.bragi.RushBasketballPlayerCurrentMapState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballTeamCurrentMapState}
 */
proto.bragi.RushBasketballTeamCurrentMapState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballTeamCurrentMapState;
  return proto.bragi.RushBasketballTeamCurrentMapState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballTeamCurrentMapState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballTeamCurrentMapState}
 */
proto.bragi.RushBasketballTeamCurrentMapState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamUrn(value);
      break;
    case 2:
      var value = new proto.bragi.RushBasketballTeamCurrentMapStatisticsState;
      reader.readMessage(value,proto.bragi.RushBasketballTeamCurrentMapStatisticsState.deserializeBinaryFromReader);
      msg.setMapStatistics(value);
      break;
    case 3:
      var value = new proto.bragi.RushBasketballPlayerCurrentMapState;
      reader.readMessage(value,proto.bragi.RushBasketballPlayerCurrentMapState.deserializeBinaryFromReader);
      msg.setPlayer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballTeamCurrentMapState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballTeamCurrentMapState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballTeamCurrentMapState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballTeamCurrentMapState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMapStatistics();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushBasketballTeamCurrentMapStatisticsState.serializeBinaryToWriter
    );
  }
  f = message.getPlayer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.RushBasketballPlayerCurrentMapState.serializeBinaryToWriter
    );
  }
};


/**
 * optional string team_urn = 1;
 * @return {string}
 */
proto.bragi.RushBasketballTeamCurrentMapState.prototype.getTeamUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushBasketballTeamCurrentMapState} returns this
 */
proto.bragi.RushBasketballTeamCurrentMapState.prototype.setTeamUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional RushBasketballTeamCurrentMapStatisticsState map_statistics = 2;
 * @return {?proto.bragi.RushBasketballTeamCurrentMapStatisticsState}
 */
proto.bragi.RushBasketballTeamCurrentMapState.prototype.getMapStatistics = function() {
  return /** @type{?proto.bragi.RushBasketballTeamCurrentMapStatisticsState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballTeamCurrentMapStatisticsState, 2));
};


/**
 * @param {?proto.bragi.RushBasketballTeamCurrentMapStatisticsState|undefined} value
 * @return {!proto.bragi.RushBasketballTeamCurrentMapState} returns this
*/
proto.bragi.RushBasketballTeamCurrentMapState.prototype.setMapStatistics = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballTeamCurrentMapState} returns this
 */
proto.bragi.RushBasketballTeamCurrentMapState.prototype.clearMapStatistics = function() {
  return this.setMapStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballTeamCurrentMapState.prototype.hasMapStatistics = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RushBasketballPlayerCurrentMapState player = 3;
 * @return {?proto.bragi.RushBasketballPlayerCurrentMapState}
 */
proto.bragi.RushBasketballTeamCurrentMapState.prototype.getPlayer = function() {
  return /** @type{?proto.bragi.RushBasketballPlayerCurrentMapState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushBasketballPlayerCurrentMapState, 3));
};


/**
 * @param {?proto.bragi.RushBasketballPlayerCurrentMapState|undefined} value
 * @return {!proto.bragi.RushBasketballTeamCurrentMapState} returns this
*/
proto.bragi.RushBasketballTeamCurrentMapState.prototype.setPlayer = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushBasketballTeamCurrentMapState} returns this
 */
proto.bragi.RushBasketballTeamCurrentMapState.prototype.clearPlayer = function() {
  return this.setPlayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushBasketballTeamCurrentMapState.prototype.hasPlayer = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballPlayerCurrentMapState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballPlayerCurrentMapState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballPlayerCurrentMapState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballPlayerCurrentMapState.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    extName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballPlayerCurrentMapState}
 */
proto.bragi.RushBasketballPlayerCurrentMapState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballPlayerCurrentMapState;
  return proto.bragi.RushBasketballPlayerCurrentMapState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballPlayerCurrentMapState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballPlayerCurrentMapState}
 */
proto.bragi.RushBasketballPlayerCurrentMapState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerUrn(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballPlayerCurrentMapState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballPlayerCurrentMapState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballPlayerCurrentMapState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballPlayerCurrentMapState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExtName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string player_urn = 1;
 * @return {string}
 */
proto.bragi.RushBasketballPlayerCurrentMapState.prototype.getPlayerUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushBasketballPlayerCurrentMapState} returns this
 */
proto.bragi.RushBasketballPlayerCurrentMapState.prototype.setPlayerUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ext_name = 2;
 * @return {string}
 */
proto.bragi.RushBasketballPlayerCurrentMapState.prototype.getExtName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushBasketballPlayerCurrentMapState} returns this
 */
proto.bragi.RushBasketballPlayerCurrentMapState.prototype.setExtName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballTeamCurrentMapStatisticsState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballTeamCurrentMapStatisticsState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointsTotal: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pointsHt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    periodPointsList: jspb.Message.toObjectList(msg.getPeriodPointsList(),
    proto.bragi.RushBasketballPeriodPoints.toObject, includeInstance),
    threePointers: jspb.Message.getFieldWithDefault(msg, 4, 0),
    twoPointers: jspb.Message.getFieldWithDefault(msg, 5, 0),
    freeThrowsSuccessful: jspb.Message.getFieldWithDefault(msg, 6, 0),
    freeThrowsMissed: jspb.Message.getFieldWithDefault(msg, 7, 0),
    fouls: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatisticsState}
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballTeamCurrentMapStatisticsState;
  return proto.bragi.RushBasketballTeamCurrentMapStatisticsState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballTeamCurrentMapStatisticsState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatisticsState}
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPointsTotal(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPointsHt(value);
      break;
    case 3:
      var value = new proto.bragi.RushBasketballPeriodPoints;
      reader.readMessage(value,proto.bragi.RushBasketballPeriodPoints.deserializeBinaryFromReader);
      msg.addPeriodPoints(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setThreePointers(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTwoPointers(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFreeThrowsSuccessful(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFreeThrowsMissed(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFouls(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballTeamCurrentMapStatisticsState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballTeamCurrentMapStatisticsState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointsTotal();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getPointsHt();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPeriodPointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.bragi.RushBasketballPeriodPoints.serializeBinaryToWriter
    );
  }
  f = message.getThreePointers();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getTwoPointers();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getFreeThrowsSuccessful();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getFreeThrowsMissed();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getFouls();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
};


/**
 * optional uint32 points_total = 1;
 * @return {number}
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.getPointsTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.setPointsTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 points_ht = 2;
 * @return {number}
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.getPointsHt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.setPointsHt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated RushBasketballPeriodPoints period_points = 3;
 * @return {!Array<!proto.bragi.RushBasketballPeriodPoints>}
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.getPeriodPointsList = function() {
  return /** @type{!Array<!proto.bragi.RushBasketballPeriodPoints>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bragi.RushBasketballPeriodPoints, 3));
};


/**
 * @param {!Array<!proto.bragi.RushBasketballPeriodPoints>} value
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatisticsState} returns this
*/
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.setPeriodPointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.bragi.RushBasketballPeriodPoints=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bragi.RushBasketballPeriodPoints}
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.addPeriodPoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.bragi.RushBasketballPeriodPoints, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.clearPeriodPointsList = function() {
  return this.setPeriodPointsList([]);
};


/**
 * optional uint32 three_pointers = 4;
 * @return {number}
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.getThreePointers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.setThreePointers = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 two_pointers = 5;
 * @return {number}
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.getTwoPointers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.setTwoPointers = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 free_throws_successful = 6;
 * @return {number}
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.getFreeThrowsSuccessful = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.setFreeThrowsSuccessful = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 free_throws_missed = 7;
 * @return {number}
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.getFreeThrowsMissed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.setFreeThrowsMissed = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 fouls = 8;
 * @return {number}
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.getFouls = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushBasketballTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushBasketballTeamCurrentMapStatisticsState.prototype.setFouls = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushBasketballPeriodPoints.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushBasketballPeriodPoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushBasketballPeriodPoints} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballPeriodPoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    period: jspb.Message.getFieldWithDefault(msg, 1, 0),
    points: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushBasketballPeriodPoints}
 */
proto.bragi.RushBasketballPeriodPoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushBasketballPeriodPoints;
  return proto.bragi.RushBasketballPeriodPoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushBasketballPeriodPoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushBasketballPeriodPoints}
 */
proto.bragi.RushBasketballPeriodPoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.bragi.RushBasketballPeriod} */ (reader.readEnum());
      msg.setPeriod(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushBasketballPeriodPoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushBasketballPeriodPoints.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushBasketballPeriodPoints} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushBasketballPeriodPoints.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeriod();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPoints();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional RushBasketballPeriod period = 1;
 * @return {!proto.bragi.RushBasketballPeriod}
 */
proto.bragi.RushBasketballPeriodPoints.prototype.getPeriod = function() {
  return /** @type {!proto.bragi.RushBasketballPeriod} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.bragi.RushBasketballPeriod} value
 * @return {!proto.bragi.RushBasketballPeriodPoints} returns this
 */
proto.bragi.RushBasketballPeriodPoints.prototype.setPeriod = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 points = 2;
 * @return {number}
 */
proto.bragi.RushBasketballPeriodPoints.prototype.getPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushBasketballPeriodPoints} returns this
 */
proto.bragi.RushBasketballPeriodPoints.prototype.setPoints = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.bragi.RushBasketballEventType = {
  RUSH_BASKETBALL_EVENT_TYPE_UNSPECIFIED: 0,
  RUSH_BASKETBALL_EVENT_TYPE_THREE_POINTER: 1,
  RUSH_BASKETBALL_EVENT_TYPE_TWO_POINTER: 2,
  RUSH_BASKETBALL_EVENT_TYPE_FREE_THROW_SUCCESS: 3,
  RUSH_BASKETBALL_EVENT_TYPE_FREE_THROW_MISS: 4,
  RUSH_BASKETBALL_EVENT_TYPE_FOUL: 5,
  RUSH_BASKETBALL_EVENT_TYPE_PERIOD_CHANGE: 6
};

/**
 * @enum {number}
 */
proto.bragi.RushBasketballPeriod = {
  RUSH_BASKETBALL_PERIOD_UNSPECIFIED: 0,
  RUSH_BASKETBALL_PERIOD_QUARTER_1: 1,
  RUSH_BASKETBALL_PERIOD_QUARTER_2: 2,
  RUSH_BASKETBALL_PERIOD_QUARTER_3: 3,
  RUSH_BASKETBALL_PERIOD_QUARTER_4: 4,
  RUSH_BASKETBALL_PERIOD_OVERTIME: 5
};

goog.object.extend(exports, proto.bragi);
