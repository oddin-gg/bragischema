// source: bragi/rush_cricket.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var bragi_common_pb = require('../bragi/common_pb.js');
goog.object.extend(proto, bragi_common_pb);
goog.exportSymbol('proto.bragi.RushCricketBallState', null, global);
goog.exportSymbol('proto.bragi.RushCricketBoundaryRun', null, global);
goog.exportSymbol('proto.bragi.RushCricketBowlerError', null, global);
goog.exportSymbol('proto.bragi.RushCricketCurrentInningState', null, global);
goog.exportSymbol('proto.bragi.RushCricketCurrentInningStatePartialUpdate', null, global);
goog.exportSymbol('proto.bragi.RushCricketCurrentInningStatePartialUpdate.UpdateCase', null, global);
goog.exportSymbol('proto.bragi.RushCricketCurrentMapScoreState', null, global);
goog.exportSymbol('proto.bragi.RushCricketCurrentMapState', null, global);
goog.exportSymbol('proto.bragi.RushCricketCurrentMapTimeState', null, global);
goog.exportSymbol('proto.bragi.RushCricketEventType', null, global);
goog.exportSymbol('proto.bragi.RushCricketMatchMessage', null, global);
goog.exportSymbol('proto.bragi.RushCricketMatchMessage.Payload', null, global);
goog.exportSymbol('proto.bragi.RushCricketMatchMessage.Payload.PayloadCase', null, global);
goog.exportSymbol('proto.bragi.RushCricketMatchScoreState', null, global);
goog.exportSymbol('proto.bragi.RushCricketMatchSnapshot', null, global);
goog.exportSymbol('proto.bragi.RushCricketMatchState', null, global);
goog.exportSymbol('proto.bragi.RushCricketMatchStatePartialUpdate', null, global);
goog.exportSymbol('proto.bragi.RushCricketMatchStatePartialUpdate.UpdateCase', null, global);
goog.exportSymbol('proto.bragi.RushCricketMatchStatePartialUpdates', null, global);
goog.exportSymbol('proto.bragi.RushCricketMatchUpdate', null, global);
goog.exportSymbol('proto.bragi.RushCricketMatchUpdate.Payload', null, global);
goog.exportSymbol('proto.bragi.RushCricketMatchUpdate.Payload.PayloadCase', null, global);
goog.exportSymbol('proto.bragi.RushCricketPeriod', null, global);
goog.exportSymbol('proto.bragi.RushCricketPlayerCurrentMapState', null, global);
goog.exportSymbol('proto.bragi.RushCricketTarget', null, global);
goog.exportSymbol('proto.bragi.RushCricketTeamCurrentInningState', null, global);
goog.exportSymbol('proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate', null, global);
goog.exportSymbol('proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload', null, global);
goog.exportSymbol('proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.PayloadCase', null, global);
goog.exportSymbol('proto.bragi.RushCricketTeamCurrentMapState', null, global);
goog.exportSymbol('proto.bragi.RushCricketTeamCurrentMapStatisticsState', null, global);
goog.exportSymbol('proto.bragi.RushCricketTimelineEvent', null, global);
goog.exportSymbol('proto.bragi.RushCricketTimelineState', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketMatchMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushCricketMatchMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketMatchMessage.displayName = 'proto.bragi.RushCricketMatchMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketMatchMessage.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.RushCricketMatchMessage.Payload.oneofGroups_);
};
goog.inherits(proto.bragi.RushCricketMatchMessage.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketMatchMessage.Payload.displayName = 'proto.bragi.RushCricketMatchMessage.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketMatchSnapshot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bragi.RushCricketMatchSnapshot.repeatedFields_, null);
};
goog.inherits(proto.bragi.RushCricketMatchSnapshot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketMatchSnapshot.displayName = 'proto.bragi.RushCricketMatchSnapshot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketMatchUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushCricketMatchUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketMatchUpdate.displayName = 'proto.bragi.RushCricketMatchUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketMatchUpdate.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.RushCricketMatchUpdate.Payload.oneofGroups_);
};
goog.inherits(proto.bragi.RushCricketMatchUpdate.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketMatchUpdate.Payload.displayName = 'proto.bragi.RushCricketMatchUpdate.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketMatchStatePartialUpdates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bragi.RushCricketMatchStatePartialUpdates.repeatedFields_, null);
};
goog.inherits(proto.bragi.RushCricketMatchStatePartialUpdates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketMatchStatePartialUpdates.displayName = 'proto.bragi.RushCricketMatchStatePartialUpdates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketMatchStatePartialUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.RushCricketMatchStatePartialUpdate.oneofGroups_);
};
goog.inherits(proto.bragi.RushCricketMatchStatePartialUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketMatchStatePartialUpdate.displayName = 'proto.bragi.RushCricketMatchStatePartialUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketMatchState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushCricketMatchState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketMatchState.displayName = 'proto.bragi.RushCricketMatchState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketMatchScoreState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushCricketMatchScoreState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketMatchScoreState.displayName = 'proto.bragi.RushCricketMatchScoreState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketCurrentMapScoreState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushCricketCurrentMapScoreState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketCurrentMapScoreState.displayName = 'proto.bragi.RushCricketCurrentMapScoreState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketTimelineState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bragi.RushCricketTimelineState.repeatedFields_, null);
};
goog.inherits(proto.bragi.RushCricketTimelineState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketTimelineState.displayName = 'proto.bragi.RushCricketTimelineState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketTimelineEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushCricketTimelineEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketTimelineEvent.displayName = 'proto.bragi.RushCricketTimelineEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.RushCricketCurrentInningStatePartialUpdate.oneofGroups_);
};
goog.inherits(proto.bragi.RushCricketCurrentInningStatePartialUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketCurrentInningStatePartialUpdate.displayName = 'proto.bragi.RushCricketCurrentInningStatePartialUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketCurrentMapState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushCricketCurrentMapState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketCurrentMapState.displayName = 'proto.bragi.RushCricketCurrentMapState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketCurrentMapTimeState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushCricketCurrentMapTimeState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketCurrentMapTimeState.displayName = 'proto.bragi.RushCricketCurrentMapTimeState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.displayName = 'proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.oneofGroups_);
};
goog.inherits(proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.displayName = 'proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketTeamCurrentMapState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushCricketTeamCurrentMapState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketTeamCurrentMapState.displayName = 'proto.bragi.RushCricketTeamCurrentMapState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketPlayerCurrentMapState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushCricketPlayerCurrentMapState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketPlayerCurrentMapState.displayName = 'proto.bragi.RushCricketPlayerCurrentMapState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushCricketTeamCurrentMapStatisticsState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketTeamCurrentMapStatisticsState.displayName = 'proto.bragi.RushCricketTeamCurrentMapStatisticsState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketBallState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushCricketBallState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketBallState.displayName = 'proto.bragi.RushCricketBallState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketCurrentInningState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushCricketCurrentInningState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketCurrentInningState.displayName = 'proto.bragi.RushCricketCurrentInningState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketTarget = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushCricketTarget, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketTarget.displayName = 'proto.bragi.RushCricketTarget';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushCricketTeamCurrentInningState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushCricketTeamCurrentInningState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushCricketTeamCurrentInningState.displayName = 'proto.bragi.RushCricketTeamCurrentInningState';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketMatchMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketMatchMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketMatchMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketMatchMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
matchUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
sequence: jspb.Message.getFieldWithDefault(msg, 2, 0),
timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
dataStatus: jspb.Message.getFieldWithDefault(msg, 4, 0),
payload: (f = msg.getPayload()) && proto.bragi.RushCricketMatchMessage.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketMatchMessage}
 */
proto.bragi.RushCricketMatchMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketMatchMessage;
  return proto.bragi.RushCricketMatchMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketMatchMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketMatchMessage}
 */
proto.bragi.RushCricketMatchMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatchUrn(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 4:
      var value = /** @type {!proto.bragi.DataStatus} */ (reader.readEnum());
      msg.setDataStatus(value);
      break;
    case 5:
      var value = new proto.bragi.RushCricketMatchMessage.Payload;
      reader.readMessage(value,proto.bragi.RushCricketMatchMessage.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketMatchMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketMatchMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketMatchMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketMatchMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDataStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bragi.RushCricketMatchMessage.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.RushCricketMatchMessage.Payload.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.bragi.RushCricketMatchMessage.Payload.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  SNAPSHOT: 1,
  UPDATE: 2
};

/**
 * @return {proto.bragi.RushCricketMatchMessage.Payload.PayloadCase}
 */
proto.bragi.RushCricketMatchMessage.Payload.prototype.getPayloadCase = function() {
  return /** @type {proto.bragi.RushCricketMatchMessage.Payload.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.bragi.RushCricketMatchMessage.Payload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketMatchMessage.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketMatchMessage.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketMatchMessage.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketMatchMessage.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
snapshot: (f = msg.getSnapshot()) && proto.bragi.RushCricketMatchSnapshot.toObject(includeInstance, f),
update: (f = msg.getUpdate()) && proto.bragi.RushCricketMatchUpdate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketMatchMessage.Payload}
 */
proto.bragi.RushCricketMatchMessage.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketMatchMessage.Payload;
  return proto.bragi.RushCricketMatchMessage.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketMatchMessage.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketMatchMessage.Payload}
 */
proto.bragi.RushCricketMatchMessage.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushCricketMatchSnapshot;
      reader.readMessage(value,proto.bragi.RushCricketMatchSnapshot.deserializeBinaryFromReader);
      msg.setSnapshot(value);
      break;
    case 2:
      var value = new proto.bragi.RushCricketMatchUpdate;
      reader.readMessage(value,proto.bragi.RushCricketMatchUpdate.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketMatchMessage.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketMatchMessage.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketMatchMessage.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketMatchMessage.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSnapshot();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.RushCricketMatchSnapshot.serializeBinaryToWriter
    );
  }
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushCricketMatchUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * optional RushCricketMatchSnapshot snapshot = 1;
 * @return {?proto.bragi.RushCricketMatchSnapshot}
 */
proto.bragi.RushCricketMatchMessage.Payload.prototype.getSnapshot = function() {
  return /** @type{?proto.bragi.RushCricketMatchSnapshot} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketMatchSnapshot, 1));
};


/**
 * @param {?proto.bragi.RushCricketMatchSnapshot|undefined} value
 * @return {!proto.bragi.RushCricketMatchMessage.Payload} returns this
*/
proto.bragi.RushCricketMatchMessage.Payload.prototype.setSnapshot = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.RushCricketMatchMessage.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketMatchMessage.Payload} returns this
 */
proto.bragi.RushCricketMatchMessage.Payload.prototype.clearSnapshot = function() {
  return this.setSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketMatchMessage.Payload.prototype.hasSnapshot = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RushCricketMatchUpdate update = 2;
 * @return {?proto.bragi.RushCricketMatchUpdate}
 */
proto.bragi.RushCricketMatchMessage.Payload.prototype.getUpdate = function() {
  return /** @type{?proto.bragi.RushCricketMatchUpdate} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketMatchUpdate, 2));
};


/**
 * @param {?proto.bragi.RushCricketMatchUpdate|undefined} value
 * @return {!proto.bragi.RushCricketMatchMessage.Payload} returns this
*/
proto.bragi.RushCricketMatchMessage.Payload.prototype.setUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.RushCricketMatchMessage.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketMatchMessage.Payload} returns this
 */
proto.bragi.RushCricketMatchMessage.Payload.prototype.clearUpdate = function() {
  return this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketMatchMessage.Payload.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string match_urn = 1;
 * @return {string}
 */
proto.bragi.RushCricketMatchMessage.prototype.getMatchUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushCricketMatchMessage} returns this
 */
proto.bragi.RushCricketMatchMessage.prototype.setMatchUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 sequence = 2;
 * @return {number}
 */
proto.bragi.RushCricketMatchMessage.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketMatchMessage} returns this
 */
proto.bragi.RushCricketMatchMessage.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.bragi.RushCricketMatchMessage.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.bragi.RushCricketMatchMessage} returns this
*/
proto.bragi.RushCricketMatchMessage.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketMatchMessage} returns this
 */
proto.bragi.RushCricketMatchMessage.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketMatchMessage.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DataStatus data_status = 4;
 * @return {!proto.bragi.DataStatus}
 */
proto.bragi.RushCricketMatchMessage.prototype.getDataStatus = function() {
  return /** @type {!proto.bragi.DataStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.bragi.DataStatus} value
 * @return {!proto.bragi.RushCricketMatchMessage} returns this
 */
proto.bragi.RushCricketMatchMessage.prototype.setDataStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Payload payload = 5;
 * @return {?proto.bragi.RushCricketMatchMessage.Payload}
 */
proto.bragi.RushCricketMatchMessage.prototype.getPayload = function() {
  return /** @type{?proto.bragi.RushCricketMatchMessage.Payload} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketMatchMessage.Payload, 5));
};


/**
 * @param {?proto.bragi.RushCricketMatchMessage.Payload|undefined} value
 * @return {!proto.bragi.RushCricketMatchMessage} returns this
*/
proto.bragi.RushCricketMatchMessage.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketMatchMessage} returns this
 */
proto.bragi.RushCricketMatchMessage.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketMatchMessage.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bragi.RushCricketMatchSnapshot.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketMatchSnapshot.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketMatchSnapshot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketMatchSnapshot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketMatchSnapshot.toObject = function(includeInstance, msg) {
  var f, obj = {
matchUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
sequence: jspb.Message.getFieldWithDefault(msg, 2, 0),
timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
dataStatus: jspb.Message.getFieldWithDefault(msg, 4, 0),
announcementsList: jspb.Message.toObjectList(msg.getAnnouncementsList(),
    bragi_common_pb.Announcement.toObject, includeInstance),
matchState: (f = msg.getMatchState()) && proto.bragi.RushCricketMatchState.toObject(includeInstance, f),
tournament: (f = msg.getTournament()) && bragi_common_pb.Tournament.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketMatchSnapshot}
 */
proto.bragi.RushCricketMatchSnapshot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketMatchSnapshot;
  return proto.bragi.RushCricketMatchSnapshot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketMatchSnapshot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketMatchSnapshot}
 */
proto.bragi.RushCricketMatchSnapshot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatchUrn(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 4:
      var value = /** @type {!proto.bragi.DataStatus} */ (reader.readEnum());
      msg.setDataStatus(value);
      break;
    case 5:
      var value = new bragi_common_pb.Announcement;
      reader.readMessage(value,bragi_common_pb.Announcement.deserializeBinaryFromReader);
      msg.addAnnouncements(value);
      break;
    case 6:
      var value = new proto.bragi.RushCricketMatchState;
      reader.readMessage(value,proto.bragi.RushCricketMatchState.deserializeBinaryFromReader);
      msg.setMatchState(value);
      break;
    case 7:
      var value = new bragi_common_pb.Tournament;
      reader.readMessage(value,bragi_common_pb.Tournament.deserializeBinaryFromReader);
      msg.setTournament(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketMatchSnapshot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketMatchSnapshot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketMatchSnapshot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketMatchSnapshot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDataStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAnnouncementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      bragi_common_pb.Announcement.serializeBinaryToWriter
    );
  }
  f = message.getMatchState();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.bragi.RushCricketMatchState.serializeBinaryToWriter
    );
  }
  f = message.getTournament();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      bragi_common_pb.Tournament.serializeBinaryToWriter
    );
  }
};


/**
 * optional string match_urn = 1;
 * @return {string}
 */
proto.bragi.RushCricketMatchSnapshot.prototype.getMatchUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushCricketMatchSnapshot} returns this
 */
proto.bragi.RushCricketMatchSnapshot.prototype.setMatchUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 sequence = 2;
 * @return {number}
 */
proto.bragi.RushCricketMatchSnapshot.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketMatchSnapshot} returns this
 */
proto.bragi.RushCricketMatchSnapshot.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.bragi.RushCricketMatchSnapshot.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.bragi.RushCricketMatchSnapshot} returns this
*/
proto.bragi.RushCricketMatchSnapshot.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketMatchSnapshot} returns this
 */
proto.bragi.RushCricketMatchSnapshot.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketMatchSnapshot.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DataStatus data_status = 4;
 * @return {!proto.bragi.DataStatus}
 */
proto.bragi.RushCricketMatchSnapshot.prototype.getDataStatus = function() {
  return /** @type {!proto.bragi.DataStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.bragi.DataStatus} value
 * @return {!proto.bragi.RushCricketMatchSnapshot} returns this
 */
proto.bragi.RushCricketMatchSnapshot.prototype.setDataStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * repeated Announcement announcements = 5;
 * @return {!Array<!proto.bragi.Announcement>}
 */
proto.bragi.RushCricketMatchSnapshot.prototype.getAnnouncementsList = function() {
  return /** @type{!Array<!proto.bragi.Announcement>} */ (
    jspb.Message.getRepeatedWrapperField(this, bragi_common_pb.Announcement, 5));
};


/**
 * @param {!Array<!proto.bragi.Announcement>} value
 * @return {!proto.bragi.RushCricketMatchSnapshot} returns this
*/
proto.bragi.RushCricketMatchSnapshot.prototype.setAnnouncementsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.bragi.Announcement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bragi.Announcement}
 */
proto.bragi.RushCricketMatchSnapshot.prototype.addAnnouncements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.bragi.Announcement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bragi.RushCricketMatchSnapshot} returns this
 */
proto.bragi.RushCricketMatchSnapshot.prototype.clearAnnouncementsList = function() {
  return this.setAnnouncementsList([]);
};


/**
 * optional RushCricketMatchState match_state = 6;
 * @return {?proto.bragi.RushCricketMatchState}
 */
proto.bragi.RushCricketMatchSnapshot.prototype.getMatchState = function() {
  return /** @type{?proto.bragi.RushCricketMatchState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketMatchState, 6));
};


/**
 * @param {?proto.bragi.RushCricketMatchState|undefined} value
 * @return {!proto.bragi.RushCricketMatchSnapshot} returns this
*/
proto.bragi.RushCricketMatchSnapshot.prototype.setMatchState = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketMatchSnapshot} returns this
 */
proto.bragi.RushCricketMatchSnapshot.prototype.clearMatchState = function() {
  return this.setMatchState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketMatchSnapshot.prototype.hasMatchState = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Tournament tournament = 7;
 * @return {?proto.bragi.Tournament}
 */
proto.bragi.RushCricketMatchSnapshot.prototype.getTournament = function() {
  return /** @type{?proto.bragi.Tournament} */ (
    jspb.Message.getWrapperField(this, bragi_common_pb.Tournament, 7));
};


/**
 * @param {?proto.bragi.Tournament|undefined} value
 * @return {!proto.bragi.RushCricketMatchSnapshot} returns this
*/
proto.bragi.RushCricketMatchSnapshot.prototype.setTournament = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketMatchSnapshot} returns this
 */
proto.bragi.RushCricketMatchSnapshot.prototype.clearTournament = function() {
  return this.setTournament(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketMatchSnapshot.prototype.hasTournament = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketMatchUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketMatchUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketMatchUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketMatchUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
payload: (f = msg.getPayload()) && proto.bragi.RushCricketMatchUpdate.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketMatchUpdate}
 */
proto.bragi.RushCricketMatchUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketMatchUpdate;
  return proto.bragi.RushCricketMatchUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketMatchUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketMatchUpdate}
 */
proto.bragi.RushCricketMatchUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushCricketMatchUpdate.Payload;
      reader.readMessage(value,proto.bragi.RushCricketMatchUpdate.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketMatchUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketMatchUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketMatchUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketMatchUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.RushCricketMatchUpdate.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.RushCricketMatchUpdate.Payload.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.bragi.RushCricketMatchUpdate.Payload.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  MATCH_STATE: 1,
  PARTIAL_UPDATES: 2
};

/**
 * @return {proto.bragi.RushCricketMatchUpdate.Payload.PayloadCase}
 */
proto.bragi.RushCricketMatchUpdate.Payload.prototype.getPayloadCase = function() {
  return /** @type {proto.bragi.RushCricketMatchUpdate.Payload.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.bragi.RushCricketMatchUpdate.Payload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketMatchUpdate.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketMatchUpdate.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketMatchUpdate.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketMatchUpdate.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
matchState: (f = msg.getMatchState()) && proto.bragi.RushCricketMatchState.toObject(includeInstance, f),
partialUpdates: (f = msg.getPartialUpdates()) && proto.bragi.RushCricketMatchStatePartialUpdates.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketMatchUpdate.Payload}
 */
proto.bragi.RushCricketMatchUpdate.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketMatchUpdate.Payload;
  return proto.bragi.RushCricketMatchUpdate.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketMatchUpdate.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketMatchUpdate.Payload}
 */
proto.bragi.RushCricketMatchUpdate.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushCricketMatchState;
      reader.readMessage(value,proto.bragi.RushCricketMatchState.deserializeBinaryFromReader);
      msg.setMatchState(value);
      break;
    case 2:
      var value = new proto.bragi.RushCricketMatchStatePartialUpdates;
      reader.readMessage(value,proto.bragi.RushCricketMatchStatePartialUpdates.deserializeBinaryFromReader);
      msg.setPartialUpdates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketMatchUpdate.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketMatchUpdate.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketMatchUpdate.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketMatchUpdate.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.RushCricketMatchState.serializeBinaryToWriter
    );
  }
  f = message.getPartialUpdates();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushCricketMatchStatePartialUpdates.serializeBinaryToWriter
    );
  }
};


/**
 * optional RushCricketMatchState match_state = 1;
 * @return {?proto.bragi.RushCricketMatchState}
 */
proto.bragi.RushCricketMatchUpdate.Payload.prototype.getMatchState = function() {
  return /** @type{?proto.bragi.RushCricketMatchState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketMatchState, 1));
};


/**
 * @param {?proto.bragi.RushCricketMatchState|undefined} value
 * @return {!proto.bragi.RushCricketMatchUpdate.Payload} returns this
*/
proto.bragi.RushCricketMatchUpdate.Payload.prototype.setMatchState = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.RushCricketMatchUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketMatchUpdate.Payload} returns this
 */
proto.bragi.RushCricketMatchUpdate.Payload.prototype.clearMatchState = function() {
  return this.setMatchState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketMatchUpdate.Payload.prototype.hasMatchState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RushCricketMatchStatePartialUpdates partial_updates = 2;
 * @return {?proto.bragi.RushCricketMatchStatePartialUpdates}
 */
proto.bragi.RushCricketMatchUpdate.Payload.prototype.getPartialUpdates = function() {
  return /** @type{?proto.bragi.RushCricketMatchStatePartialUpdates} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketMatchStatePartialUpdates, 2));
};


/**
 * @param {?proto.bragi.RushCricketMatchStatePartialUpdates|undefined} value
 * @return {!proto.bragi.RushCricketMatchUpdate.Payload} returns this
*/
proto.bragi.RushCricketMatchUpdate.Payload.prototype.setPartialUpdates = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.RushCricketMatchUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketMatchUpdate.Payload} returns this
 */
proto.bragi.RushCricketMatchUpdate.Payload.prototype.clearPartialUpdates = function() {
  return this.setPartialUpdates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketMatchUpdate.Payload.prototype.hasPartialUpdates = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Payload payload = 1;
 * @return {?proto.bragi.RushCricketMatchUpdate.Payload}
 */
proto.bragi.RushCricketMatchUpdate.prototype.getPayload = function() {
  return /** @type{?proto.bragi.RushCricketMatchUpdate.Payload} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketMatchUpdate.Payload, 1));
};


/**
 * @param {?proto.bragi.RushCricketMatchUpdate.Payload|undefined} value
 * @return {!proto.bragi.RushCricketMatchUpdate} returns this
*/
proto.bragi.RushCricketMatchUpdate.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketMatchUpdate} returns this
 */
proto.bragi.RushCricketMatchUpdate.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketMatchUpdate.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bragi.RushCricketMatchStatePartialUpdates.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketMatchStatePartialUpdates.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketMatchStatePartialUpdates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketMatchStatePartialUpdates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketMatchStatePartialUpdates.toObject = function(includeInstance, msg) {
  var f, obj = {
updatesList: jspb.Message.toObjectList(msg.getUpdatesList(),
    proto.bragi.RushCricketMatchStatePartialUpdate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketMatchStatePartialUpdates}
 */
proto.bragi.RushCricketMatchStatePartialUpdates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketMatchStatePartialUpdates;
  return proto.bragi.RushCricketMatchStatePartialUpdates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketMatchStatePartialUpdates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketMatchStatePartialUpdates}
 */
proto.bragi.RushCricketMatchStatePartialUpdates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushCricketMatchStatePartialUpdate;
      reader.readMessage(value,proto.bragi.RushCricketMatchStatePartialUpdate.deserializeBinaryFromReader);
      msg.addUpdates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketMatchStatePartialUpdates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketMatchStatePartialUpdates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketMatchStatePartialUpdates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketMatchStatePartialUpdates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bragi.RushCricketMatchStatePartialUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RushCricketMatchStatePartialUpdate updates = 1;
 * @return {!Array<!proto.bragi.RushCricketMatchStatePartialUpdate>}
 */
proto.bragi.RushCricketMatchStatePartialUpdates.prototype.getUpdatesList = function() {
  return /** @type{!Array<!proto.bragi.RushCricketMatchStatePartialUpdate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bragi.RushCricketMatchStatePartialUpdate, 1));
};


/**
 * @param {!Array<!proto.bragi.RushCricketMatchStatePartialUpdate>} value
 * @return {!proto.bragi.RushCricketMatchStatePartialUpdates} returns this
*/
proto.bragi.RushCricketMatchStatePartialUpdates.prototype.setUpdatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bragi.RushCricketMatchStatePartialUpdate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bragi.RushCricketMatchStatePartialUpdate}
 */
proto.bragi.RushCricketMatchStatePartialUpdates.prototype.addUpdates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bragi.RushCricketMatchStatePartialUpdate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bragi.RushCricketMatchStatePartialUpdates} returns this
 */
proto.bragi.RushCricketMatchStatePartialUpdates.prototype.clearUpdatesList = function() {
  return this.setUpdatesList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.RushCricketMatchStatePartialUpdate.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.bragi.RushCricketMatchStatePartialUpdate.UpdateCase = {
  UPDATE_NOT_SET: 0,
  SCORE: 1,
  CURRENT_INNING: 2,
  CURRENT_INNING_PARTIAL_UPDATE: 3,
  TIMELINE: 4
};

/**
 * @return {proto.bragi.RushCricketMatchStatePartialUpdate.UpdateCase}
 */
proto.bragi.RushCricketMatchStatePartialUpdate.prototype.getUpdateCase = function() {
  return /** @type {proto.bragi.RushCricketMatchStatePartialUpdate.UpdateCase} */(jspb.Message.computeOneofCase(this, proto.bragi.RushCricketMatchStatePartialUpdate.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketMatchStatePartialUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketMatchStatePartialUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketMatchStatePartialUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketMatchStatePartialUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
score: (f = msg.getScore()) && proto.bragi.RushCricketMatchScoreState.toObject(includeInstance, f),
currentInning: (f = msg.getCurrentInning()) && proto.bragi.RushCricketCurrentInningState.toObject(includeInstance, f),
currentInningPartialUpdate: (f = msg.getCurrentInningPartialUpdate()) && proto.bragi.RushCricketCurrentInningStatePartialUpdate.toObject(includeInstance, f),
timeline: (f = msg.getTimeline()) && proto.bragi.RushCricketTimelineState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketMatchStatePartialUpdate}
 */
proto.bragi.RushCricketMatchStatePartialUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketMatchStatePartialUpdate;
  return proto.bragi.RushCricketMatchStatePartialUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketMatchStatePartialUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketMatchStatePartialUpdate}
 */
proto.bragi.RushCricketMatchStatePartialUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushCricketMatchScoreState;
      reader.readMessage(value,proto.bragi.RushCricketMatchScoreState.deserializeBinaryFromReader);
      msg.setScore(value);
      break;
    case 2:
      var value = new proto.bragi.RushCricketCurrentInningState;
      reader.readMessage(value,proto.bragi.RushCricketCurrentInningState.deserializeBinaryFromReader);
      msg.setCurrentInning(value);
      break;
    case 3:
      var value = new proto.bragi.RushCricketCurrentInningStatePartialUpdate;
      reader.readMessage(value,proto.bragi.RushCricketCurrentInningStatePartialUpdate.deserializeBinaryFromReader);
      msg.setCurrentInningPartialUpdate(value);
      break;
    case 4:
      var value = new proto.bragi.RushCricketTimelineState;
      reader.readMessage(value,proto.bragi.RushCricketTimelineState.deserializeBinaryFromReader);
      msg.setTimeline(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketMatchStatePartialUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketMatchStatePartialUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketMatchStatePartialUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketMatchStatePartialUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScore();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.RushCricketMatchScoreState.serializeBinaryToWriter
    );
  }
  f = message.getCurrentInning();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushCricketCurrentInningState.serializeBinaryToWriter
    );
  }
  f = message.getCurrentInningPartialUpdate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.RushCricketCurrentInningStatePartialUpdate.serializeBinaryToWriter
    );
  }
  f = message.getTimeline();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bragi.RushCricketTimelineState.serializeBinaryToWriter
    );
  }
};


/**
 * optional RushCricketMatchScoreState score = 1;
 * @return {?proto.bragi.RushCricketMatchScoreState}
 */
proto.bragi.RushCricketMatchStatePartialUpdate.prototype.getScore = function() {
  return /** @type{?proto.bragi.RushCricketMatchScoreState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketMatchScoreState, 1));
};


/**
 * @param {?proto.bragi.RushCricketMatchScoreState|undefined} value
 * @return {!proto.bragi.RushCricketMatchStatePartialUpdate} returns this
*/
proto.bragi.RushCricketMatchStatePartialUpdate.prototype.setScore = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.RushCricketMatchStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketMatchStatePartialUpdate} returns this
 */
proto.bragi.RushCricketMatchStatePartialUpdate.prototype.clearScore = function() {
  return this.setScore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketMatchStatePartialUpdate.prototype.hasScore = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RushCricketCurrentInningState current_inning = 2;
 * @return {?proto.bragi.RushCricketCurrentInningState}
 */
proto.bragi.RushCricketMatchStatePartialUpdate.prototype.getCurrentInning = function() {
  return /** @type{?proto.bragi.RushCricketCurrentInningState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketCurrentInningState, 2));
};


/**
 * @param {?proto.bragi.RushCricketCurrentInningState|undefined} value
 * @return {!proto.bragi.RushCricketMatchStatePartialUpdate} returns this
*/
proto.bragi.RushCricketMatchStatePartialUpdate.prototype.setCurrentInning = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.RushCricketMatchStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketMatchStatePartialUpdate} returns this
 */
proto.bragi.RushCricketMatchStatePartialUpdate.prototype.clearCurrentInning = function() {
  return this.setCurrentInning(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketMatchStatePartialUpdate.prototype.hasCurrentInning = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RushCricketCurrentInningStatePartialUpdate current_inning_partial_update = 3;
 * @return {?proto.bragi.RushCricketCurrentInningStatePartialUpdate}
 */
proto.bragi.RushCricketMatchStatePartialUpdate.prototype.getCurrentInningPartialUpdate = function() {
  return /** @type{?proto.bragi.RushCricketCurrentInningStatePartialUpdate} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketCurrentInningStatePartialUpdate, 3));
};


/**
 * @param {?proto.bragi.RushCricketCurrentInningStatePartialUpdate|undefined} value
 * @return {!proto.bragi.RushCricketMatchStatePartialUpdate} returns this
*/
proto.bragi.RushCricketMatchStatePartialUpdate.prototype.setCurrentInningPartialUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.bragi.RushCricketMatchStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketMatchStatePartialUpdate} returns this
 */
proto.bragi.RushCricketMatchStatePartialUpdate.prototype.clearCurrentInningPartialUpdate = function() {
  return this.setCurrentInningPartialUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketMatchStatePartialUpdate.prototype.hasCurrentInningPartialUpdate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RushCricketTimelineState timeline = 4;
 * @return {?proto.bragi.RushCricketTimelineState}
 */
proto.bragi.RushCricketMatchStatePartialUpdate.prototype.getTimeline = function() {
  return /** @type{?proto.bragi.RushCricketTimelineState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketTimelineState, 4));
};


/**
 * @param {?proto.bragi.RushCricketTimelineState|undefined} value
 * @return {!proto.bragi.RushCricketMatchStatePartialUpdate} returns this
*/
proto.bragi.RushCricketMatchStatePartialUpdate.prototype.setTimeline = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.bragi.RushCricketMatchStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketMatchStatePartialUpdate} returns this
 */
proto.bragi.RushCricketMatchStatePartialUpdate.prototype.clearTimeline = function() {
  return this.setTimeline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketMatchStatePartialUpdate.prototype.hasTimeline = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketMatchState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketMatchState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketMatchState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketMatchState.toObject = function(includeInstance, msg) {
  var f, obj = {
matchUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
matchType: jspb.Message.getFieldWithDefault(msg, 2, 0),
homeTeam: (f = msg.getHomeTeam()) && bragi_common_pb.Team.toObject(includeInstance, f),
awayTeam: (f = msg.getAwayTeam()) && bragi_common_pb.Team.toObject(includeInstance, f),
score: (f = msg.getScore()) && proto.bragi.RushCricketMatchScoreState.toObject(includeInstance, f),
matchStatus: jspb.Message.getFieldWithDefault(msg, 6, 0),
timeline: (f = msg.getTimeline()) && proto.bragi.RushCricketTimelineState.toObject(includeInstance, f),
currentInning: (f = msg.getCurrentInning()) && proto.bragi.RushCricketCurrentInningState.toObject(includeInstance, f),
winTeamUrn: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketMatchState}
 */
proto.bragi.RushCricketMatchState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketMatchState;
  return proto.bragi.RushCricketMatchState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketMatchState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketMatchState}
 */
proto.bragi.RushCricketMatchState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatchUrn(value);
      break;
    case 2:
      var value = /** @type {!proto.bragi.BestOfType} */ (reader.readEnum());
      msg.setMatchType(value);
      break;
    case 3:
      var value = new bragi_common_pb.Team;
      reader.readMessage(value,bragi_common_pb.Team.deserializeBinaryFromReader);
      msg.setHomeTeam(value);
      break;
    case 4:
      var value = new bragi_common_pb.Team;
      reader.readMessage(value,bragi_common_pb.Team.deserializeBinaryFromReader);
      msg.setAwayTeam(value);
      break;
    case 5:
      var value = new proto.bragi.RushCricketMatchScoreState;
      reader.readMessage(value,proto.bragi.RushCricketMatchScoreState.deserializeBinaryFromReader);
      msg.setScore(value);
      break;
    case 6:
      var value = /** @type {!proto.bragi.MatchStatusType} */ (reader.readEnum());
      msg.setMatchStatus(value);
      break;
    case 7:
      var value = new proto.bragi.RushCricketTimelineState;
      reader.readMessage(value,proto.bragi.RushCricketTimelineState.deserializeBinaryFromReader);
      msg.setTimeline(value);
      break;
    case 8:
      var value = new proto.bragi.RushCricketCurrentInningState;
      reader.readMessage(value,proto.bragi.RushCricketCurrentInningState.deserializeBinaryFromReader);
      msg.setCurrentInning(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setWinTeamUrn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketMatchState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketMatchState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketMatchState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketMatchState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMatchType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getHomeTeam();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      bragi_common_pb.Team.serializeBinaryToWriter
    );
  }
  f = message.getAwayTeam();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      bragi_common_pb.Team.serializeBinaryToWriter
    );
  }
  f = message.getScore();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bragi.RushCricketMatchScoreState.serializeBinaryToWriter
    );
  }
  f = message.getMatchStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getTimeline();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.bragi.RushCricketTimelineState.serializeBinaryToWriter
    );
  }
  f = message.getCurrentInning();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.bragi.RushCricketCurrentInningState.serializeBinaryToWriter
    );
  }
  f = message.getWinTeamUrn();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string match_urn = 1;
 * @return {string}
 */
proto.bragi.RushCricketMatchState.prototype.getMatchUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushCricketMatchState} returns this
 */
proto.bragi.RushCricketMatchState.prototype.setMatchUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional BestOfType match_type = 2;
 * @return {!proto.bragi.BestOfType}
 */
proto.bragi.RushCricketMatchState.prototype.getMatchType = function() {
  return /** @type {!proto.bragi.BestOfType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bragi.BestOfType} value
 * @return {!proto.bragi.RushCricketMatchState} returns this
 */
proto.bragi.RushCricketMatchState.prototype.setMatchType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Team home_team = 3;
 * @return {?proto.bragi.Team}
 */
proto.bragi.RushCricketMatchState.prototype.getHomeTeam = function() {
  return /** @type{?proto.bragi.Team} */ (
    jspb.Message.getWrapperField(this, bragi_common_pb.Team, 3));
};


/**
 * @param {?proto.bragi.Team|undefined} value
 * @return {!proto.bragi.RushCricketMatchState} returns this
*/
proto.bragi.RushCricketMatchState.prototype.setHomeTeam = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketMatchState} returns this
 */
proto.bragi.RushCricketMatchState.prototype.clearHomeTeam = function() {
  return this.setHomeTeam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketMatchState.prototype.hasHomeTeam = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Team away_team = 4;
 * @return {?proto.bragi.Team}
 */
proto.bragi.RushCricketMatchState.prototype.getAwayTeam = function() {
  return /** @type{?proto.bragi.Team} */ (
    jspb.Message.getWrapperField(this, bragi_common_pb.Team, 4));
};


/**
 * @param {?proto.bragi.Team|undefined} value
 * @return {!proto.bragi.RushCricketMatchState} returns this
*/
proto.bragi.RushCricketMatchState.prototype.setAwayTeam = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketMatchState} returns this
 */
proto.bragi.RushCricketMatchState.prototype.clearAwayTeam = function() {
  return this.setAwayTeam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketMatchState.prototype.hasAwayTeam = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RushCricketMatchScoreState score = 5;
 * @return {?proto.bragi.RushCricketMatchScoreState}
 */
proto.bragi.RushCricketMatchState.prototype.getScore = function() {
  return /** @type{?proto.bragi.RushCricketMatchScoreState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketMatchScoreState, 5));
};


/**
 * @param {?proto.bragi.RushCricketMatchScoreState|undefined} value
 * @return {!proto.bragi.RushCricketMatchState} returns this
*/
proto.bragi.RushCricketMatchState.prototype.setScore = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketMatchState} returns this
 */
proto.bragi.RushCricketMatchState.prototype.clearScore = function() {
  return this.setScore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketMatchState.prototype.hasScore = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional MatchStatusType match_status = 6;
 * @return {!proto.bragi.MatchStatusType}
 */
proto.bragi.RushCricketMatchState.prototype.getMatchStatus = function() {
  return /** @type {!proto.bragi.MatchStatusType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.bragi.MatchStatusType} value
 * @return {!proto.bragi.RushCricketMatchState} returns this
 */
proto.bragi.RushCricketMatchState.prototype.setMatchStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional RushCricketTimelineState timeline = 7;
 * @return {?proto.bragi.RushCricketTimelineState}
 */
proto.bragi.RushCricketMatchState.prototype.getTimeline = function() {
  return /** @type{?proto.bragi.RushCricketTimelineState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketTimelineState, 7));
};


/**
 * @param {?proto.bragi.RushCricketTimelineState|undefined} value
 * @return {!proto.bragi.RushCricketMatchState} returns this
*/
proto.bragi.RushCricketMatchState.prototype.setTimeline = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketMatchState} returns this
 */
proto.bragi.RushCricketMatchState.prototype.clearTimeline = function() {
  return this.setTimeline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketMatchState.prototype.hasTimeline = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional RushCricketCurrentInningState current_inning = 8;
 * @return {?proto.bragi.RushCricketCurrentInningState}
 */
proto.bragi.RushCricketMatchState.prototype.getCurrentInning = function() {
  return /** @type{?proto.bragi.RushCricketCurrentInningState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketCurrentInningState, 8));
};


/**
 * @param {?proto.bragi.RushCricketCurrentInningState|undefined} value
 * @return {!proto.bragi.RushCricketMatchState} returns this
*/
proto.bragi.RushCricketMatchState.prototype.setCurrentInning = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketMatchState} returns this
 */
proto.bragi.RushCricketMatchState.prototype.clearCurrentInning = function() {
  return this.setCurrentInning(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketMatchState.prototype.hasCurrentInning = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string win_team_urn = 9;
 * @return {string}
 */
proto.bragi.RushCricketMatchState.prototype.getWinTeamUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushCricketMatchState} returns this
 */
proto.bragi.RushCricketMatchState.prototype.setWinTeamUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketMatchScoreState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketMatchScoreState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketMatchScoreState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketMatchScoreState.toObject = function(includeInstance, msg) {
  var f, obj = {
homeScore: jspb.Message.getFieldWithDefault(msg, 1, 0),
awayScore: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketMatchScoreState}
 */
proto.bragi.RushCricketMatchScoreState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketMatchScoreState;
  return proto.bragi.RushCricketMatchScoreState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketMatchScoreState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketMatchScoreState}
 */
proto.bragi.RushCricketMatchScoreState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHomeScore(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAwayScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketMatchScoreState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketMatchScoreState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketMatchScoreState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketMatchScoreState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHomeScore();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAwayScore();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 home_score = 1;
 * @return {number}
 */
proto.bragi.RushCricketMatchScoreState.prototype.getHomeScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketMatchScoreState} returns this
 */
proto.bragi.RushCricketMatchScoreState.prototype.setHomeScore = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 away_score = 2;
 * @return {number}
 */
proto.bragi.RushCricketMatchScoreState.prototype.getAwayScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketMatchScoreState} returns this
 */
proto.bragi.RushCricketMatchScoreState.prototype.setAwayScore = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketCurrentMapScoreState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketCurrentMapScoreState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketCurrentMapScoreState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketCurrentMapScoreState.toObject = function(includeInstance, msg) {
  var f, obj = {
homeRuns: jspb.Message.getFieldWithDefault(msg, 1, 0),
awayRuns: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketCurrentMapScoreState}
 */
proto.bragi.RushCricketCurrentMapScoreState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketCurrentMapScoreState;
  return proto.bragi.RushCricketCurrentMapScoreState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketCurrentMapScoreState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketCurrentMapScoreState}
 */
proto.bragi.RushCricketCurrentMapScoreState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHomeRuns(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAwayRuns(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketCurrentMapScoreState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketCurrentMapScoreState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketCurrentMapScoreState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketCurrentMapScoreState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHomeRuns();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAwayRuns();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 home_runs = 1;
 * @return {number}
 */
proto.bragi.RushCricketCurrentMapScoreState.prototype.getHomeRuns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketCurrentMapScoreState} returns this
 */
proto.bragi.RushCricketCurrentMapScoreState.prototype.setHomeRuns = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 away_runs = 2;
 * @return {number}
 */
proto.bragi.RushCricketCurrentMapScoreState.prototype.getAwayRuns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketCurrentMapScoreState} returns this
 */
proto.bragi.RushCricketCurrentMapScoreState.prototype.setAwayRuns = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bragi.RushCricketTimelineState.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketTimelineState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketTimelineState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketTimelineState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketTimelineState.toObject = function(includeInstance, msg) {
  var f, obj = {
eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.bragi.RushCricketTimelineEvent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketTimelineState}
 */
proto.bragi.RushCricketTimelineState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketTimelineState;
  return proto.bragi.RushCricketTimelineState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketTimelineState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketTimelineState}
 */
proto.bragi.RushCricketTimelineState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushCricketTimelineEvent;
      reader.readMessage(value,proto.bragi.RushCricketTimelineEvent.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketTimelineState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketTimelineState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketTimelineState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketTimelineState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bragi.RushCricketTimelineEvent.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RushCricketTimelineEvent events = 1;
 * @return {!Array<!proto.bragi.RushCricketTimelineEvent>}
 */
proto.bragi.RushCricketTimelineState.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.bragi.RushCricketTimelineEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bragi.RushCricketTimelineEvent, 1));
};


/**
 * @param {!Array<!proto.bragi.RushCricketTimelineEvent>} value
 * @return {!proto.bragi.RushCricketTimelineState} returns this
*/
proto.bragi.RushCricketTimelineState.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bragi.RushCricketTimelineEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bragi.RushCricketTimelineEvent}
 */
proto.bragi.RushCricketTimelineState.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bragi.RushCricketTimelineEvent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bragi.RushCricketTimelineState} returns this
 */
proto.bragi.RushCricketTimelineState.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketTimelineEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketTimelineEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketTimelineEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketTimelineEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
teamUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
eventType: jspb.Message.getFieldWithDefault(msg, 2, 0),
ballState: (f = msg.getBallState()) && proto.bragi.RushCricketBallState.toObject(includeInstance, f),
runs: jspb.Message.getFieldWithDefault(msg, 4, 0),
boundaryRun: jspb.Message.getFieldWithDefault(msg, 5, 0),
bowlerError: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketTimelineEvent}
 */
proto.bragi.RushCricketTimelineEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketTimelineEvent;
  return proto.bragi.RushCricketTimelineEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketTimelineEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketTimelineEvent}
 */
proto.bragi.RushCricketTimelineEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamUrn(value);
      break;
    case 2:
      var value = /** @type {!proto.bragi.RushCricketEventType} */ (reader.readEnum());
      msg.setEventType(value);
      break;
    case 3:
      var value = new proto.bragi.RushCricketBallState;
      reader.readMessage(value,proto.bragi.RushCricketBallState.deserializeBinaryFromReader);
      msg.setBallState(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRuns(value);
      break;
    case 5:
      var value = /** @type {!proto.bragi.RushCricketBoundaryRun} */ (reader.readEnum());
      msg.setBoundaryRun(value);
      break;
    case 6:
      var value = /** @type {!proto.bragi.RushCricketBowlerError} */ (reader.readEnum());
      msg.setBowlerError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketTimelineEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketTimelineEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketTimelineEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketTimelineEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEventType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getBallState();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.RushCricketBallState.serializeBinaryToWriter
    );
  }
  f = message.getRuns();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getBoundaryRun();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getBowlerError();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional string team_urn = 1;
 * @return {string}
 */
proto.bragi.RushCricketTimelineEvent.prototype.getTeamUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushCricketTimelineEvent} returns this
 */
proto.bragi.RushCricketTimelineEvent.prototype.setTeamUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional RushCricketEventType event_type = 2;
 * @return {!proto.bragi.RushCricketEventType}
 */
proto.bragi.RushCricketTimelineEvent.prototype.getEventType = function() {
  return /** @type {!proto.bragi.RushCricketEventType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bragi.RushCricketEventType} value
 * @return {!proto.bragi.RushCricketTimelineEvent} returns this
 */
proto.bragi.RushCricketTimelineEvent.prototype.setEventType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional RushCricketBallState ball_state = 3;
 * @return {?proto.bragi.RushCricketBallState}
 */
proto.bragi.RushCricketTimelineEvent.prototype.getBallState = function() {
  return /** @type{?proto.bragi.RushCricketBallState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketBallState, 3));
};


/**
 * @param {?proto.bragi.RushCricketBallState|undefined} value
 * @return {!proto.bragi.RushCricketTimelineEvent} returns this
*/
proto.bragi.RushCricketTimelineEvent.prototype.setBallState = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketTimelineEvent} returns this
 */
proto.bragi.RushCricketTimelineEvent.prototype.clearBallState = function() {
  return this.setBallState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketTimelineEvent.prototype.hasBallState = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 runs = 4;
 * @return {number}
 */
proto.bragi.RushCricketTimelineEvent.prototype.getRuns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketTimelineEvent} returns this
 */
proto.bragi.RushCricketTimelineEvent.prototype.setRuns = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional RushCricketBoundaryRun boundary_run = 5;
 * @return {!proto.bragi.RushCricketBoundaryRun}
 */
proto.bragi.RushCricketTimelineEvent.prototype.getBoundaryRun = function() {
  return /** @type {!proto.bragi.RushCricketBoundaryRun} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.bragi.RushCricketBoundaryRun} value
 * @return {!proto.bragi.RushCricketTimelineEvent} returns this
 */
proto.bragi.RushCricketTimelineEvent.prototype.setBoundaryRun = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional RushCricketBowlerError bowler_error = 6;
 * @return {!proto.bragi.RushCricketBowlerError}
 */
proto.bragi.RushCricketTimelineEvent.prototype.getBowlerError = function() {
  return /** @type {!proto.bragi.RushCricketBowlerError} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.bragi.RushCricketBowlerError} value
 * @return {!proto.bragi.RushCricketTimelineEvent} returns this
 */
proto.bragi.RushCricketTimelineEvent.prototype.setBowlerError = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.UpdateCase = {
  UPDATE_NOT_SET: 0,
  GAME_TIME: 1,
  SCORE: 2,
  TEAM_CURRENT_INNING_STATE: 3,
  TEAM_CURRENT_INNING_PARTIAL_UPDATE: 4
};

/**
 * @return {proto.bragi.RushCricketCurrentInningStatePartialUpdate.UpdateCase}
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.prototype.getUpdateCase = function() {
  return /** @type {proto.bragi.RushCricketCurrentInningStatePartialUpdate.UpdateCase} */(jspb.Message.computeOneofCase(this, proto.bragi.RushCricketCurrentInningStatePartialUpdate.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketCurrentInningStatePartialUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketCurrentInningStatePartialUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
gameTime: (f = msg.getGameTime()) && proto.bragi.RushCricketCurrentMapTimeState.toObject(includeInstance, f),
score: (f = msg.getScore()) && proto.bragi.RushCricketCurrentMapScoreState.toObject(includeInstance, f),
teamCurrentInningState: (f = msg.getTeamCurrentInningState()) && proto.bragi.RushCricketTeamCurrentInningState.toObject(includeInstance, f),
teamCurrentInningPartialUpdate: (f = msg.getTeamCurrentInningPartialUpdate()) && proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketCurrentInningStatePartialUpdate}
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketCurrentInningStatePartialUpdate;
  return proto.bragi.RushCricketCurrentInningStatePartialUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketCurrentInningStatePartialUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketCurrentInningStatePartialUpdate}
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushCricketCurrentMapTimeState;
      reader.readMessage(value,proto.bragi.RushCricketCurrentMapTimeState.deserializeBinaryFromReader);
      msg.setGameTime(value);
      break;
    case 2:
      var value = new proto.bragi.RushCricketCurrentMapScoreState;
      reader.readMessage(value,proto.bragi.RushCricketCurrentMapScoreState.deserializeBinaryFromReader);
      msg.setScore(value);
      break;
    case 3:
      var value = new proto.bragi.RushCricketTeamCurrentInningState;
      reader.readMessage(value,proto.bragi.RushCricketTeamCurrentInningState.deserializeBinaryFromReader);
      msg.setTeamCurrentInningState(value);
      break;
    case 4:
      var value = new proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate;
      reader.readMessage(value,proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.deserializeBinaryFromReader);
      msg.setTeamCurrentInningPartialUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketCurrentInningStatePartialUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketCurrentInningStatePartialUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.RushCricketCurrentMapTimeState.serializeBinaryToWriter
    );
  }
  f = message.getScore();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushCricketCurrentMapScoreState.serializeBinaryToWriter
    );
  }
  f = message.getTeamCurrentInningState();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.RushCricketTeamCurrentInningState.serializeBinaryToWriter
    );
  }
  f = message.getTeamCurrentInningPartialUpdate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * optional RushCricketCurrentMapTimeState game_time = 1;
 * @return {?proto.bragi.RushCricketCurrentMapTimeState}
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.prototype.getGameTime = function() {
  return /** @type{?proto.bragi.RushCricketCurrentMapTimeState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketCurrentMapTimeState, 1));
};


/**
 * @param {?proto.bragi.RushCricketCurrentMapTimeState|undefined} value
 * @return {!proto.bragi.RushCricketCurrentInningStatePartialUpdate} returns this
*/
proto.bragi.RushCricketCurrentInningStatePartialUpdate.prototype.setGameTime = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.RushCricketCurrentInningStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketCurrentInningStatePartialUpdate} returns this
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.prototype.clearGameTime = function() {
  return this.setGameTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.prototype.hasGameTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RushCricketCurrentMapScoreState score = 2;
 * @return {?proto.bragi.RushCricketCurrentMapScoreState}
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.prototype.getScore = function() {
  return /** @type{?proto.bragi.RushCricketCurrentMapScoreState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketCurrentMapScoreState, 2));
};


/**
 * @param {?proto.bragi.RushCricketCurrentMapScoreState|undefined} value
 * @return {!proto.bragi.RushCricketCurrentInningStatePartialUpdate} returns this
*/
proto.bragi.RushCricketCurrentInningStatePartialUpdate.prototype.setScore = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.RushCricketCurrentInningStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketCurrentInningStatePartialUpdate} returns this
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.prototype.clearScore = function() {
  return this.setScore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.prototype.hasScore = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RushCricketTeamCurrentInningState team_current_inning_state = 3;
 * @return {?proto.bragi.RushCricketTeamCurrentInningState}
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.prototype.getTeamCurrentInningState = function() {
  return /** @type{?proto.bragi.RushCricketTeamCurrentInningState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketTeamCurrentInningState, 3));
};


/**
 * @param {?proto.bragi.RushCricketTeamCurrentInningState|undefined} value
 * @return {!proto.bragi.RushCricketCurrentInningStatePartialUpdate} returns this
*/
proto.bragi.RushCricketCurrentInningStatePartialUpdate.prototype.setTeamCurrentInningState = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.bragi.RushCricketCurrentInningStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketCurrentInningStatePartialUpdate} returns this
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.prototype.clearTeamCurrentInningState = function() {
  return this.setTeamCurrentInningState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.prototype.hasTeamCurrentInningState = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RushCricketTeamCurrentInningStatePartialUpdate team_current_inning_partial_update = 4;
 * @return {?proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate}
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.prototype.getTeamCurrentInningPartialUpdate = function() {
  return /** @type{?proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate, 4));
};


/**
 * @param {?proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate|undefined} value
 * @return {!proto.bragi.RushCricketCurrentInningStatePartialUpdate} returns this
*/
proto.bragi.RushCricketCurrentInningStatePartialUpdate.prototype.setTeamCurrentInningPartialUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.bragi.RushCricketCurrentInningStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketCurrentInningStatePartialUpdate} returns this
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.prototype.clearTeamCurrentInningPartialUpdate = function() {
  return this.setTeamCurrentInningPartialUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketCurrentInningStatePartialUpdate.prototype.hasTeamCurrentInningPartialUpdate = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketCurrentMapState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketCurrentMapState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketCurrentMapState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketCurrentMapState.toObject = function(includeInstance, msg) {
  var f, obj = {
period: jspb.Message.getFieldWithDefault(msg, 1, 0),
gameTime: (f = msg.getGameTime()) && proto.bragi.RushCricketCurrentMapTimeState.toObject(includeInstance, f),
score: (f = msg.getScore()) && proto.bragi.RushCricketCurrentMapScoreState.toObject(includeInstance, f),
mapPaused: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
teamsMap: (f = msg.getTeamsMap()) ? f.toObject(includeInstance, proto.bragi.RushCricketTeamCurrentMapState.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketCurrentMapState}
 */
proto.bragi.RushCricketCurrentMapState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketCurrentMapState;
  return proto.bragi.RushCricketCurrentMapState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketCurrentMapState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketCurrentMapState}
 */
proto.bragi.RushCricketCurrentMapState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.bragi.RushCricketPeriod} */ (reader.readEnum());
      msg.setPeriod(value);
      break;
    case 2:
      var value = new proto.bragi.RushCricketCurrentMapTimeState;
      reader.readMessage(value,proto.bragi.RushCricketCurrentMapTimeState.deserializeBinaryFromReader);
      msg.setGameTime(value);
      break;
    case 3:
      var value = new proto.bragi.RushCricketCurrentMapScoreState;
      reader.readMessage(value,proto.bragi.RushCricketCurrentMapScoreState.deserializeBinaryFromReader);
      msg.setScore(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMapPaused(value);
      break;
    case 5:
      var value = msg.getTeamsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.bragi.RushCricketTeamCurrentMapState.deserializeBinaryFromReader, "", new proto.bragi.RushCricketTeamCurrentMapState());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketCurrentMapState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketCurrentMapState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketCurrentMapState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketCurrentMapState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeriod();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getGameTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushCricketCurrentMapTimeState.serializeBinaryToWriter
    );
  }
  f = message.getScore();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.RushCricketCurrentMapScoreState.serializeBinaryToWriter
    );
  }
  f = message.getMapPaused();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getTeamsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.bragi.RushCricketTeamCurrentMapState.serializeBinaryToWriter);
  }
};


/**
 * optional RushCricketPeriod period = 1;
 * @return {!proto.bragi.RushCricketPeriod}
 */
proto.bragi.RushCricketCurrentMapState.prototype.getPeriod = function() {
  return /** @type {!proto.bragi.RushCricketPeriod} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.bragi.RushCricketPeriod} value
 * @return {!proto.bragi.RushCricketCurrentMapState} returns this
 */
proto.bragi.RushCricketCurrentMapState.prototype.setPeriod = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional RushCricketCurrentMapTimeState game_time = 2;
 * @return {?proto.bragi.RushCricketCurrentMapTimeState}
 */
proto.bragi.RushCricketCurrentMapState.prototype.getGameTime = function() {
  return /** @type{?proto.bragi.RushCricketCurrentMapTimeState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketCurrentMapTimeState, 2));
};


/**
 * @param {?proto.bragi.RushCricketCurrentMapTimeState|undefined} value
 * @return {!proto.bragi.RushCricketCurrentMapState} returns this
*/
proto.bragi.RushCricketCurrentMapState.prototype.setGameTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketCurrentMapState} returns this
 */
proto.bragi.RushCricketCurrentMapState.prototype.clearGameTime = function() {
  return this.setGameTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketCurrentMapState.prototype.hasGameTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RushCricketCurrentMapScoreState score = 3;
 * @return {?proto.bragi.RushCricketCurrentMapScoreState}
 */
proto.bragi.RushCricketCurrentMapState.prototype.getScore = function() {
  return /** @type{?proto.bragi.RushCricketCurrentMapScoreState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketCurrentMapScoreState, 3));
};


/**
 * @param {?proto.bragi.RushCricketCurrentMapScoreState|undefined} value
 * @return {!proto.bragi.RushCricketCurrentMapState} returns this
*/
proto.bragi.RushCricketCurrentMapState.prototype.setScore = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketCurrentMapState} returns this
 */
proto.bragi.RushCricketCurrentMapState.prototype.clearScore = function() {
  return this.setScore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketCurrentMapState.prototype.hasScore = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool map_paused = 4;
 * @return {boolean}
 */
proto.bragi.RushCricketCurrentMapState.prototype.getMapPaused = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bragi.RushCricketCurrentMapState} returns this
 */
proto.bragi.RushCricketCurrentMapState.prototype.setMapPaused = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * map<string, RushCricketTeamCurrentMapState> teams = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.bragi.RushCricketTeamCurrentMapState>}
 */
proto.bragi.RushCricketCurrentMapState.prototype.getTeamsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.bragi.RushCricketTeamCurrentMapState>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.bragi.RushCricketTeamCurrentMapState));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.bragi.RushCricketCurrentMapState} returns this
 */
proto.bragi.RushCricketCurrentMapState.prototype.clearTeamsMap = function() {
  this.getTeamsMap().clear();
  return this;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketCurrentMapTimeState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketCurrentMapTimeState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketCurrentMapTimeState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketCurrentMapTimeState.toObject = function(includeInstance, msg) {
  var f, obj = {
realTime: (f = msg.getRealTime()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
gameTime: (f = msg.getGameTime()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketCurrentMapTimeState}
 */
proto.bragi.RushCricketCurrentMapTimeState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketCurrentMapTimeState;
  return proto.bragi.RushCricketCurrentMapTimeState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketCurrentMapTimeState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketCurrentMapTimeState}
 */
proto.bragi.RushCricketCurrentMapTimeState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setRealTime(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setGameTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketCurrentMapTimeState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketCurrentMapTimeState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketCurrentMapTimeState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketCurrentMapTimeState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRealTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getGameTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Duration real_time = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.bragi.RushCricketCurrentMapTimeState.prototype.getRealTime = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.bragi.RushCricketCurrentMapTimeState} returns this
*/
proto.bragi.RushCricketCurrentMapTimeState.prototype.setRealTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketCurrentMapTimeState} returns this
 */
proto.bragi.RushCricketCurrentMapTimeState.prototype.clearRealTime = function() {
  return this.setRealTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketCurrentMapTimeState.prototype.hasRealTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Duration game_time = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.bragi.RushCricketCurrentMapTimeState.prototype.getGameTime = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.bragi.RushCricketCurrentMapTimeState} returns this
*/
proto.bragi.RushCricketCurrentMapTimeState.prototype.setGameTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketCurrentMapTimeState} returns this
 */
proto.bragi.RushCricketCurrentMapTimeState.prototype.clearGameTime = function() {
  return this.setGameTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketCurrentMapTimeState.prototype.hasGameTime = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
teamUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
payload: (f = msg.getPayload()) && proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate}
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate;
  return proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate}
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamUrn(value);
      break;
    case 2:
      var value = new proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload;
      reader.readMessage(value,proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  TEAM_CURRENT_INNING_STATE: 1
};

/**
 * @return {proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.PayloadCase}
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.prototype.getPayloadCase = function() {
  return /** @type {proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
teamCurrentInningState: (f = msg.getTeamCurrentInningState()) && proto.bragi.RushCricketTeamCurrentInningState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload}
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload;
  return proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload}
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushCricketTeamCurrentInningState;
      reader.readMessage(value,proto.bragi.RushCricketTeamCurrentInningState.deserializeBinaryFromReader);
      msg.setTeamCurrentInningState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamCurrentInningState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.RushCricketTeamCurrentInningState.serializeBinaryToWriter
    );
  }
};


/**
 * optional RushCricketTeamCurrentInningState team_current_inning_state = 1;
 * @return {?proto.bragi.RushCricketTeamCurrentInningState}
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.prototype.getTeamCurrentInningState = function() {
  return /** @type{?proto.bragi.RushCricketTeamCurrentInningState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketTeamCurrentInningState, 1));
};


/**
 * @param {?proto.bragi.RushCricketTeamCurrentInningState|undefined} value
 * @return {!proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload} returns this
*/
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.prototype.setTeamCurrentInningState = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload} returns this
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.prototype.clearTeamCurrentInningState = function() {
  return this.setTeamCurrentInningState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload.prototype.hasTeamCurrentInningState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string team_urn = 1;
 * @return {string}
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.prototype.getTeamUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate} returns this
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.prototype.setTeamUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Payload payload = 2;
 * @return {?proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload}
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.prototype.getPayload = function() {
  return /** @type{?proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload, 2));
};


/**
 * @param {?proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.Payload|undefined} value
 * @return {!proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate} returns this
*/
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate} returns this
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketTeamCurrentInningStatePartialUpdate.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketTeamCurrentMapState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketTeamCurrentMapState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketTeamCurrentMapState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketTeamCurrentMapState.toObject = function(includeInstance, msg) {
  var f, obj = {
teamUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
mapStatistics: (f = msg.getMapStatistics()) && proto.bragi.RushCricketTeamCurrentMapStatisticsState.toObject(includeInstance, f),
player: (f = msg.getPlayer()) && proto.bragi.RushCricketPlayerCurrentMapState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketTeamCurrentMapState}
 */
proto.bragi.RushCricketTeamCurrentMapState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketTeamCurrentMapState;
  return proto.bragi.RushCricketTeamCurrentMapState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketTeamCurrentMapState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketTeamCurrentMapState}
 */
proto.bragi.RushCricketTeamCurrentMapState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamUrn(value);
      break;
    case 2:
      var value = new proto.bragi.RushCricketTeamCurrentMapStatisticsState;
      reader.readMessage(value,proto.bragi.RushCricketTeamCurrentMapStatisticsState.deserializeBinaryFromReader);
      msg.setMapStatistics(value);
      break;
    case 3:
      var value = new proto.bragi.RushCricketPlayerCurrentMapState;
      reader.readMessage(value,proto.bragi.RushCricketPlayerCurrentMapState.deserializeBinaryFromReader);
      msg.setPlayer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketTeamCurrentMapState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketTeamCurrentMapState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketTeamCurrentMapState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketTeamCurrentMapState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMapStatistics();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushCricketTeamCurrentMapStatisticsState.serializeBinaryToWriter
    );
  }
  f = message.getPlayer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.RushCricketPlayerCurrentMapState.serializeBinaryToWriter
    );
  }
};


/**
 * optional string team_urn = 1;
 * @return {string}
 */
proto.bragi.RushCricketTeamCurrentMapState.prototype.getTeamUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushCricketTeamCurrentMapState} returns this
 */
proto.bragi.RushCricketTeamCurrentMapState.prototype.setTeamUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional RushCricketTeamCurrentMapStatisticsState map_statistics = 2;
 * @return {?proto.bragi.RushCricketTeamCurrentMapStatisticsState}
 */
proto.bragi.RushCricketTeamCurrentMapState.prototype.getMapStatistics = function() {
  return /** @type{?proto.bragi.RushCricketTeamCurrentMapStatisticsState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketTeamCurrentMapStatisticsState, 2));
};


/**
 * @param {?proto.bragi.RushCricketTeamCurrentMapStatisticsState|undefined} value
 * @return {!proto.bragi.RushCricketTeamCurrentMapState} returns this
*/
proto.bragi.RushCricketTeamCurrentMapState.prototype.setMapStatistics = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketTeamCurrentMapState} returns this
 */
proto.bragi.RushCricketTeamCurrentMapState.prototype.clearMapStatistics = function() {
  return this.setMapStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketTeamCurrentMapState.prototype.hasMapStatistics = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RushCricketPlayerCurrentMapState player = 3;
 * @return {?proto.bragi.RushCricketPlayerCurrentMapState}
 */
proto.bragi.RushCricketTeamCurrentMapState.prototype.getPlayer = function() {
  return /** @type{?proto.bragi.RushCricketPlayerCurrentMapState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketPlayerCurrentMapState, 3));
};


/**
 * @param {?proto.bragi.RushCricketPlayerCurrentMapState|undefined} value
 * @return {!proto.bragi.RushCricketTeamCurrentMapState} returns this
*/
proto.bragi.RushCricketTeamCurrentMapState.prototype.setPlayer = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketTeamCurrentMapState} returns this
 */
proto.bragi.RushCricketTeamCurrentMapState.prototype.clearPlayer = function() {
  return this.setPlayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketTeamCurrentMapState.prototype.hasPlayer = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketPlayerCurrentMapState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketPlayerCurrentMapState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketPlayerCurrentMapState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketPlayerCurrentMapState.toObject = function(includeInstance, msg) {
  var f, obj = {
playerUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
extName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketPlayerCurrentMapState}
 */
proto.bragi.RushCricketPlayerCurrentMapState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketPlayerCurrentMapState;
  return proto.bragi.RushCricketPlayerCurrentMapState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketPlayerCurrentMapState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketPlayerCurrentMapState}
 */
proto.bragi.RushCricketPlayerCurrentMapState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerUrn(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketPlayerCurrentMapState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketPlayerCurrentMapState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketPlayerCurrentMapState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketPlayerCurrentMapState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExtName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string player_urn = 1;
 * @return {string}
 */
proto.bragi.RushCricketPlayerCurrentMapState.prototype.getPlayerUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushCricketPlayerCurrentMapState} returns this
 */
proto.bragi.RushCricketPlayerCurrentMapState.prototype.setPlayerUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ext_name = 2;
 * @return {string}
 */
proto.bragi.RushCricketPlayerCurrentMapState.prototype.getExtName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushCricketPlayerCurrentMapState} returns this
 */
proto.bragi.RushCricketPlayerCurrentMapState.prototype.setExtName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketTeamCurrentMapStatisticsState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketTeamCurrentMapStatisticsState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.toObject = function(includeInstance, msg) {
  var f, obj = {
runs: jspb.Message.getFieldWithDefault(msg, 1, 0),
wickets: jspb.Message.getFieldWithDefault(msg, 2, 0),
boundariesFour: jspb.Message.getFieldWithDefault(msg, 3, 0),
boundariesSix: jspb.Message.getFieldWithDefault(msg, 4, 0),
wideBalls: jspb.Message.getFieldWithDefault(msg, 5, 0),
noBalls: jspb.Message.getFieldWithDefault(msg, 6, 0),
currentRunRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
requiredRunRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketTeamCurrentMapStatisticsState}
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketTeamCurrentMapStatisticsState;
  return proto.bragi.RushCricketTeamCurrentMapStatisticsState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketTeamCurrentMapStatisticsState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketTeamCurrentMapStatisticsState}
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRuns(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWickets(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoundariesFour(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoundariesSix(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWideBalls(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNoBalls(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCurrentRunRate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRequiredRunRate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketTeamCurrentMapStatisticsState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketTeamCurrentMapStatisticsState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRuns();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getWickets();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getBoundariesFour();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getBoundariesSix();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getWideBalls();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getNoBalls();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getCurrentRunRate();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getRequiredRunRate();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
};


/**
 * optional uint32 runs = 1;
 * @return {number}
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.prototype.getRuns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.prototype.setRuns = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 wickets = 2;
 * @return {number}
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.prototype.getWickets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.prototype.setWickets = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 boundaries_four = 3;
 * @return {number}
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.prototype.getBoundariesFour = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.prototype.setBoundariesFour = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 boundaries_six = 4;
 * @return {number}
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.prototype.getBoundariesSix = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.prototype.setBoundariesSix = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 wide_balls = 5;
 * @return {number}
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.prototype.getWideBalls = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.prototype.setWideBalls = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 no_balls = 6;
 * @return {number}
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.prototype.getNoBalls = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.prototype.setNoBalls = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional float current_run_rate = 7;
 * @return {number}
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.prototype.getCurrentRunRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.prototype.setCurrentRunRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float required_run_rate = 8;
 * @return {number}
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.prototype.getRequiredRunRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushCricketTeamCurrentMapStatisticsState.prototype.setRequiredRunRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketBallState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketBallState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketBallState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketBallState.toObject = function(includeInstance, msg) {
  var f, obj = {
inning: jspb.Message.getFieldWithDefault(msg, 1, 0),
over: jspb.Message.getFieldWithDefault(msg, 2, 0),
ball: jspb.Message.getFieldWithDefault(msg, 3, 0),
isExtra: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
ballOrderWithinInning: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketBallState}
 */
proto.bragi.RushCricketBallState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketBallState;
  return proto.bragi.RushCricketBallState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketBallState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketBallState}
 */
proto.bragi.RushCricketBallState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInning(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOver(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBall(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsExtra(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBallOrderWithinInning(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketBallState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketBallState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketBallState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketBallState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInning();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getOver();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getBall();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getIsExtra();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getBallOrderWithinInning();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional uint32 inning = 1;
 * @return {number}
 */
proto.bragi.RushCricketBallState.prototype.getInning = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketBallState} returns this
 */
proto.bragi.RushCricketBallState.prototype.setInning = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 over = 2;
 * @return {number}
 */
proto.bragi.RushCricketBallState.prototype.getOver = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketBallState} returns this
 */
proto.bragi.RushCricketBallState.prototype.setOver = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 ball = 3;
 * @return {number}
 */
proto.bragi.RushCricketBallState.prototype.getBall = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketBallState} returns this
 */
proto.bragi.RushCricketBallState.prototype.setBall = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool is_extra = 4;
 * @return {boolean}
 */
proto.bragi.RushCricketBallState.prototype.getIsExtra = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bragi.RushCricketBallState} returns this
 */
proto.bragi.RushCricketBallState.prototype.setIsExtra = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 ball_order_within_inning = 5;
 * @return {number}
 */
proto.bragi.RushCricketBallState.prototype.getBallOrderWithinInning = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketBallState} returns this
 */
proto.bragi.RushCricketBallState.prototype.setBallOrderWithinInning = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketCurrentInningState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketCurrentInningState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketCurrentInningState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketCurrentInningState.toObject = function(includeInstance, msg) {
  var f, obj = {
number: jspb.Message.getFieldWithDefault(msg, 1, 0),
over: jspb.Message.getFieldWithDefault(msg, 2, 0),
ball: jspb.Message.getFieldWithDefault(msg, 3, 0),
battingTeamUrn: jspb.Message.getFieldWithDefault(msg, 4, ""),
runs: jspb.Message.getFieldWithDefault(msg, 5, 0),
oversPlayed: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
gamePaused: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
teamsMap: (f = msg.getTeamsMap()) ? f.toObject(includeInstance, proto.bragi.RushCricketTeamCurrentInningState.toObject) : [],
target: (f = msg.getTarget()) && proto.bragi.RushCricketTarget.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketCurrentInningState}
 */
proto.bragi.RushCricketCurrentInningState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketCurrentInningState;
  return proto.bragi.RushCricketCurrentInningState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketCurrentInningState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketCurrentInningState}
 */
proto.bragi.RushCricketCurrentInningState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumber(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOver(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBall(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBattingTeamUrn(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRuns(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOversPlayed(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGamePaused(value);
      break;
    case 8:
      var value = msg.getTeamsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.bragi.RushCricketTeamCurrentInningState.deserializeBinaryFromReader, "", new proto.bragi.RushCricketTeamCurrentInningState());
         });
      break;
    case 9:
      var value = new proto.bragi.RushCricketTarget;
      reader.readMessage(value,proto.bragi.RushCricketTarget.deserializeBinaryFromReader);
      msg.setTarget(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketCurrentInningState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketCurrentInningState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketCurrentInningState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketCurrentInningState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumber();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getOver();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getBall();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getBattingTeamUrn();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRuns();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getOversPlayed();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getGamePaused();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getTeamsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.bragi.RushCricketTeamCurrentInningState.serializeBinaryToWriter);
  }
  f = message.getTarget();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.bragi.RushCricketTarget.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 number = 1;
 * @return {number}
 */
proto.bragi.RushCricketCurrentInningState.prototype.getNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketCurrentInningState} returns this
 */
proto.bragi.RushCricketCurrentInningState.prototype.setNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 over = 2;
 * @return {number}
 */
proto.bragi.RushCricketCurrentInningState.prototype.getOver = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketCurrentInningState} returns this
 */
proto.bragi.RushCricketCurrentInningState.prototype.setOver = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 ball = 3;
 * @return {number}
 */
proto.bragi.RushCricketCurrentInningState.prototype.getBall = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketCurrentInningState} returns this
 */
proto.bragi.RushCricketCurrentInningState.prototype.setBall = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string batting_team_urn = 4;
 * @return {string}
 */
proto.bragi.RushCricketCurrentInningState.prototype.getBattingTeamUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushCricketCurrentInningState} returns this
 */
proto.bragi.RushCricketCurrentInningState.prototype.setBattingTeamUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint32 runs = 5;
 * @return {number}
 */
proto.bragi.RushCricketCurrentInningState.prototype.getRuns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketCurrentInningState} returns this
 */
proto.bragi.RushCricketCurrentInningState.prototype.setRuns = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional float overs_played = 6;
 * @return {number}
 */
proto.bragi.RushCricketCurrentInningState.prototype.getOversPlayed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketCurrentInningState} returns this
 */
proto.bragi.RushCricketCurrentInningState.prototype.setOversPlayed = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional bool game_paused = 7;
 * @return {boolean}
 */
proto.bragi.RushCricketCurrentInningState.prototype.getGamePaused = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bragi.RushCricketCurrentInningState} returns this
 */
proto.bragi.RushCricketCurrentInningState.prototype.setGamePaused = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * map<string, RushCricketTeamCurrentInningState> teams = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.bragi.RushCricketTeamCurrentInningState>}
 */
proto.bragi.RushCricketCurrentInningState.prototype.getTeamsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.bragi.RushCricketTeamCurrentInningState>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      proto.bragi.RushCricketTeamCurrentInningState));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.bragi.RushCricketCurrentInningState} returns this
 */
proto.bragi.RushCricketCurrentInningState.prototype.clearTeamsMap = function() {
  this.getTeamsMap().clear();
  return this;
};


/**
 * optional RushCricketTarget target = 9;
 * @return {?proto.bragi.RushCricketTarget}
 */
proto.bragi.RushCricketCurrentInningState.prototype.getTarget = function() {
  return /** @type{?proto.bragi.RushCricketTarget} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketTarget, 9));
};


/**
 * @param {?proto.bragi.RushCricketTarget|undefined} value
 * @return {!proto.bragi.RushCricketCurrentInningState} returns this
*/
proto.bragi.RushCricketCurrentInningState.prototype.setTarget = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketCurrentInningState} returns this
 */
proto.bragi.RushCricketCurrentInningState.prototype.clearTarget = function() {
  return this.setTarget(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketCurrentInningState.prototype.hasTarget = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketTarget.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketTarget.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketTarget} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketTarget.toObject = function(includeInstance, msg) {
  var f, obj = {
teamUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
runs: jspb.Message.getFieldWithDefault(msg, 2, 0),
overs: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketTarget}
 */
proto.bragi.RushCricketTarget.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketTarget;
  return proto.bragi.RushCricketTarget.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketTarget} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketTarget}
 */
proto.bragi.RushCricketTarget.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamUrn(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRuns(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOvers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketTarget.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketTarget.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketTarget} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketTarget.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRuns();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getOvers();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * optional string team_urn = 1;
 * @return {string}
 */
proto.bragi.RushCricketTarget.prototype.getTeamUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushCricketTarget} returns this
 */
proto.bragi.RushCricketTarget.prototype.setTeamUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 runs = 2;
 * @return {number}
 */
proto.bragi.RushCricketTarget.prototype.getRuns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketTarget} returns this
 */
proto.bragi.RushCricketTarget.prototype.setRuns = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional float overs = 3;
 * @return {number}
 */
proto.bragi.RushCricketTarget.prototype.getOvers = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketTarget} returns this
 */
proto.bragi.RushCricketTarget.prototype.setOvers = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushCricketTeamCurrentInningState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushCricketTeamCurrentInningState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushCricketTeamCurrentInningState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketTeamCurrentInningState.toObject = function(includeInstance, msg) {
  var f, obj = {
runs: jspb.Message.getFieldWithDefault(msg, 1, 0),
wickets: jspb.Message.getFieldWithDefault(msg, 2, 0),
boundariesFour: jspb.Message.getFieldWithDefault(msg, 3, 0),
boundariesSix: jspb.Message.getFieldWithDefault(msg, 4, 0),
wideBalls: jspb.Message.getFieldWithDefault(msg, 5, 0),
noBalls: jspb.Message.getFieldWithDefault(msg, 6, 0),
oversPlayed: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
player: (f = msg.getPlayer()) && proto.bragi.RushCricketPlayerCurrentMapState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushCricketTeamCurrentInningState}
 */
proto.bragi.RushCricketTeamCurrentInningState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushCricketTeamCurrentInningState;
  return proto.bragi.RushCricketTeamCurrentInningState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushCricketTeamCurrentInningState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushCricketTeamCurrentInningState}
 */
proto.bragi.RushCricketTeamCurrentInningState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRuns(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWickets(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoundariesFour(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoundariesSix(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWideBalls(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNoBalls(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOversPlayed(value);
      break;
    case 8:
      var value = new proto.bragi.RushCricketPlayerCurrentMapState;
      reader.readMessage(value,proto.bragi.RushCricketPlayerCurrentMapState.deserializeBinaryFromReader);
      msg.setPlayer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushCricketTeamCurrentInningState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushCricketTeamCurrentInningState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushCricketTeamCurrentInningState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushCricketTeamCurrentInningState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRuns();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getWickets();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getBoundariesFour();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getBoundariesSix();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getWideBalls();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getNoBalls();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getOversPlayed();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getPlayer();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.bragi.RushCricketPlayerCurrentMapState.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 runs = 1;
 * @return {number}
 */
proto.bragi.RushCricketTeamCurrentInningState.prototype.getRuns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketTeamCurrentInningState} returns this
 */
proto.bragi.RushCricketTeamCurrentInningState.prototype.setRuns = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 wickets = 2;
 * @return {number}
 */
proto.bragi.RushCricketTeamCurrentInningState.prototype.getWickets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketTeamCurrentInningState} returns this
 */
proto.bragi.RushCricketTeamCurrentInningState.prototype.setWickets = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 boundaries_four = 3;
 * @return {number}
 */
proto.bragi.RushCricketTeamCurrentInningState.prototype.getBoundariesFour = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketTeamCurrentInningState} returns this
 */
proto.bragi.RushCricketTeamCurrentInningState.prototype.setBoundariesFour = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 boundaries_six = 4;
 * @return {number}
 */
proto.bragi.RushCricketTeamCurrentInningState.prototype.getBoundariesSix = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketTeamCurrentInningState} returns this
 */
proto.bragi.RushCricketTeamCurrentInningState.prototype.setBoundariesSix = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 wide_balls = 5;
 * @return {number}
 */
proto.bragi.RushCricketTeamCurrentInningState.prototype.getWideBalls = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketTeamCurrentInningState} returns this
 */
proto.bragi.RushCricketTeamCurrentInningState.prototype.setWideBalls = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 no_balls = 6;
 * @return {number}
 */
proto.bragi.RushCricketTeamCurrentInningState.prototype.getNoBalls = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketTeamCurrentInningState} returns this
 */
proto.bragi.RushCricketTeamCurrentInningState.prototype.setNoBalls = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional float overs_played = 7;
 * @return {number}
 */
proto.bragi.RushCricketTeamCurrentInningState.prototype.getOversPlayed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushCricketTeamCurrentInningState} returns this
 */
proto.bragi.RushCricketTeamCurrentInningState.prototype.setOversPlayed = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional RushCricketPlayerCurrentMapState player = 8;
 * @return {?proto.bragi.RushCricketPlayerCurrentMapState}
 */
proto.bragi.RushCricketTeamCurrentInningState.prototype.getPlayer = function() {
  return /** @type{?proto.bragi.RushCricketPlayerCurrentMapState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushCricketPlayerCurrentMapState, 8));
};


/**
 * @param {?proto.bragi.RushCricketPlayerCurrentMapState|undefined} value
 * @return {!proto.bragi.RushCricketTeamCurrentInningState} returns this
*/
proto.bragi.RushCricketTeamCurrentInningState.prototype.setPlayer = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushCricketTeamCurrentInningState} returns this
 */
proto.bragi.RushCricketTeamCurrentInningState.prototype.clearPlayer = function() {
  return this.setPlayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushCricketTeamCurrentInningState.prototype.hasPlayer = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * @enum {number}
 */
proto.bragi.RushCricketEventType = {
  RUSH_CRICKET_EVENT_TYPE_UNSPECIFIED: 0,
  RUSH_CRICKET_EVENT_TYPE_BOUNDARY_FOUR: 1,
  RUSH_CRICKET_EVENT_TYPE_BOUNDARY_SIX: 2,
  RUSH_CRICKET_EVENT_TYPE_WIDE_BALL: 3,
  RUSH_CRICKET_EVENT_TYPE_NO_BALL: 4,
  RUSH_CRICKET_EVENT_TYPE_WICKET: 5,
  RUSH_CRICKET_EVENT_TYPE_PERIOD_CHANGE: 6
};

/**
 * @enum {number}
 */
proto.bragi.RushCricketPeriod = {
  RUSH_CRICKET_PERIOD_UNSPECIFIED: 0,
  RUSH_CRICKET_PERIOD_FIRST: 1,
  RUSH_CRICKET_PERIOD_SECOND: 2
};

/**
 * @enum {number}
 */
proto.bragi.RushCricketBoundaryRun = {
  RUSH_CRICKET_BOUNDARY_RUN_UNSPECIFIED: 0,
  RUSH_CRICKET_BOUNDARY_RUN_FOUR: 1,
  RUSH_CRICKET_BOUNDARY_RUN_SIX: 2
};

/**
 * @enum {number}
 */
proto.bragi.RushCricketBowlerError = {
  RUSH_CRICKET_BOWLER_ERROR_UNSPECIFIED: 0,
  RUSH_CRICKET_BOWLER_ERROR_NO_BALL: 1,
  RUSH_CRICKET_BOWLER_ERROR_WIDE: 2
};

goog.object.extend(exports, proto.bragi);
