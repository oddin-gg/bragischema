// source: bragi/rush_soccer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var bragi_common_pb = require('../bragi/common_pb.js');
goog.object.extend(proto, bragi_common_pb);
goog.exportSymbol('proto.bragi.RushSoccerCurrentMapScoreState', null, global);
goog.exportSymbol('proto.bragi.RushSoccerCurrentMapState', null, global);
goog.exportSymbol('proto.bragi.RushSoccerCurrentMapStatePartialUpdate', null, global);
goog.exportSymbol('proto.bragi.RushSoccerCurrentMapStatePartialUpdate.UpdateCase', null, global);
goog.exportSymbol('proto.bragi.RushSoccerCurrentMapTimeState', null, global);
goog.exportSymbol('proto.bragi.RushSoccerEventType', null, global);
goog.exportSymbol('proto.bragi.RushSoccerMatchMessage', null, global);
goog.exportSymbol('proto.bragi.RushSoccerMatchMessage.Payload', null, global);
goog.exportSymbol('proto.bragi.RushSoccerMatchMessage.Payload.PayloadCase', null, global);
goog.exportSymbol('proto.bragi.RushSoccerMatchScoreState', null, global);
goog.exportSymbol('proto.bragi.RushSoccerMatchSnapshot', null, global);
goog.exportSymbol('proto.bragi.RushSoccerMatchState', null, global);
goog.exportSymbol('proto.bragi.RushSoccerMatchStatePartialUpdate', null, global);
goog.exportSymbol('proto.bragi.RushSoccerMatchStatePartialUpdate.UpdateCase', null, global);
goog.exportSymbol('proto.bragi.RushSoccerMatchStatePartialUpdates', null, global);
goog.exportSymbol('proto.bragi.RushSoccerMatchUpdate', null, global);
goog.exportSymbol('proto.bragi.RushSoccerMatchUpdate.Payload', null, global);
goog.exportSymbol('proto.bragi.RushSoccerMatchUpdate.Payload.PayloadCase', null, global);
goog.exportSymbol('proto.bragi.RushSoccerPeriod', null, global);
goog.exportSymbol('proto.bragi.RushSoccerPlayerCurrentMapState', null, global);
goog.exportSymbol('proto.bragi.RushSoccerTeamCurrentMapState', null, global);
goog.exportSymbol('proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate', null, global);
goog.exportSymbol('proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload', null, global);
goog.exportSymbol('proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.PayloadCase', null, global);
goog.exportSymbol('proto.bragi.RushSoccerTeamCurrentMapStatisticsState', null, global);
goog.exportSymbol('proto.bragi.RushSoccerTimelineEvent', null, global);
goog.exportSymbol('proto.bragi.RushSoccerTimelineState', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerMatchMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushSoccerMatchMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerMatchMessage.displayName = 'proto.bragi.RushSoccerMatchMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerMatchMessage.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.RushSoccerMatchMessage.Payload.oneofGroups_);
};
goog.inherits(proto.bragi.RushSoccerMatchMessage.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerMatchMessage.Payload.displayName = 'proto.bragi.RushSoccerMatchMessage.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerMatchSnapshot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bragi.RushSoccerMatchSnapshot.repeatedFields_, null);
};
goog.inherits(proto.bragi.RushSoccerMatchSnapshot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerMatchSnapshot.displayName = 'proto.bragi.RushSoccerMatchSnapshot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerMatchUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushSoccerMatchUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerMatchUpdate.displayName = 'proto.bragi.RushSoccerMatchUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerMatchUpdate.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.RushSoccerMatchUpdate.Payload.oneofGroups_);
};
goog.inherits(proto.bragi.RushSoccerMatchUpdate.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerMatchUpdate.Payload.displayName = 'proto.bragi.RushSoccerMatchUpdate.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerMatchStatePartialUpdates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bragi.RushSoccerMatchStatePartialUpdates.repeatedFields_, null);
};
goog.inherits(proto.bragi.RushSoccerMatchStatePartialUpdates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerMatchStatePartialUpdates.displayName = 'proto.bragi.RushSoccerMatchStatePartialUpdates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerMatchStatePartialUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.RushSoccerMatchStatePartialUpdate.oneofGroups_);
};
goog.inherits(proto.bragi.RushSoccerMatchStatePartialUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerMatchStatePartialUpdate.displayName = 'proto.bragi.RushSoccerMatchStatePartialUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerMatchState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushSoccerMatchState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerMatchState.displayName = 'proto.bragi.RushSoccerMatchState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerMatchScoreState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushSoccerMatchScoreState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerMatchScoreState.displayName = 'proto.bragi.RushSoccerMatchScoreState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerCurrentMapScoreState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushSoccerCurrentMapScoreState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerCurrentMapScoreState.displayName = 'proto.bragi.RushSoccerCurrentMapScoreState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerTimelineState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bragi.RushSoccerTimelineState.repeatedFields_, null);
};
goog.inherits(proto.bragi.RushSoccerTimelineState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerTimelineState.displayName = 'proto.bragi.RushSoccerTimelineState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerTimelineEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushSoccerTimelineEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerTimelineEvent.displayName = 'proto.bragi.RushSoccerTimelineEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.RushSoccerCurrentMapStatePartialUpdate.oneofGroups_);
};
goog.inherits(proto.bragi.RushSoccerCurrentMapStatePartialUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerCurrentMapStatePartialUpdate.displayName = 'proto.bragi.RushSoccerCurrentMapStatePartialUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerCurrentMapState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushSoccerCurrentMapState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerCurrentMapState.displayName = 'proto.bragi.RushSoccerCurrentMapState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerCurrentMapTimeState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushSoccerCurrentMapTimeState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerCurrentMapTimeState.displayName = 'proto.bragi.RushSoccerCurrentMapTimeState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.displayName = 'proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.oneofGroups_);
};
goog.inherits(proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.displayName = 'proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerTeamCurrentMapState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushSoccerTeamCurrentMapState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerTeamCurrentMapState.displayName = 'proto.bragi.RushSoccerTeamCurrentMapState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerPlayerCurrentMapState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushSoccerPlayerCurrentMapState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerPlayerCurrentMapState.displayName = 'proto.bragi.RushSoccerPlayerCurrentMapState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bragi.RushSoccerTeamCurrentMapStatisticsState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bragi.RushSoccerTeamCurrentMapStatisticsState.displayName = 'proto.bragi.RushSoccerTeamCurrentMapStatisticsState';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerMatchMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerMatchMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerMatchMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerMatchMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    dataStatus: jspb.Message.getFieldWithDefault(msg, 4, 0),
    payload: (f = msg.getPayload()) && proto.bragi.RushSoccerMatchMessage.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerMatchMessage}
 */
proto.bragi.RushSoccerMatchMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerMatchMessage;
  return proto.bragi.RushSoccerMatchMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerMatchMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerMatchMessage}
 */
proto.bragi.RushSoccerMatchMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatchUrn(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 4:
      var value = /** @type {!proto.bragi.DataStatus} */ (reader.readEnum());
      msg.setDataStatus(value);
      break;
    case 5:
      var value = new proto.bragi.RushSoccerMatchMessage.Payload;
      reader.readMessage(value,proto.bragi.RushSoccerMatchMessage.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerMatchMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerMatchMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerMatchMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerMatchMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDataStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bragi.RushSoccerMatchMessage.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.RushSoccerMatchMessage.Payload.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.bragi.RushSoccerMatchMessage.Payload.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  SNAPSHOT: 1,
  UPDATE: 2
};

/**
 * @return {proto.bragi.RushSoccerMatchMessage.Payload.PayloadCase}
 */
proto.bragi.RushSoccerMatchMessage.Payload.prototype.getPayloadCase = function() {
  return /** @type {proto.bragi.RushSoccerMatchMessage.Payload.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.bragi.RushSoccerMatchMessage.Payload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerMatchMessage.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerMatchMessage.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerMatchMessage.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerMatchMessage.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    snapshot: (f = msg.getSnapshot()) && proto.bragi.RushSoccerMatchSnapshot.toObject(includeInstance, f),
    update: (f = msg.getUpdate()) && proto.bragi.RushSoccerMatchUpdate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerMatchMessage.Payload}
 */
proto.bragi.RushSoccerMatchMessage.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerMatchMessage.Payload;
  return proto.bragi.RushSoccerMatchMessage.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerMatchMessage.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerMatchMessage.Payload}
 */
proto.bragi.RushSoccerMatchMessage.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushSoccerMatchSnapshot;
      reader.readMessage(value,proto.bragi.RushSoccerMatchSnapshot.deserializeBinaryFromReader);
      msg.setSnapshot(value);
      break;
    case 2:
      var value = new proto.bragi.RushSoccerMatchUpdate;
      reader.readMessage(value,proto.bragi.RushSoccerMatchUpdate.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerMatchMessage.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerMatchMessage.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerMatchMessage.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerMatchMessage.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSnapshot();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.RushSoccerMatchSnapshot.serializeBinaryToWriter
    );
  }
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushSoccerMatchUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * optional RushSoccerMatchSnapshot snapshot = 1;
 * @return {?proto.bragi.RushSoccerMatchSnapshot}
 */
proto.bragi.RushSoccerMatchMessage.Payload.prototype.getSnapshot = function() {
  return /** @type{?proto.bragi.RushSoccerMatchSnapshot} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerMatchSnapshot, 1));
};


/**
 * @param {?proto.bragi.RushSoccerMatchSnapshot|undefined} value
 * @return {!proto.bragi.RushSoccerMatchMessage.Payload} returns this
*/
proto.bragi.RushSoccerMatchMessage.Payload.prototype.setSnapshot = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.RushSoccerMatchMessage.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerMatchMessage.Payload} returns this
 */
proto.bragi.RushSoccerMatchMessage.Payload.prototype.clearSnapshot = function() {
  return this.setSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerMatchMessage.Payload.prototype.hasSnapshot = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RushSoccerMatchUpdate update = 2;
 * @return {?proto.bragi.RushSoccerMatchUpdate}
 */
proto.bragi.RushSoccerMatchMessage.Payload.prototype.getUpdate = function() {
  return /** @type{?proto.bragi.RushSoccerMatchUpdate} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerMatchUpdate, 2));
};


/**
 * @param {?proto.bragi.RushSoccerMatchUpdate|undefined} value
 * @return {!proto.bragi.RushSoccerMatchMessage.Payload} returns this
*/
proto.bragi.RushSoccerMatchMessage.Payload.prototype.setUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.RushSoccerMatchMessage.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerMatchMessage.Payload} returns this
 */
proto.bragi.RushSoccerMatchMessage.Payload.prototype.clearUpdate = function() {
  return this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerMatchMessage.Payload.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string match_urn = 1;
 * @return {string}
 */
proto.bragi.RushSoccerMatchMessage.prototype.getMatchUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushSoccerMatchMessage} returns this
 */
proto.bragi.RushSoccerMatchMessage.prototype.setMatchUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 sequence = 2;
 * @return {number}
 */
proto.bragi.RushSoccerMatchMessage.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushSoccerMatchMessage} returns this
 */
proto.bragi.RushSoccerMatchMessage.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.bragi.RushSoccerMatchMessage.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.bragi.RushSoccerMatchMessage} returns this
*/
proto.bragi.RushSoccerMatchMessage.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerMatchMessage} returns this
 */
proto.bragi.RushSoccerMatchMessage.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerMatchMessage.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DataStatus data_status = 4;
 * @return {!proto.bragi.DataStatus}
 */
proto.bragi.RushSoccerMatchMessage.prototype.getDataStatus = function() {
  return /** @type {!proto.bragi.DataStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.bragi.DataStatus} value
 * @return {!proto.bragi.RushSoccerMatchMessage} returns this
 */
proto.bragi.RushSoccerMatchMessage.prototype.setDataStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Payload payload = 5;
 * @return {?proto.bragi.RushSoccerMatchMessage.Payload}
 */
proto.bragi.RushSoccerMatchMessage.prototype.getPayload = function() {
  return /** @type{?proto.bragi.RushSoccerMatchMessage.Payload} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerMatchMessage.Payload, 5));
};


/**
 * @param {?proto.bragi.RushSoccerMatchMessage.Payload|undefined} value
 * @return {!proto.bragi.RushSoccerMatchMessage} returns this
*/
proto.bragi.RushSoccerMatchMessage.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerMatchMessage} returns this
 */
proto.bragi.RushSoccerMatchMessage.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerMatchMessage.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bragi.RushSoccerMatchSnapshot.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerMatchSnapshot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerMatchSnapshot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerMatchSnapshot.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    dataStatus: jspb.Message.getFieldWithDefault(msg, 4, 0),
    announcementsList: jspb.Message.toObjectList(msg.getAnnouncementsList(),
    bragi_common_pb.Announcement.toObject, includeInstance),
    matchState: (f = msg.getMatchState()) && proto.bragi.RushSoccerMatchState.toObject(includeInstance, f),
    tournament: (f = msg.getTournament()) && bragi_common_pb.Tournament.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerMatchSnapshot}
 */
proto.bragi.RushSoccerMatchSnapshot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerMatchSnapshot;
  return proto.bragi.RushSoccerMatchSnapshot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerMatchSnapshot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerMatchSnapshot}
 */
proto.bragi.RushSoccerMatchSnapshot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatchUrn(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 4:
      var value = /** @type {!proto.bragi.DataStatus} */ (reader.readEnum());
      msg.setDataStatus(value);
      break;
    case 5:
      var value = new bragi_common_pb.Announcement;
      reader.readMessage(value,bragi_common_pb.Announcement.deserializeBinaryFromReader);
      msg.addAnnouncements(value);
      break;
    case 6:
      var value = new proto.bragi.RushSoccerMatchState;
      reader.readMessage(value,proto.bragi.RushSoccerMatchState.deserializeBinaryFromReader);
      msg.setMatchState(value);
      break;
    case 7:
      var value = new bragi_common_pb.Tournament;
      reader.readMessage(value,bragi_common_pb.Tournament.deserializeBinaryFromReader);
      msg.setTournament(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerMatchSnapshot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerMatchSnapshot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerMatchSnapshot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDataStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAnnouncementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      bragi_common_pb.Announcement.serializeBinaryToWriter
    );
  }
  f = message.getMatchState();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.bragi.RushSoccerMatchState.serializeBinaryToWriter
    );
  }
  f = message.getTournament();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      bragi_common_pb.Tournament.serializeBinaryToWriter
    );
  }
};


/**
 * optional string match_urn = 1;
 * @return {string}
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.getMatchUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushSoccerMatchSnapshot} returns this
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.setMatchUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 sequence = 2;
 * @return {number}
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushSoccerMatchSnapshot} returns this
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.bragi.RushSoccerMatchSnapshot} returns this
*/
proto.bragi.RushSoccerMatchSnapshot.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerMatchSnapshot} returns this
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DataStatus data_status = 4;
 * @return {!proto.bragi.DataStatus}
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.getDataStatus = function() {
  return /** @type {!proto.bragi.DataStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.bragi.DataStatus} value
 * @return {!proto.bragi.RushSoccerMatchSnapshot} returns this
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.setDataStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * repeated Announcement announcements = 5;
 * @return {!Array<!proto.bragi.Announcement>}
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.getAnnouncementsList = function() {
  return /** @type{!Array<!proto.bragi.Announcement>} */ (
    jspb.Message.getRepeatedWrapperField(this, bragi_common_pb.Announcement, 5));
};


/**
 * @param {!Array<!proto.bragi.Announcement>} value
 * @return {!proto.bragi.RushSoccerMatchSnapshot} returns this
*/
proto.bragi.RushSoccerMatchSnapshot.prototype.setAnnouncementsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.bragi.Announcement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bragi.Announcement}
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.addAnnouncements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.bragi.Announcement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bragi.RushSoccerMatchSnapshot} returns this
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.clearAnnouncementsList = function() {
  return this.setAnnouncementsList([]);
};


/**
 * optional RushSoccerMatchState match_state = 6;
 * @return {?proto.bragi.RushSoccerMatchState}
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.getMatchState = function() {
  return /** @type{?proto.bragi.RushSoccerMatchState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerMatchState, 6));
};


/**
 * @param {?proto.bragi.RushSoccerMatchState|undefined} value
 * @return {!proto.bragi.RushSoccerMatchSnapshot} returns this
*/
proto.bragi.RushSoccerMatchSnapshot.prototype.setMatchState = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerMatchSnapshot} returns this
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.clearMatchState = function() {
  return this.setMatchState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.hasMatchState = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Tournament tournament = 7;
 * @return {?proto.bragi.Tournament}
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.getTournament = function() {
  return /** @type{?proto.bragi.Tournament} */ (
    jspb.Message.getWrapperField(this, bragi_common_pb.Tournament, 7));
};


/**
 * @param {?proto.bragi.Tournament|undefined} value
 * @return {!proto.bragi.RushSoccerMatchSnapshot} returns this
*/
proto.bragi.RushSoccerMatchSnapshot.prototype.setTournament = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerMatchSnapshot} returns this
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.clearTournament = function() {
  return this.setTournament(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerMatchSnapshot.prototype.hasTournament = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerMatchUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerMatchUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerMatchUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerMatchUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && proto.bragi.RushSoccerMatchUpdate.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerMatchUpdate}
 */
proto.bragi.RushSoccerMatchUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerMatchUpdate;
  return proto.bragi.RushSoccerMatchUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerMatchUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerMatchUpdate}
 */
proto.bragi.RushSoccerMatchUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushSoccerMatchUpdate.Payload;
      reader.readMessage(value,proto.bragi.RushSoccerMatchUpdate.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerMatchUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerMatchUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerMatchUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerMatchUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.RushSoccerMatchUpdate.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.RushSoccerMatchUpdate.Payload.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.bragi.RushSoccerMatchUpdate.Payload.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  MATCH_STATE: 1,
  PARTIAL_UPDATES: 2
};

/**
 * @return {proto.bragi.RushSoccerMatchUpdate.Payload.PayloadCase}
 */
proto.bragi.RushSoccerMatchUpdate.Payload.prototype.getPayloadCase = function() {
  return /** @type {proto.bragi.RushSoccerMatchUpdate.Payload.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.bragi.RushSoccerMatchUpdate.Payload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerMatchUpdate.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerMatchUpdate.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerMatchUpdate.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerMatchUpdate.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchState: (f = msg.getMatchState()) && proto.bragi.RushSoccerMatchState.toObject(includeInstance, f),
    partialUpdates: (f = msg.getPartialUpdates()) && proto.bragi.RushSoccerMatchStatePartialUpdates.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerMatchUpdate.Payload}
 */
proto.bragi.RushSoccerMatchUpdate.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerMatchUpdate.Payload;
  return proto.bragi.RushSoccerMatchUpdate.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerMatchUpdate.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerMatchUpdate.Payload}
 */
proto.bragi.RushSoccerMatchUpdate.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushSoccerMatchState;
      reader.readMessage(value,proto.bragi.RushSoccerMatchState.deserializeBinaryFromReader);
      msg.setMatchState(value);
      break;
    case 2:
      var value = new proto.bragi.RushSoccerMatchStatePartialUpdates;
      reader.readMessage(value,proto.bragi.RushSoccerMatchStatePartialUpdates.deserializeBinaryFromReader);
      msg.setPartialUpdates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerMatchUpdate.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerMatchUpdate.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerMatchUpdate.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerMatchUpdate.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.RushSoccerMatchState.serializeBinaryToWriter
    );
  }
  f = message.getPartialUpdates();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushSoccerMatchStatePartialUpdates.serializeBinaryToWriter
    );
  }
};


/**
 * optional RushSoccerMatchState match_state = 1;
 * @return {?proto.bragi.RushSoccerMatchState}
 */
proto.bragi.RushSoccerMatchUpdate.Payload.prototype.getMatchState = function() {
  return /** @type{?proto.bragi.RushSoccerMatchState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerMatchState, 1));
};


/**
 * @param {?proto.bragi.RushSoccerMatchState|undefined} value
 * @return {!proto.bragi.RushSoccerMatchUpdate.Payload} returns this
*/
proto.bragi.RushSoccerMatchUpdate.Payload.prototype.setMatchState = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.RushSoccerMatchUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerMatchUpdate.Payload} returns this
 */
proto.bragi.RushSoccerMatchUpdate.Payload.prototype.clearMatchState = function() {
  return this.setMatchState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerMatchUpdate.Payload.prototype.hasMatchState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RushSoccerMatchStatePartialUpdates partial_updates = 2;
 * @return {?proto.bragi.RushSoccerMatchStatePartialUpdates}
 */
proto.bragi.RushSoccerMatchUpdate.Payload.prototype.getPartialUpdates = function() {
  return /** @type{?proto.bragi.RushSoccerMatchStatePartialUpdates} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerMatchStatePartialUpdates, 2));
};


/**
 * @param {?proto.bragi.RushSoccerMatchStatePartialUpdates|undefined} value
 * @return {!proto.bragi.RushSoccerMatchUpdate.Payload} returns this
*/
proto.bragi.RushSoccerMatchUpdate.Payload.prototype.setPartialUpdates = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.RushSoccerMatchUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerMatchUpdate.Payload} returns this
 */
proto.bragi.RushSoccerMatchUpdate.Payload.prototype.clearPartialUpdates = function() {
  return this.setPartialUpdates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerMatchUpdate.Payload.prototype.hasPartialUpdates = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Payload payload = 1;
 * @return {?proto.bragi.RushSoccerMatchUpdate.Payload}
 */
proto.bragi.RushSoccerMatchUpdate.prototype.getPayload = function() {
  return /** @type{?proto.bragi.RushSoccerMatchUpdate.Payload} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerMatchUpdate.Payload, 1));
};


/**
 * @param {?proto.bragi.RushSoccerMatchUpdate.Payload|undefined} value
 * @return {!proto.bragi.RushSoccerMatchUpdate} returns this
*/
proto.bragi.RushSoccerMatchUpdate.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerMatchUpdate} returns this
 */
proto.bragi.RushSoccerMatchUpdate.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerMatchUpdate.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bragi.RushSoccerMatchStatePartialUpdates.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerMatchStatePartialUpdates.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerMatchStatePartialUpdates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerMatchStatePartialUpdates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerMatchStatePartialUpdates.toObject = function(includeInstance, msg) {
  var f, obj = {
    updatesList: jspb.Message.toObjectList(msg.getUpdatesList(),
    proto.bragi.RushSoccerMatchStatePartialUpdate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerMatchStatePartialUpdates}
 */
proto.bragi.RushSoccerMatchStatePartialUpdates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerMatchStatePartialUpdates;
  return proto.bragi.RushSoccerMatchStatePartialUpdates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerMatchStatePartialUpdates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerMatchStatePartialUpdates}
 */
proto.bragi.RushSoccerMatchStatePartialUpdates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushSoccerMatchStatePartialUpdate;
      reader.readMessage(value,proto.bragi.RushSoccerMatchStatePartialUpdate.deserializeBinaryFromReader);
      msg.addUpdates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerMatchStatePartialUpdates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerMatchStatePartialUpdates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerMatchStatePartialUpdates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerMatchStatePartialUpdates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bragi.RushSoccerMatchStatePartialUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RushSoccerMatchStatePartialUpdate updates = 1;
 * @return {!Array<!proto.bragi.RushSoccerMatchStatePartialUpdate>}
 */
proto.bragi.RushSoccerMatchStatePartialUpdates.prototype.getUpdatesList = function() {
  return /** @type{!Array<!proto.bragi.RushSoccerMatchStatePartialUpdate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bragi.RushSoccerMatchStatePartialUpdate, 1));
};


/**
 * @param {!Array<!proto.bragi.RushSoccerMatchStatePartialUpdate>} value
 * @return {!proto.bragi.RushSoccerMatchStatePartialUpdates} returns this
*/
proto.bragi.RushSoccerMatchStatePartialUpdates.prototype.setUpdatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bragi.RushSoccerMatchStatePartialUpdate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bragi.RushSoccerMatchStatePartialUpdate}
 */
proto.bragi.RushSoccerMatchStatePartialUpdates.prototype.addUpdates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bragi.RushSoccerMatchStatePartialUpdate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bragi.RushSoccerMatchStatePartialUpdates} returns this
 */
proto.bragi.RushSoccerMatchStatePartialUpdates.prototype.clearUpdatesList = function() {
  return this.setUpdatesList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.UpdateCase = {
  UPDATE_NOT_SET: 0,
  SCORE: 1,
  CURRENT_MAP_STATE: 2,
  CURRENT_MAP_STATE_PARTIAL_UPDATE: 3,
  TIMELINE: 4
};

/**
 * @return {proto.bragi.RushSoccerMatchStatePartialUpdate.UpdateCase}
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.prototype.getUpdateCase = function() {
  return /** @type {proto.bragi.RushSoccerMatchStatePartialUpdate.UpdateCase} */(jspb.Message.computeOneofCase(this, proto.bragi.RushSoccerMatchStatePartialUpdate.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerMatchStatePartialUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerMatchStatePartialUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    score: (f = msg.getScore()) && proto.bragi.RushSoccerMatchScoreState.toObject(includeInstance, f),
    currentMapState: (f = msg.getCurrentMapState()) && proto.bragi.RushSoccerCurrentMapState.toObject(includeInstance, f),
    currentMapStatePartialUpdate: (f = msg.getCurrentMapStatePartialUpdate()) && proto.bragi.RushSoccerCurrentMapStatePartialUpdate.toObject(includeInstance, f),
    timeline: (f = msg.getTimeline()) && proto.bragi.RushSoccerTimelineState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerMatchStatePartialUpdate}
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerMatchStatePartialUpdate;
  return proto.bragi.RushSoccerMatchStatePartialUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerMatchStatePartialUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerMatchStatePartialUpdate}
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushSoccerMatchScoreState;
      reader.readMessage(value,proto.bragi.RushSoccerMatchScoreState.deserializeBinaryFromReader);
      msg.setScore(value);
      break;
    case 2:
      var value = new proto.bragi.RushSoccerCurrentMapState;
      reader.readMessage(value,proto.bragi.RushSoccerCurrentMapState.deserializeBinaryFromReader);
      msg.setCurrentMapState(value);
      break;
    case 3:
      var value = new proto.bragi.RushSoccerCurrentMapStatePartialUpdate;
      reader.readMessage(value,proto.bragi.RushSoccerCurrentMapStatePartialUpdate.deserializeBinaryFromReader);
      msg.setCurrentMapStatePartialUpdate(value);
      break;
    case 4:
      var value = new proto.bragi.RushSoccerTimelineState;
      reader.readMessage(value,proto.bragi.RushSoccerTimelineState.deserializeBinaryFromReader);
      msg.setTimeline(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerMatchStatePartialUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerMatchStatePartialUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScore();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.RushSoccerMatchScoreState.serializeBinaryToWriter
    );
  }
  f = message.getCurrentMapState();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushSoccerCurrentMapState.serializeBinaryToWriter
    );
  }
  f = message.getCurrentMapStatePartialUpdate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.RushSoccerCurrentMapStatePartialUpdate.serializeBinaryToWriter
    );
  }
  f = message.getTimeline();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bragi.RushSoccerTimelineState.serializeBinaryToWriter
    );
  }
};


/**
 * optional RushSoccerMatchScoreState score = 1;
 * @return {?proto.bragi.RushSoccerMatchScoreState}
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.prototype.getScore = function() {
  return /** @type{?proto.bragi.RushSoccerMatchScoreState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerMatchScoreState, 1));
};


/**
 * @param {?proto.bragi.RushSoccerMatchScoreState|undefined} value
 * @return {!proto.bragi.RushSoccerMatchStatePartialUpdate} returns this
*/
proto.bragi.RushSoccerMatchStatePartialUpdate.prototype.setScore = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.RushSoccerMatchStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerMatchStatePartialUpdate} returns this
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.prototype.clearScore = function() {
  return this.setScore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.prototype.hasScore = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RushSoccerCurrentMapState current_map_state = 2;
 * @return {?proto.bragi.RushSoccerCurrentMapState}
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.prototype.getCurrentMapState = function() {
  return /** @type{?proto.bragi.RushSoccerCurrentMapState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerCurrentMapState, 2));
};


/**
 * @param {?proto.bragi.RushSoccerCurrentMapState|undefined} value
 * @return {!proto.bragi.RushSoccerMatchStatePartialUpdate} returns this
*/
proto.bragi.RushSoccerMatchStatePartialUpdate.prototype.setCurrentMapState = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.RushSoccerMatchStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerMatchStatePartialUpdate} returns this
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.prototype.clearCurrentMapState = function() {
  return this.setCurrentMapState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.prototype.hasCurrentMapState = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RushSoccerCurrentMapStatePartialUpdate current_map_state_partial_update = 3;
 * @return {?proto.bragi.RushSoccerCurrentMapStatePartialUpdate}
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.prototype.getCurrentMapStatePartialUpdate = function() {
  return /** @type{?proto.bragi.RushSoccerCurrentMapStatePartialUpdate} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerCurrentMapStatePartialUpdate, 3));
};


/**
 * @param {?proto.bragi.RushSoccerCurrentMapStatePartialUpdate|undefined} value
 * @return {!proto.bragi.RushSoccerMatchStatePartialUpdate} returns this
*/
proto.bragi.RushSoccerMatchStatePartialUpdate.prototype.setCurrentMapStatePartialUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.bragi.RushSoccerMatchStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerMatchStatePartialUpdate} returns this
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.prototype.clearCurrentMapStatePartialUpdate = function() {
  return this.setCurrentMapStatePartialUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.prototype.hasCurrentMapStatePartialUpdate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RushSoccerTimelineState timeline = 4;
 * @return {?proto.bragi.RushSoccerTimelineState}
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.prototype.getTimeline = function() {
  return /** @type{?proto.bragi.RushSoccerTimelineState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerTimelineState, 4));
};


/**
 * @param {?proto.bragi.RushSoccerTimelineState|undefined} value
 * @return {!proto.bragi.RushSoccerMatchStatePartialUpdate} returns this
*/
proto.bragi.RushSoccerMatchStatePartialUpdate.prototype.setTimeline = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.bragi.RushSoccerMatchStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerMatchStatePartialUpdate} returns this
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.prototype.clearTimeline = function() {
  return this.setTimeline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerMatchStatePartialUpdate.prototype.hasTimeline = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerMatchState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerMatchState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerMatchState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerMatchState.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    matchType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    homeTeam: (f = msg.getHomeTeam()) && bragi_common_pb.Team.toObject(includeInstance, f),
    awayTeam: (f = msg.getAwayTeam()) && bragi_common_pb.Team.toObject(includeInstance, f),
    score: (f = msg.getScore()) && proto.bragi.RushSoccerMatchScoreState.toObject(includeInstance, f),
    matchStatus: jspb.Message.getFieldWithDefault(msg, 6, 0),
    timeline: (f = msg.getTimeline()) && proto.bragi.RushSoccerTimelineState.toObject(includeInstance, f),
    currentMap: (f = msg.getCurrentMap()) && proto.bragi.RushSoccerCurrentMapState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerMatchState}
 */
proto.bragi.RushSoccerMatchState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerMatchState;
  return proto.bragi.RushSoccerMatchState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerMatchState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerMatchState}
 */
proto.bragi.RushSoccerMatchState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatchUrn(value);
      break;
    case 2:
      var value = /** @type {!proto.bragi.BestOfType} */ (reader.readEnum());
      msg.setMatchType(value);
      break;
    case 3:
      var value = new bragi_common_pb.Team;
      reader.readMessage(value,bragi_common_pb.Team.deserializeBinaryFromReader);
      msg.setHomeTeam(value);
      break;
    case 4:
      var value = new bragi_common_pb.Team;
      reader.readMessage(value,bragi_common_pb.Team.deserializeBinaryFromReader);
      msg.setAwayTeam(value);
      break;
    case 5:
      var value = new proto.bragi.RushSoccerMatchScoreState;
      reader.readMessage(value,proto.bragi.RushSoccerMatchScoreState.deserializeBinaryFromReader);
      msg.setScore(value);
      break;
    case 6:
      var value = /** @type {!proto.bragi.MatchStatusType} */ (reader.readEnum());
      msg.setMatchStatus(value);
      break;
    case 7:
      var value = new proto.bragi.RushSoccerTimelineState;
      reader.readMessage(value,proto.bragi.RushSoccerTimelineState.deserializeBinaryFromReader);
      msg.setTimeline(value);
      break;
    case 8:
      var value = new proto.bragi.RushSoccerCurrentMapState;
      reader.readMessage(value,proto.bragi.RushSoccerCurrentMapState.deserializeBinaryFromReader);
      msg.setCurrentMap(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerMatchState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerMatchState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerMatchState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerMatchState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMatchType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getHomeTeam();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      bragi_common_pb.Team.serializeBinaryToWriter
    );
  }
  f = message.getAwayTeam();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      bragi_common_pb.Team.serializeBinaryToWriter
    );
  }
  f = message.getScore();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bragi.RushSoccerMatchScoreState.serializeBinaryToWriter
    );
  }
  f = message.getMatchStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getTimeline();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.bragi.RushSoccerTimelineState.serializeBinaryToWriter
    );
  }
  f = message.getCurrentMap();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.bragi.RushSoccerCurrentMapState.serializeBinaryToWriter
    );
  }
};


/**
 * optional string match_urn = 1;
 * @return {string}
 */
proto.bragi.RushSoccerMatchState.prototype.getMatchUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushSoccerMatchState} returns this
 */
proto.bragi.RushSoccerMatchState.prototype.setMatchUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional BestOfType match_type = 2;
 * @return {!proto.bragi.BestOfType}
 */
proto.bragi.RushSoccerMatchState.prototype.getMatchType = function() {
  return /** @type {!proto.bragi.BestOfType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bragi.BestOfType} value
 * @return {!proto.bragi.RushSoccerMatchState} returns this
 */
proto.bragi.RushSoccerMatchState.prototype.setMatchType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Team home_team = 3;
 * @return {?proto.bragi.Team}
 */
proto.bragi.RushSoccerMatchState.prototype.getHomeTeam = function() {
  return /** @type{?proto.bragi.Team} */ (
    jspb.Message.getWrapperField(this, bragi_common_pb.Team, 3));
};


/**
 * @param {?proto.bragi.Team|undefined} value
 * @return {!proto.bragi.RushSoccerMatchState} returns this
*/
proto.bragi.RushSoccerMatchState.prototype.setHomeTeam = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerMatchState} returns this
 */
proto.bragi.RushSoccerMatchState.prototype.clearHomeTeam = function() {
  return this.setHomeTeam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerMatchState.prototype.hasHomeTeam = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Team away_team = 4;
 * @return {?proto.bragi.Team}
 */
proto.bragi.RushSoccerMatchState.prototype.getAwayTeam = function() {
  return /** @type{?proto.bragi.Team} */ (
    jspb.Message.getWrapperField(this, bragi_common_pb.Team, 4));
};


/**
 * @param {?proto.bragi.Team|undefined} value
 * @return {!proto.bragi.RushSoccerMatchState} returns this
*/
proto.bragi.RushSoccerMatchState.prototype.setAwayTeam = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerMatchState} returns this
 */
proto.bragi.RushSoccerMatchState.prototype.clearAwayTeam = function() {
  return this.setAwayTeam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerMatchState.prototype.hasAwayTeam = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RushSoccerMatchScoreState score = 5;
 * @return {?proto.bragi.RushSoccerMatchScoreState}
 */
proto.bragi.RushSoccerMatchState.prototype.getScore = function() {
  return /** @type{?proto.bragi.RushSoccerMatchScoreState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerMatchScoreState, 5));
};


/**
 * @param {?proto.bragi.RushSoccerMatchScoreState|undefined} value
 * @return {!proto.bragi.RushSoccerMatchState} returns this
*/
proto.bragi.RushSoccerMatchState.prototype.setScore = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerMatchState} returns this
 */
proto.bragi.RushSoccerMatchState.prototype.clearScore = function() {
  return this.setScore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerMatchState.prototype.hasScore = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional MatchStatusType match_status = 6;
 * @return {!proto.bragi.MatchStatusType}
 */
proto.bragi.RushSoccerMatchState.prototype.getMatchStatus = function() {
  return /** @type {!proto.bragi.MatchStatusType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.bragi.MatchStatusType} value
 * @return {!proto.bragi.RushSoccerMatchState} returns this
 */
proto.bragi.RushSoccerMatchState.prototype.setMatchStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional RushSoccerTimelineState timeline = 7;
 * @return {?proto.bragi.RushSoccerTimelineState}
 */
proto.bragi.RushSoccerMatchState.prototype.getTimeline = function() {
  return /** @type{?proto.bragi.RushSoccerTimelineState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerTimelineState, 7));
};


/**
 * @param {?proto.bragi.RushSoccerTimelineState|undefined} value
 * @return {!proto.bragi.RushSoccerMatchState} returns this
*/
proto.bragi.RushSoccerMatchState.prototype.setTimeline = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerMatchState} returns this
 */
proto.bragi.RushSoccerMatchState.prototype.clearTimeline = function() {
  return this.setTimeline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerMatchState.prototype.hasTimeline = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional RushSoccerCurrentMapState current_map = 8;
 * @return {?proto.bragi.RushSoccerCurrentMapState}
 */
proto.bragi.RushSoccerMatchState.prototype.getCurrentMap = function() {
  return /** @type{?proto.bragi.RushSoccerCurrentMapState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerCurrentMapState, 8));
};


/**
 * @param {?proto.bragi.RushSoccerCurrentMapState|undefined} value
 * @return {!proto.bragi.RushSoccerMatchState} returns this
*/
proto.bragi.RushSoccerMatchState.prototype.setCurrentMap = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerMatchState} returns this
 */
proto.bragi.RushSoccerMatchState.prototype.clearCurrentMap = function() {
  return this.setCurrentMap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerMatchState.prototype.hasCurrentMap = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerMatchScoreState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerMatchScoreState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerMatchScoreState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerMatchScoreState.toObject = function(includeInstance, msg) {
  var f, obj = {
    homeScore: jspb.Message.getFieldWithDefault(msg, 1, 0),
    awayScore: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerMatchScoreState}
 */
proto.bragi.RushSoccerMatchScoreState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerMatchScoreState;
  return proto.bragi.RushSoccerMatchScoreState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerMatchScoreState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerMatchScoreState}
 */
proto.bragi.RushSoccerMatchScoreState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHomeScore(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAwayScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerMatchScoreState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerMatchScoreState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerMatchScoreState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerMatchScoreState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHomeScore();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAwayScore();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 home_score = 1;
 * @return {number}
 */
proto.bragi.RushSoccerMatchScoreState.prototype.getHomeScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushSoccerMatchScoreState} returns this
 */
proto.bragi.RushSoccerMatchScoreState.prototype.setHomeScore = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 away_score = 2;
 * @return {number}
 */
proto.bragi.RushSoccerMatchScoreState.prototype.getAwayScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushSoccerMatchScoreState} returns this
 */
proto.bragi.RushSoccerMatchScoreState.prototype.setAwayScore = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerCurrentMapScoreState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerCurrentMapScoreState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerCurrentMapScoreState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerCurrentMapScoreState.toObject = function(includeInstance, msg) {
  var f, obj = {
    homeGoals: jspb.Message.getFieldWithDefault(msg, 1, 0),
    awayGoals: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerCurrentMapScoreState}
 */
proto.bragi.RushSoccerCurrentMapScoreState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerCurrentMapScoreState;
  return proto.bragi.RushSoccerCurrentMapScoreState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerCurrentMapScoreState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerCurrentMapScoreState}
 */
proto.bragi.RushSoccerCurrentMapScoreState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHomeGoals(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAwayGoals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerCurrentMapScoreState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerCurrentMapScoreState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerCurrentMapScoreState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerCurrentMapScoreState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHomeGoals();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAwayGoals();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 home_goals = 1;
 * @return {number}
 */
proto.bragi.RushSoccerCurrentMapScoreState.prototype.getHomeGoals = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushSoccerCurrentMapScoreState} returns this
 */
proto.bragi.RushSoccerCurrentMapScoreState.prototype.setHomeGoals = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 away_goals = 2;
 * @return {number}
 */
proto.bragi.RushSoccerCurrentMapScoreState.prototype.getAwayGoals = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushSoccerCurrentMapScoreState} returns this
 */
proto.bragi.RushSoccerCurrentMapScoreState.prototype.setAwayGoals = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bragi.RushSoccerTimelineState.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerTimelineState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerTimelineState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerTimelineState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerTimelineState.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.bragi.RushSoccerTimelineEvent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerTimelineState}
 */
proto.bragi.RushSoccerTimelineState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerTimelineState;
  return proto.bragi.RushSoccerTimelineState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerTimelineState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerTimelineState}
 */
proto.bragi.RushSoccerTimelineState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushSoccerTimelineEvent;
      reader.readMessage(value,proto.bragi.RushSoccerTimelineEvent.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerTimelineState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerTimelineState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerTimelineState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerTimelineState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bragi.RushSoccerTimelineEvent.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RushSoccerTimelineEvent events = 1;
 * @return {!Array<!proto.bragi.RushSoccerTimelineEvent>}
 */
proto.bragi.RushSoccerTimelineState.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.bragi.RushSoccerTimelineEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bragi.RushSoccerTimelineEvent, 1));
};


/**
 * @param {!Array<!proto.bragi.RushSoccerTimelineEvent>} value
 * @return {!proto.bragi.RushSoccerTimelineState} returns this
*/
proto.bragi.RushSoccerTimelineState.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bragi.RushSoccerTimelineEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bragi.RushSoccerTimelineEvent}
 */
proto.bragi.RushSoccerTimelineState.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bragi.RushSoccerTimelineEvent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bragi.RushSoccerTimelineState} returns this
 */
proto.bragi.RushSoccerTimelineState.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerTimelineEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerTimelineEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerTimelineEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerTimelineEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    eventType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    realTime: (f = msg.getRealTime()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    gameTime: (f = msg.getGameTime()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    period: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerTimelineEvent}
 */
proto.bragi.RushSoccerTimelineEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerTimelineEvent;
  return proto.bragi.RushSoccerTimelineEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerTimelineEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerTimelineEvent}
 */
proto.bragi.RushSoccerTimelineEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamUrn(value);
      break;
    case 2:
      var value = /** @type {!proto.bragi.RushSoccerEventType} */ (reader.readEnum());
      msg.setEventType(value);
      break;
    case 3:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setRealTime(value);
      break;
    case 4:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setGameTime(value);
      break;
    case 5:
      var value = /** @type {!proto.bragi.RushSoccerPeriod} */ (reader.readEnum());
      msg.setPeriod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerTimelineEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerTimelineEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerTimelineEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerTimelineEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEventType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getRealTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getGameTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getPeriod();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional string team_urn = 1;
 * @return {string}
 */
proto.bragi.RushSoccerTimelineEvent.prototype.getTeamUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushSoccerTimelineEvent} returns this
 */
proto.bragi.RushSoccerTimelineEvent.prototype.setTeamUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional RushSoccerEventType event_type = 2;
 * @return {!proto.bragi.RushSoccerEventType}
 */
proto.bragi.RushSoccerTimelineEvent.prototype.getEventType = function() {
  return /** @type {!proto.bragi.RushSoccerEventType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bragi.RushSoccerEventType} value
 * @return {!proto.bragi.RushSoccerTimelineEvent} returns this
 */
proto.bragi.RushSoccerTimelineEvent.prototype.setEventType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional google.protobuf.Duration real_time = 3;
 * @return {?proto.google.protobuf.Duration}
 */
proto.bragi.RushSoccerTimelineEvent.prototype.getRealTime = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 3));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.bragi.RushSoccerTimelineEvent} returns this
*/
proto.bragi.RushSoccerTimelineEvent.prototype.setRealTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerTimelineEvent} returns this
 */
proto.bragi.RushSoccerTimelineEvent.prototype.clearRealTime = function() {
  return this.setRealTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerTimelineEvent.prototype.hasRealTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Duration game_time = 4;
 * @return {?proto.google.protobuf.Duration}
 */
proto.bragi.RushSoccerTimelineEvent.prototype.getGameTime = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 4));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.bragi.RushSoccerTimelineEvent} returns this
*/
proto.bragi.RushSoccerTimelineEvent.prototype.setGameTime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerTimelineEvent} returns this
 */
proto.bragi.RushSoccerTimelineEvent.prototype.clearGameTime = function() {
  return this.setGameTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerTimelineEvent.prototype.hasGameTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RushSoccerPeriod period = 5;
 * @return {!proto.bragi.RushSoccerPeriod}
 */
proto.bragi.RushSoccerTimelineEvent.prototype.getPeriod = function() {
  return /** @type {!proto.bragi.RushSoccerPeriod} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.bragi.RushSoccerPeriod} value
 * @return {!proto.bragi.RushSoccerTimelineEvent} returns this
 */
proto.bragi.RushSoccerTimelineEvent.prototype.setPeriod = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.UpdateCase = {
  UPDATE_NOT_SET: 0,
  GAME_TIME: 1,
  SCORE: 2,
  TEAM_CURRENT_MAP_STATE: 3,
  TEAM_CURRENT_MAP_PARTIAL_UPDATE: 4
};

/**
 * @return {proto.bragi.RushSoccerCurrentMapStatePartialUpdate.UpdateCase}
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.prototype.getUpdateCase = function() {
  return /** @type {proto.bragi.RushSoccerCurrentMapStatePartialUpdate.UpdateCase} */(jspb.Message.computeOneofCase(this, proto.bragi.RushSoccerCurrentMapStatePartialUpdate.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerCurrentMapStatePartialUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerCurrentMapStatePartialUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameTime: (f = msg.getGameTime()) && proto.bragi.RushSoccerCurrentMapTimeState.toObject(includeInstance, f),
    score: (f = msg.getScore()) && proto.bragi.RushSoccerCurrentMapScoreState.toObject(includeInstance, f),
    teamCurrentMapState: (f = msg.getTeamCurrentMapState()) && proto.bragi.RushSoccerTeamCurrentMapState.toObject(includeInstance, f),
    teamCurrentMapPartialUpdate: (f = msg.getTeamCurrentMapPartialUpdate()) && proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerCurrentMapStatePartialUpdate}
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerCurrentMapStatePartialUpdate;
  return proto.bragi.RushSoccerCurrentMapStatePartialUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerCurrentMapStatePartialUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerCurrentMapStatePartialUpdate}
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushSoccerCurrentMapTimeState;
      reader.readMessage(value,proto.bragi.RushSoccerCurrentMapTimeState.deserializeBinaryFromReader);
      msg.setGameTime(value);
      break;
    case 2:
      var value = new proto.bragi.RushSoccerCurrentMapScoreState;
      reader.readMessage(value,proto.bragi.RushSoccerCurrentMapScoreState.deserializeBinaryFromReader);
      msg.setScore(value);
      break;
    case 3:
      var value = new proto.bragi.RushSoccerTeamCurrentMapState;
      reader.readMessage(value,proto.bragi.RushSoccerTeamCurrentMapState.deserializeBinaryFromReader);
      msg.setTeamCurrentMapState(value);
      break;
    case 4:
      var value = new proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate;
      reader.readMessage(value,proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.deserializeBinaryFromReader);
      msg.setTeamCurrentMapPartialUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerCurrentMapStatePartialUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerCurrentMapStatePartialUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.RushSoccerCurrentMapTimeState.serializeBinaryToWriter
    );
  }
  f = message.getScore();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushSoccerCurrentMapScoreState.serializeBinaryToWriter
    );
  }
  f = message.getTeamCurrentMapState();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.RushSoccerTeamCurrentMapState.serializeBinaryToWriter
    );
  }
  f = message.getTeamCurrentMapPartialUpdate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * optional RushSoccerCurrentMapTimeState game_time = 1;
 * @return {?proto.bragi.RushSoccerCurrentMapTimeState}
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.prototype.getGameTime = function() {
  return /** @type{?proto.bragi.RushSoccerCurrentMapTimeState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerCurrentMapTimeState, 1));
};


/**
 * @param {?proto.bragi.RushSoccerCurrentMapTimeState|undefined} value
 * @return {!proto.bragi.RushSoccerCurrentMapStatePartialUpdate} returns this
*/
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.prototype.setGameTime = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.RushSoccerCurrentMapStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.prototype.clearGameTime = function() {
  return this.setGameTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.prototype.hasGameTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RushSoccerCurrentMapScoreState score = 2;
 * @return {?proto.bragi.RushSoccerCurrentMapScoreState}
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.prototype.getScore = function() {
  return /** @type{?proto.bragi.RushSoccerCurrentMapScoreState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerCurrentMapScoreState, 2));
};


/**
 * @param {?proto.bragi.RushSoccerCurrentMapScoreState|undefined} value
 * @return {!proto.bragi.RushSoccerCurrentMapStatePartialUpdate} returns this
*/
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.prototype.setScore = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.RushSoccerCurrentMapStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.prototype.clearScore = function() {
  return this.setScore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.prototype.hasScore = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RushSoccerTeamCurrentMapState team_current_map_state = 3;
 * @return {?proto.bragi.RushSoccerTeamCurrentMapState}
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.prototype.getTeamCurrentMapState = function() {
  return /** @type{?proto.bragi.RushSoccerTeamCurrentMapState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerTeamCurrentMapState, 3));
};


/**
 * @param {?proto.bragi.RushSoccerTeamCurrentMapState|undefined} value
 * @return {!proto.bragi.RushSoccerCurrentMapStatePartialUpdate} returns this
*/
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.prototype.setTeamCurrentMapState = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.bragi.RushSoccerCurrentMapStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.prototype.clearTeamCurrentMapState = function() {
  return this.setTeamCurrentMapState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.prototype.hasTeamCurrentMapState = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RushSoccerTeamCurrentMapStatePartialUpdate team_current_map_partial_update = 4;
 * @return {?proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate}
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.prototype.getTeamCurrentMapPartialUpdate = function() {
  return /** @type{?proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate, 4));
};


/**
 * @param {?proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate|undefined} value
 * @return {!proto.bragi.RushSoccerCurrentMapStatePartialUpdate} returns this
*/
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.prototype.setTeamCurrentMapPartialUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.bragi.RushSoccerCurrentMapStatePartialUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.prototype.clearTeamCurrentMapPartialUpdate = function() {
  return this.setTeamCurrentMapPartialUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerCurrentMapStatePartialUpdate.prototype.hasTeamCurrentMapPartialUpdate = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerCurrentMapState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerCurrentMapState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerCurrentMapState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerCurrentMapState.toObject = function(includeInstance, msg) {
  var f, obj = {
    period: jspb.Message.getFieldWithDefault(msg, 1, 0),
    gameTime: (f = msg.getGameTime()) && proto.bragi.RushSoccerCurrentMapTimeState.toObject(includeInstance, f),
    score: (f = msg.getScore()) && proto.bragi.RushSoccerCurrentMapScoreState.toObject(includeInstance, f),
    mapPaused: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    teamsMap: (f = msg.getTeamsMap()) ? f.toObject(includeInstance, proto.bragi.RushSoccerTeamCurrentMapState.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerCurrentMapState}
 */
proto.bragi.RushSoccerCurrentMapState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerCurrentMapState;
  return proto.bragi.RushSoccerCurrentMapState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerCurrentMapState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerCurrentMapState}
 */
proto.bragi.RushSoccerCurrentMapState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.bragi.RushSoccerPeriod} */ (reader.readEnum());
      msg.setPeriod(value);
      break;
    case 2:
      var value = new proto.bragi.RushSoccerCurrentMapTimeState;
      reader.readMessage(value,proto.bragi.RushSoccerCurrentMapTimeState.deserializeBinaryFromReader);
      msg.setGameTime(value);
      break;
    case 3:
      var value = new proto.bragi.RushSoccerCurrentMapScoreState;
      reader.readMessage(value,proto.bragi.RushSoccerCurrentMapScoreState.deserializeBinaryFromReader);
      msg.setScore(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMapPaused(value);
      break;
    case 5:
      var value = msg.getTeamsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.bragi.RushSoccerTeamCurrentMapState.deserializeBinaryFromReader, "", new proto.bragi.RushSoccerTeamCurrentMapState());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerCurrentMapState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerCurrentMapState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerCurrentMapState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerCurrentMapState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeriod();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getGameTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushSoccerCurrentMapTimeState.serializeBinaryToWriter
    );
  }
  f = message.getScore();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.RushSoccerCurrentMapScoreState.serializeBinaryToWriter
    );
  }
  f = message.getMapPaused();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getTeamsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.bragi.RushSoccerTeamCurrentMapState.serializeBinaryToWriter);
  }
};


/**
 * optional RushSoccerPeriod period = 1;
 * @return {!proto.bragi.RushSoccerPeriod}
 */
proto.bragi.RushSoccerCurrentMapState.prototype.getPeriod = function() {
  return /** @type {!proto.bragi.RushSoccerPeriod} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.bragi.RushSoccerPeriod} value
 * @return {!proto.bragi.RushSoccerCurrentMapState} returns this
 */
proto.bragi.RushSoccerCurrentMapState.prototype.setPeriod = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional RushSoccerCurrentMapTimeState game_time = 2;
 * @return {?proto.bragi.RushSoccerCurrentMapTimeState}
 */
proto.bragi.RushSoccerCurrentMapState.prototype.getGameTime = function() {
  return /** @type{?proto.bragi.RushSoccerCurrentMapTimeState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerCurrentMapTimeState, 2));
};


/**
 * @param {?proto.bragi.RushSoccerCurrentMapTimeState|undefined} value
 * @return {!proto.bragi.RushSoccerCurrentMapState} returns this
*/
proto.bragi.RushSoccerCurrentMapState.prototype.setGameTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerCurrentMapState} returns this
 */
proto.bragi.RushSoccerCurrentMapState.prototype.clearGameTime = function() {
  return this.setGameTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerCurrentMapState.prototype.hasGameTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RushSoccerCurrentMapScoreState score = 3;
 * @return {?proto.bragi.RushSoccerCurrentMapScoreState}
 */
proto.bragi.RushSoccerCurrentMapState.prototype.getScore = function() {
  return /** @type{?proto.bragi.RushSoccerCurrentMapScoreState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerCurrentMapScoreState, 3));
};


/**
 * @param {?proto.bragi.RushSoccerCurrentMapScoreState|undefined} value
 * @return {!proto.bragi.RushSoccerCurrentMapState} returns this
*/
proto.bragi.RushSoccerCurrentMapState.prototype.setScore = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerCurrentMapState} returns this
 */
proto.bragi.RushSoccerCurrentMapState.prototype.clearScore = function() {
  return this.setScore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerCurrentMapState.prototype.hasScore = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool map_paused = 4;
 * @return {boolean}
 */
proto.bragi.RushSoccerCurrentMapState.prototype.getMapPaused = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bragi.RushSoccerCurrentMapState} returns this
 */
proto.bragi.RushSoccerCurrentMapState.prototype.setMapPaused = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * map<string, RushSoccerTeamCurrentMapState> teams = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.bragi.RushSoccerTeamCurrentMapState>}
 */
proto.bragi.RushSoccerCurrentMapState.prototype.getTeamsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.bragi.RushSoccerTeamCurrentMapState>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.bragi.RushSoccerTeamCurrentMapState));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.bragi.RushSoccerCurrentMapState} returns this
 */
proto.bragi.RushSoccerCurrentMapState.prototype.clearTeamsMap = function() {
  this.getTeamsMap().clear();
  return this;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerCurrentMapTimeState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerCurrentMapTimeState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerCurrentMapTimeState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerCurrentMapTimeState.toObject = function(includeInstance, msg) {
  var f, obj = {
    realTime: (f = msg.getRealTime()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    gameTime: (f = msg.getGameTime()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerCurrentMapTimeState}
 */
proto.bragi.RushSoccerCurrentMapTimeState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerCurrentMapTimeState;
  return proto.bragi.RushSoccerCurrentMapTimeState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerCurrentMapTimeState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerCurrentMapTimeState}
 */
proto.bragi.RushSoccerCurrentMapTimeState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setRealTime(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setGameTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerCurrentMapTimeState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerCurrentMapTimeState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerCurrentMapTimeState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerCurrentMapTimeState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRealTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getGameTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Duration real_time = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.bragi.RushSoccerCurrentMapTimeState.prototype.getRealTime = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.bragi.RushSoccerCurrentMapTimeState} returns this
*/
proto.bragi.RushSoccerCurrentMapTimeState.prototype.setRealTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerCurrentMapTimeState} returns this
 */
proto.bragi.RushSoccerCurrentMapTimeState.prototype.clearRealTime = function() {
  return this.setRealTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerCurrentMapTimeState.prototype.hasRealTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Duration game_time = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.bragi.RushSoccerCurrentMapTimeState.prototype.getGameTime = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.bragi.RushSoccerCurrentMapTimeState} returns this
*/
proto.bragi.RushSoccerCurrentMapTimeState.prototype.setGameTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerCurrentMapTimeState} returns this
 */
proto.bragi.RushSoccerCurrentMapTimeState.prototype.clearGameTime = function() {
  return this.setGameTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerCurrentMapTimeState.prototype.hasGameTime = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    payload: (f = msg.getPayload()) && proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate}
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate;
  return proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate}
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamUrn(value);
      break;
    case 2:
      var value = new proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload;
      reader.readMessage(value,proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  MAP_STATISTICS: 1,
  PLAYER: 2
};

/**
 * @return {proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.PayloadCase}
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.prototype.getPayloadCase = function() {
  return /** @type {proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    mapStatistics: (f = msg.getMapStatistics()) && proto.bragi.RushSoccerTeamCurrentMapStatisticsState.toObject(includeInstance, f),
    player: (f = msg.getPlayer()) && proto.bragi.RushSoccerPlayerCurrentMapState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload}
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload;
  return proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload}
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bragi.RushSoccerTeamCurrentMapStatisticsState;
      reader.readMessage(value,proto.bragi.RushSoccerTeamCurrentMapStatisticsState.deserializeBinaryFromReader);
      msg.setMapStatistics(value);
      break;
    case 2:
      var value = new proto.bragi.RushSoccerPlayerCurrentMapState;
      reader.readMessage(value,proto.bragi.RushSoccerPlayerCurrentMapState.deserializeBinaryFromReader);
      msg.setPlayer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMapStatistics();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bragi.RushSoccerTeamCurrentMapStatisticsState.serializeBinaryToWriter
    );
  }
  f = message.getPlayer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushSoccerPlayerCurrentMapState.serializeBinaryToWriter
    );
  }
};


/**
 * optional RushSoccerTeamCurrentMapStatisticsState map_statistics = 1;
 * @return {?proto.bragi.RushSoccerTeamCurrentMapStatisticsState}
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.prototype.getMapStatistics = function() {
  return /** @type{?proto.bragi.RushSoccerTeamCurrentMapStatisticsState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerTeamCurrentMapStatisticsState, 1));
};


/**
 * @param {?proto.bragi.RushSoccerTeamCurrentMapStatisticsState|undefined} value
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload} returns this
*/
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.prototype.setMapStatistics = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload} returns this
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.prototype.clearMapStatistics = function() {
  return this.setMapStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.prototype.hasMapStatistics = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RushSoccerPlayerCurrentMapState player = 2;
 * @return {?proto.bragi.RushSoccerPlayerCurrentMapState}
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.prototype.getPlayer = function() {
  return /** @type{?proto.bragi.RushSoccerPlayerCurrentMapState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerPlayerCurrentMapState, 2));
};


/**
 * @param {?proto.bragi.RushSoccerPlayerCurrentMapState|undefined} value
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload} returns this
*/
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.prototype.setPlayer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload} returns this
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.prototype.clearPlayer = function() {
  return this.setPlayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload.prototype.hasPlayer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string team_urn = 1;
 * @return {string}
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.prototype.getTeamUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.prototype.setTeamUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Payload payload = 2;
 * @return {?proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload}
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.prototype.getPayload = function() {
  return /** @type{?proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload, 2));
};


/**
 * @param {?proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.Payload|undefined} value
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate} returns this
*/
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate} returns this
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerTeamCurrentMapStatePartialUpdate.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerTeamCurrentMapState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerTeamCurrentMapState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerTeamCurrentMapState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerTeamCurrentMapState.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mapStatistics: (f = msg.getMapStatistics()) && proto.bragi.RushSoccerTeamCurrentMapStatisticsState.toObject(includeInstance, f),
    player: (f = msg.getPlayer()) && proto.bragi.RushSoccerPlayerCurrentMapState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerTeamCurrentMapState}
 */
proto.bragi.RushSoccerTeamCurrentMapState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerTeamCurrentMapState;
  return proto.bragi.RushSoccerTeamCurrentMapState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerTeamCurrentMapState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerTeamCurrentMapState}
 */
proto.bragi.RushSoccerTeamCurrentMapState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamUrn(value);
      break;
    case 2:
      var value = new proto.bragi.RushSoccerTeamCurrentMapStatisticsState;
      reader.readMessage(value,proto.bragi.RushSoccerTeamCurrentMapStatisticsState.deserializeBinaryFromReader);
      msg.setMapStatistics(value);
      break;
    case 3:
      var value = new proto.bragi.RushSoccerPlayerCurrentMapState;
      reader.readMessage(value,proto.bragi.RushSoccerPlayerCurrentMapState.deserializeBinaryFromReader);
      msg.setPlayer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerTeamCurrentMapState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerTeamCurrentMapState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerTeamCurrentMapState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerTeamCurrentMapState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMapStatistics();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bragi.RushSoccerTeamCurrentMapStatisticsState.serializeBinaryToWriter
    );
  }
  f = message.getPlayer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bragi.RushSoccerPlayerCurrentMapState.serializeBinaryToWriter
    );
  }
};


/**
 * optional string team_urn = 1;
 * @return {string}
 */
proto.bragi.RushSoccerTeamCurrentMapState.prototype.getTeamUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushSoccerTeamCurrentMapState} returns this
 */
proto.bragi.RushSoccerTeamCurrentMapState.prototype.setTeamUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional RushSoccerTeamCurrentMapStatisticsState map_statistics = 2;
 * @return {?proto.bragi.RushSoccerTeamCurrentMapStatisticsState}
 */
proto.bragi.RushSoccerTeamCurrentMapState.prototype.getMapStatistics = function() {
  return /** @type{?proto.bragi.RushSoccerTeamCurrentMapStatisticsState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerTeamCurrentMapStatisticsState, 2));
};


/**
 * @param {?proto.bragi.RushSoccerTeamCurrentMapStatisticsState|undefined} value
 * @return {!proto.bragi.RushSoccerTeamCurrentMapState} returns this
*/
proto.bragi.RushSoccerTeamCurrentMapState.prototype.setMapStatistics = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerTeamCurrentMapState} returns this
 */
proto.bragi.RushSoccerTeamCurrentMapState.prototype.clearMapStatistics = function() {
  return this.setMapStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerTeamCurrentMapState.prototype.hasMapStatistics = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RushSoccerPlayerCurrentMapState player = 3;
 * @return {?proto.bragi.RushSoccerPlayerCurrentMapState}
 */
proto.bragi.RushSoccerTeamCurrentMapState.prototype.getPlayer = function() {
  return /** @type{?proto.bragi.RushSoccerPlayerCurrentMapState} */ (
    jspb.Message.getWrapperField(this, proto.bragi.RushSoccerPlayerCurrentMapState, 3));
};


/**
 * @param {?proto.bragi.RushSoccerPlayerCurrentMapState|undefined} value
 * @return {!proto.bragi.RushSoccerTeamCurrentMapState} returns this
*/
proto.bragi.RushSoccerTeamCurrentMapState.prototype.setPlayer = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bragi.RushSoccerTeamCurrentMapState} returns this
 */
proto.bragi.RushSoccerTeamCurrentMapState.prototype.clearPlayer = function() {
  return this.setPlayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bragi.RushSoccerTeamCurrentMapState.prototype.hasPlayer = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerPlayerCurrentMapState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerPlayerCurrentMapState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerPlayerCurrentMapState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerPlayerCurrentMapState.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerUrn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    extName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerPlayerCurrentMapState}
 */
proto.bragi.RushSoccerPlayerCurrentMapState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerPlayerCurrentMapState;
  return proto.bragi.RushSoccerPlayerCurrentMapState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerPlayerCurrentMapState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerPlayerCurrentMapState}
 */
proto.bragi.RushSoccerPlayerCurrentMapState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerUrn(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerPlayerCurrentMapState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerPlayerCurrentMapState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerPlayerCurrentMapState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerPlayerCurrentMapState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExtName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string player_urn = 1;
 * @return {string}
 */
proto.bragi.RushSoccerPlayerCurrentMapState.prototype.getPlayerUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushSoccerPlayerCurrentMapState} returns this
 */
proto.bragi.RushSoccerPlayerCurrentMapState.prototype.setPlayerUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ext_name = 2;
 * @return {string}
 */
proto.bragi.RushSoccerPlayerCurrentMapState.prototype.getExtName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bragi.RushSoccerPlayerCurrentMapState} returns this
 */
proto.bragi.RushSoccerPlayerCurrentMapState.prototype.setExtName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.prototype.toObject = function(opt_includeInstance) {
  return proto.bragi.RushSoccerTeamCurrentMapStatisticsState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bragi.RushSoccerTeamCurrentMapStatisticsState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.toObject = function(includeInstance, msg) {
  var f, obj = {
    goals: jspb.Message.getFieldWithDefault(msg, 1, 0),
    goalsHt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    penaltyKicks: jspb.Message.getFieldWithDefault(msg, 3, 0),
    redCards: jspb.Message.getFieldWithDefault(msg, 4, 0),
    yellowCards: jspb.Message.getFieldWithDefault(msg, 5, 0),
    freeKicks: jspb.Message.getFieldWithDefault(msg, 6, 0),
    cornerKicks: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatisticsState}
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bragi.RushSoccerTeamCurrentMapStatisticsState;
  return proto.bragi.RushSoccerTeamCurrentMapStatisticsState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bragi.RushSoccerTeamCurrentMapStatisticsState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatisticsState}
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGoals(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGoalsHt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPenaltyKicks(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRedCards(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setYellowCards(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFreeKicks(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCornerKicks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bragi.RushSoccerTeamCurrentMapStatisticsState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bragi.RushSoccerTeamCurrentMapStatisticsState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGoals();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getGoalsHt();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPenaltyKicks();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getRedCards();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getYellowCards();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getFreeKicks();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getCornerKicks();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional uint32 goals = 1;
 * @return {number}
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.prototype.getGoals = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.prototype.setGoals = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 goals_ht = 2;
 * @return {number}
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.prototype.getGoalsHt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.prototype.setGoalsHt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 penalty_kicks = 3;
 * @return {number}
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.prototype.getPenaltyKicks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.prototype.setPenaltyKicks = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 red_cards = 4;
 * @return {number}
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.prototype.getRedCards = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.prototype.setRedCards = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 yellow_cards = 5;
 * @return {number}
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.prototype.getYellowCards = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.prototype.setYellowCards = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 free_kicks = 6;
 * @return {number}
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.prototype.getFreeKicks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.prototype.setFreeKicks = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 corner_kicks = 7;
 * @return {number}
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.prototype.getCornerKicks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.bragi.RushSoccerTeamCurrentMapStatisticsState} returns this
 */
proto.bragi.RushSoccerTeamCurrentMapStatisticsState.prototype.setCornerKicks = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * @enum {number}
 */
proto.bragi.RushSoccerEventType = {
  RUSH_SOCCER_EVENT_TYPE_UNSPECIFIED: 0,
  RUSH_SOCCER_EVENT_TYPE_GOAL: 1,
  RUSH_SOCCER_EVENT_TYPE_PENALTY: 2,
  RUSH_SOCCER_EVENT_TYPE_RED_CARD: 3,
  RUSH_SOCCER_EVENT_TYPE_YELLOW_CARD: 4,
  RUSH_SOCCER_EVENT_TYPE_FREE_KICK: 5,
  RUSH_SOCCER_EVENT_TYPE_CORNER_KICK: 6,
  RUSH_SOCCER_EVENT_TYPE_PERIOD_CHANGE: 7
};

/**
 * @enum {number}
 */
proto.bragi.RushSoccerPeriod = {
  RUSH_SOCCER_PERIOD_UNSPECIFIED: 0,
  RUSH_SOCCER_PERIOD_FIRST: 1,
  RUSH_SOCCER_PERIOD_SECOND: 2
};

goog.object.extend(exports, proto.bragi);
