syntax = "proto3";

package bragi;

option go_package = "oddin.gg/bragi";
option java_package = "com.oddin.bragi";

import "google/protobuf/timestamp.proto";
import "bragi/csgo.proto";
import "bragi/common.proto";

service Bragi {

  // LiveDataFeed gRPC stream returning LiveDataFeedMessage one direction stream
  rpc LiveDataFeed(LiveDataFeedRequest) returns (stream LiveDataFeedMessage) {}

}

message LiveDataFeedRequest {
  // Represent timestamp since matches states should be received. If value is null then currently played matches are
  // received. If "after" property is defined, then matches which were updated after the "after" timestamp are received.
  optional google.protobuf.Timestamp after = 1;
}

message LiveDataFeedMessage{

  oneof message {
    KeepAlive keepalive = 1;
    MatchMessage match = 2;
  }
}

// Heartbeat message which is sent periodically.
message KeepAlive {
  google.protobuf.Timestamp timestamp = 1;
}

// At the beginning, when the stream is established, an initial MatchMessage with a MatchSnapshot payload is sent (just only once
// during the stream lifecycle, to recover MatchSnapshot you need to reconnect to server). Cache this MatchSnapshot into memory.
// Then only AnnouncementUpdate or game update (eg. CsgoMatchMessage) can be received. Those updates are supposed to be applied
// on cached MatchSnapshot. If AnnouncementUpdate is received then append its "payload" property value to the array of "announcements"
// in cached MatchSnapshot. If update (e.g. CsgoMatchMessage) payload is received then apply this update on "match_state"
// property in cached MatchSnapshot. For both update cases do not forget also to update "sequence" and "timestamp" properties
// in the cached MatchSnapshot with the values from the received MatchMessage.
message MatchMessage {
    oneof message {

      // Append announcement's payload to property announcements array in MatchSnapshot.
      AnnouncementUpdate announcement = 1;

      // Message which wraps updates which should be applied on "match_state" property in MatchSnapshot.
      CsgoMatchMessage csgo = 2;

      // LolMatchMessage lol = 4;
    }
}
