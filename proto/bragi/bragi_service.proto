syntax = "proto3";

package bragi;

option go_package = "oddin.gg/bragi";
option java_package = "com.oddin.bragi";

import "bragi/historical_statistics/statistics.proto";
import "bragi/stream/data_feed.proto";


service Bragi {

  // Sports gRPC remote call returning SportsResponse
  rpc Sports (statistics.SportsRequest) returns (statistics.SportsResponse) {}

  // Tournaments gRPC remote call returning TournamentResponse
  rpc Tournaments(statistics.TournamentsRequest) returns(statistics.TournamentResponse) {}

  // TournamentInfo gRPC remote call returning TournamentInfoResponse
  rpc TournamentInfo(statistics.TournamentInfoRequest) returns (statistics.TournamentInfoResponse) {}

  // TeamHistoricalStatistics gRPC remote call returning HistoricalStatisticsResponse
  rpc TeamHistoricalStatistics (statistics.TeamHistoricalStatisticsRequest) returns (statistics.HistoricalStatisticsResponse) {}

  // LastFiveEncounters gRPC remote call returning LastFiveEncountersResponse
  rpc LastFiveEncounters (statistics.LastFiveEncountersRequest) returns (statistics.LastFiveEncountersResponse) {}

  // PostMapStatistics gRPC remote call returning PostMapStatisticsResponse
  rpc PostMapStatistics(statistics.PostMapStatisticsRequest) returns (statistics.PostMapStatisticsResponse) {}

  // TournamentStatistics gRPC remote call returning TournamentStatisticsResponse
  rpc TournamentStatistics(statistics.TournamentStatisticsRequest) returns (statistics.TournamentStatisticsResponse) {}

  // TeamTournamentStatistics gRPC remote call returning TeamTournamentStatisticsResponse
  rpc TeamTournamentStatistics(statistics.TeamTournamentStatisticsRequest) returns (statistics.TeamTournamentStatisticsResponse) {}

  // PlayerStatisticsAccordingRole gRPC remote call returning PlayerStatisticsAccordingRoleResponse
  rpc PlayerStatisticsAccordingRole(statistics.PlayerStatisticsAccordingRoleRequest) returns (statistics.PlayerStatisticsAccordingRoleResponse) {}

  // streamed ----------------------------------------------------------------------------------------------------------

  // LiveDataFeed gRPC stream returning LiveDataFeedMessage one direction stream
  rpc LiveDataFeed(live.LiveDataFeedRequest) returns (stream live.LiveDataFeedMessage) {}
}
